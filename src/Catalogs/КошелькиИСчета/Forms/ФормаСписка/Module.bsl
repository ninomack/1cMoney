////////////////////////////////////////////////////////////////////////////////
//Справочник.КошелькиИСчета.ФормаСписка
//  используется и для выбора и для просмотра
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОсновнойКошелек = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
	Элементы.ДекорацияИнформацияОбОсновномКошельке.Заголовок = СформироватьТекстОсновногоКошелька(ОсновнойКошелек);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", Константы.ВалютаУчета.Получить());
	
	// Проверяем режим открытия формы списка
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора      = Истина;
		Элементы.Список.ОтображатьКорень = Истина;
		Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		Актуальность = 1;
	КонецЕсли;
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Установка условного оформления для форм списков:
	СуммыИВалюты = Новый Структура("Остаток", Новый Массив);
	СуммыИВалюты.Остаток.Добавить("Остаток");
	СуммыИВалюты.Остаток.Добавить("Валюта");
	РаботаСФормамиСправочников.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "Список", Истина, , СуммыИВалюты);
	ДобавитьУсловноеОформлениеФормы();
	
	// Перенос программно установленного отбора в пользовательские настройки:
	РаботаСФормамиСправочников.ФормаСпискаСправочникаОбработатьПараметрыОтбора(ЭтотОбъект, "Список");
	
	Если ХранилищеСистемныхНастроек.Загрузить(ЭтотОбъект.ИмяФормы + ?(КлючНазначенияИспользования = "", "", "/" + КлючНазначенияИспользования) + "/ТекущиеДанные", ) = Неопределено Тогда
		ОбновитьОтборПоАктуальности();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Элементы.Список.РежимВыбора Тогда
		ОтборСписка = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
		Если ОтборСписка <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ОтборСписка, "Активность");
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьОтборПоАктуальности();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записана операция" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура АктуальностьПриИзменении(Элемент)
	
	ОбновитьОтборПоАктуальности();
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура ИзменитьОстаток(Команда)
	
	ТекущийКошелек = Элементы.Список.ТекущиеДанные;
	Если ТекущийКошелек = Неопределено ИЛИ ТекущийКошелек.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	 
	ПараметрыЗаполнения = Новый Структура("РазделУчета,ОбъектУчета", ПредопределенноеЗначение("ПланСчетов.РазделыУчета.Деньги"), ТекущийКошелек.Ссылка);
	ОткрытьФорму("Документ.ВводИзменениеОстатка.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения));
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьОсновнымКошельком(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ТекстПредупреждения = "";
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.Ссылка = Неопределено Тогда 
		ТекстПредупреждения = НСтр("ru = 'Не выделен кошелек. 
			|Сначала выделите в списке нужный кошелек, потом выберите команду ""Сделать кошельком по умолчанию""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ИначеЕсли ТекущиеДанные.ЭтоГруппа Тогда
		ТекстПредупреждения = НСтр("ru = 'Группа не может быть кошельком по умолчанию. 
			|Выделите в списке кошелек, а не группу, потом выберите команду ""Сделать кошельком по умолчанию""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли; 
	Если НЕ ПустаяСтрока(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли; 
	
	Если ТекущиеДанные.ПометкаУдаления Тогда
		ТекстПредупреждения = НСтр("ru = 'Выбранный кошелек помечен на удаление. 
			|Назначить этот кошелек основным?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОписаниеОповещения = Новый ОписаниеОповещения("СделатьОсновнымКошелькомЗавершение", ЭтотОбъект, ТекущиеДанные.Ссылка);
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет, НСтр("ru = 'Назначение основного кошелька'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()) );
		Возврат;
	КонецЕсли;
	
	СделатьОсновнымКошелькомСервер(ТекущиеДанные.Ссылка);
	Оповестить("Изменилась настройка", Новый Структура("ОсновнойКошелек", ОсновнойКошелек));
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти



#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьУсловноеОформлениеФормы()

	СтандартныйШрифт = Элементы.Список.Шрифт;
	
	// Основной кошелек с пометкой на удаление
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");

	ЭлементОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Список.Ссылка");
	ЭлементОтбора.ВидСравнения    = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение  = Новый ПолеКомпоновкиДанных("ОсновнойКошелек");
	ЭлементОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	ЭлементОтбора.ВидСравнения    = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение  = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Метаданные.ЭлементыСтиля.ОсновнойЭлементСписка.Значение, , , , , , Истина));

	// Основной кошелек без пометки на удаление
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");

	ЭлементОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Список.Ссылка");
	ЭлементОтбора.ВидСравнения    = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение  = Новый ПолеКомпоновкиДанных("ОсновнойКошелек");
	ЭлементОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	ЭлементОтбора.ВидСравнения    = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение  = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Метаданные.ЭлементыСтиля.ОсновнойЭлементСписка.Значение);

КонецПроцедуры

&НаСервере
Процедура СделатьОсновнымКошелькомСервер(Кошелек)

	ПользовательскиеНастройкиДеньгиСервер.ЗаписатьОсновнойКошелек(Кошелек);
	ОсновнойКошелек = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
	Элементы.ДекорацияИнформацияОбОсновномКошельке.Заголовок = СформироватьТекстОсновногоКошелька(Кошелек);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьТекстОсновногоКошелька(Кошелек)

	ШрифтОбычный = Новый Шрифт(,10);
	ШрифтЖирный  = Новый Шрифт(,10, Истина);
	
	Если ЗначениеЗаполнено(Кошелек) Тогда
		Результат = Новый ФорматированнаяСтрока(
				Новый ФорматированнаяСтрока(НСтр("ru = 'Основным кошельком выбран'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ШрифтОбычный),
				Новый ФорматированнаяСтрока(" <", ),
				Новый ФорматированнаяСтрока(Строка(Кошелек), ШрифтЖирный),
				Новый ФорматированнаяСтрока(">. ", ШрифтОбычный),
				Новый ФорматированнаяСтрока(НСтр("ru = 'Он будет использоваться по умолчанию в новых операциях'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ШрифтОбычный)
				);
		
	Иначе
		Результат = Новый ФорматированнаяСтрока(
				Новый ФорматированнаяСтрока(НСтр("ru = 'Не выбран кошелек по умолчанию. Выделите в списке наиболее активный кошелек и выберите в меню команду'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ШрифтОбычный),
				Новый ФорматированнаяСтрока(" """, ШрифтОбычный),
				Новый ФорматированнаяСтрока(НСтр("ru = 'Назначить основным кошельком'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ШрифтЖирный),
				Новый ФорматированнаяСтрока(""" ", ШрифтОбычный)
				);
		
	КонецЕсли; 
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура СделатьОсновнымКошелькомЗавершение(Ответ, Кошелек) Экспорт

	Если Ответ = КодВозвратаДиалога.Да И ЗначениеЗаполнено(Кошелек) Тогда
		СделатьОсновнымКошелькомСервер(Кошелек);
		Оповестить("Изменилась настройка", Новый Структура("ОсновнойКошелек", Кошелек));
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборПоАктуальности()

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ОтборПоАктивности", Актуальность);
	
	Если Элементы.Активность.Видимость <> Актуальность = 0 Тогда
		Элементы.Активность.Видимость = Актуальность = 0;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

