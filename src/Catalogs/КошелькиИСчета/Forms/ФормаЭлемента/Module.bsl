&НаКлиенте 
Перем РазрешеноИзменитьНазначение;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	РаботаСФормамиСправочников.ФормаОбъектаПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект, Истина, Истина, Истина);
	
	ЗначениеНазначения             = Объект.ИспользоватьДляНакоплений;
	ПрежнееНазначениеДляНакоплений = Объект.ИспользоватьДляНакоплений;
	ЗапрещеноМенятьВалюту          = РазделыУчета.ЕстьПроводкиПоОбъектуУчета(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСправочников.ФормаОбъектаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка, Истина, Истина, Истина);
	ОбновитьОстатки();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСФормамиСправочниковКлиент.ФормаОбъектаПриОткрытии(ЭтотОбъект, Отказ, Истина, Истина, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не Объект.Ссылка.Пустая() И ПрежнееНазначениеДляНакоплений <> Объект.ИспользоватьДляНакоплений 
		И ПрежнееНазначениеДляНакоплений И РазрешеноИзменитьНазначение <> Истина Тогда
		
		ТекстВопроса = НСтр("ru = 'После сохранения изменений будет потеряна информация о всех накоплениях, осуществляемых в этом кошельке.
			|Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, ПараметрыЗаписи);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСправочников.ФормаОбъектаПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записан элемент справочника", Новый Структура("ИмяСправочника,Ссылка,ВладелецФормы", "КошелькиИсчета", 
			Объект.Ссылка, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
			
	РаботаСФормамиСправочниковКлиент.ФормаОбъектаПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСправочников.ФормаОбъектаПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
	ЗначениеНазначения             = ТекущийОбъект.ИспользоватьДляНакоплений;
	ПрежнееНазначениеДляНакоплений = ТекущийОбъект.ИспользоватьДляНакоплений;
	
	ОбновитьОстатки();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записан элемент справочника" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ИмяСправочника = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ИмяСправочника", ИмяСправочника) И ИмяСправочника = "КошелькиИСчета"
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			Объект.Родитель = Параметр.Ссылка;
			ТекущийЭлемент  = Элементы.Родитель;
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = "Записана операция" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ВидДокумента = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ВидДокумента", ВидДокумента) И ВидДокумента = "ВводИзменениеОстатка"
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			ПриИзмененииОстаткаСервер();
			ОбновитьОтображениеДанных();
		КонецЕсли; 
		
	КонецЕсли; 

	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ОбработатьОповещениеДобавленияФайла(ЭтотОбъект, Параметр);
	ИначеЕсли (ПрикрепленныеФайлыКлиент.ЭтоИзменениеСпискаМультимедиа(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	КонецЕсли; 
	#КонецОбласти
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТипСчетаПриИзменении(Элемент)
	
	Если НаименованиеАвтоматические Тогда
		Объект.Наименование = ПолучитьНаименованиеНовогоКошелька(Объект.ТипСчета, Объект.Валюта);
	КонецЕсли; 
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	Если НаименованиеАвтоматические Тогда
		Объект.Наименование = ПолучитьНаименованиеНовогоКошелька(Объект.ТипСчета, Объект.Валюта);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеПриИзмененииСервер();

КонецПроцедуры

&НаКлиенте
Процедура ПереключательНазначенияПриИзменении(Элемент)
	
	Объект.ИспользоватьДляНакоплений = ЗначениеНазначения;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий", Заголовок);
	
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеТекущегоФайлаНажатие(Элемент, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаТекущийФайл(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлКнопкаНавигацииНажатие(Элемент)
	ПрикрепленныеФайлыКлиент.ФайлКнопкаНавигацииНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры

#КонецОбласти 


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьОстаток(Команда)
	
	ЗначенияЗаполнения = Новый Структура("ОбъектУчета", Объект.Ссылка);
	ПараметрыДокумента = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Документ.ВводИзменениеОстатка.ФормаОбъекта", ПараметрыДокумента, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстаток(Команда)
	
	ТекущийОстаток = ПолучитьТекущийОстаток(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Записать(Новый Структура("ЗакрытьПослеЗаписи", Истина));
	
КонецПроцедуры
 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьОстатки()
	
	Если Объект.Ссылка.Пустая() Тогда
		НаименованиеАвтоматические = Истина;
	Иначе
		НаименованиеАвтоматические = (НЕ ЗначениеЗаполнено(Объект.Наименование)) 
			ИЛИ Объект.Наименование = Справочники.КошелькиИСчета.ПолучитьНаименованиеПоУмолчанию(Объект.ТипСчета, Объект.Валюта);
	КонецЕсли;
	ТекущийОстаток = ПолучитьТекущийОстаток(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Форма.Элементы.Валюта.Доступность = НЕ Форма.ЗапрещеноМенятьВалюту;
	
	ЭтоБанковскаяКарта = (Форма.Объект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаДебетовая")
							ИЛИ Форма.Объект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаКредитная")
							ИЛИ Форма.Объект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаУниверсальная"));
							
	ЕстьКредитныйЛимит = (Форма.Объект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаКредитная")
							ИЛИ Форма.Объект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаУниверсальная"));
	
	Форма.Элементы.ГруппаКредитныйЛимитВалюта.Видимость = ЭтоБанковскаяКарта;
	Форма.Элементы.ГруппаКредитныйЛимитВалюта.Доступность = ЕстьКредитныйЛимит;
	
	Если Форма.ЗапрещеноМенятьВалюту Тогда
		Если Форма.ПрежнееНазначениеДляНакоплений = Объект.ИспользоватьДляНакоплений Тогда
			Элементы.ПереключательНазначения.Подсказка = "";
			Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок = "";
			Элементы.ПереключательНазначения.ОтображениеПодсказки = ОтображениеПодсказки.Авто;
		ИначеЕсли Форма.ПрежнееНазначениеДляНакоплений И НЕ Объект.ИспользоватьДляНакоплений Тогда
			Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок 
				= НСтр("ru = 'После записи кошелька будет удалена вся информация о его накоплениях!'");
			Элементы.ПереключательНазначения.РасширеннаяПодсказка.ЦветТекста = WebЦвета.Красный;
			Элементы.ПереключательНазначения.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСправа;
		ИначеЕсли НЕ Форма.ПрежнееНазначениеДляНакоплений И Объект.ИспользоватьДляНакоплений Тогда
			Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок 
				= НСтр("ru = 'После записи кошелька его остаток будет доступен для накоплений на финансовые цели в разделе ""Накопления"".'");
			Элементы.ПереключательНазначения.РасширеннаяПодсказка.ЦветТекста = WebЦвета.ТемноСиний;
			Элементы.ПереключательНазначения.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСправа;
		КонецЕсли; 
		Если Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок <> "" Тогда
			Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок = 
					НСтр("ru = 'Вы изменили назначение кошелька.'") + Символы.ПС + 
					Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок; 
		КонецЕсли; 
	Иначе
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНаименованиеНовогоКошелька(Знач ТипСчета, Знач Валюта)

	Возврат Справочники.КошелькиИСчета.ПолучитьНаименованиеПоУмолчанию(ТипСчета, Валюта); 

КонецФункции

&НаСервере
Процедура НаименованиеПриИзмененииСервер()

	НаименованиеАвтоматические = (НЕ ЗначениеЗаполнено(Объект.Наименование)) 
		ИЛИ Объект.Наименование = Справочники.КошелькиИСчета.ПолучитьНаименованиеПоУмолчанию(Объект.ТипСчета, Объект.Валюта);

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОстаткаСервер()

	ТекущийОстаток = ПолучитьТекущийОстаток(Объект.Ссылка);
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущийОстаток(Знач Ссылка)

	Если Ссылка.ИспользоватьДляНакоплений Тогда
		Счет = ПланыСчетов.РазделыУчета.Накопления;
	Иначе
		Счет = ПланыСчетов.РазделыУчета.СвободныеДеньги;
	КонецЕсли;
	
	Возврат РазделыУчета.ПолучитьОстатокПоСубконто(Счет, Ссылка, КонецДня(ТекущаяДатаСеанса()));

КонецФункции

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Ответ, ПараметрыЗаписи) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		РазрешеноИзменитьНазначение = Истина;
		Записать(ПараметрыЗаписи);
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Объект.ИспользоватьДляНакоплений = ПрежнееНазначениеДляНакоплений;
		Записать(ПараметрыЗаписи);
	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти



