#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Врзвращает генерируемое по умолчанию наименование в зависимости от типа кошелька.
//	Если такое наименование уже использовалось, к наименованию добавляется номер
Функция ПолучитьНаименованиеПоУмолчанию(ТипСчета, Валюта) Экспорт

	ВременноеНаименование = "";
	Если ТипСчета = Перечисления.ТипыСчетов.Наличность Тогда
		ВременноеНаименование = "Моя наличность" + ?(Валюта.Пустая(),"",", " + Валюта);
	ИначеЕсли ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаДебетовая
		ИЛИ ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная
		ИЛИ ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаУниверсальная Тогда
		ВременноеНаименование = "Моя банковская карта" + ?(Валюта.Пустая(),"",", " + Валюта);
	ИначеЕсли ТипСчета = Перечисления.ТипыСчетов.БанковскийСчет Тогда
		ВременноеНаименование = "Мой счет" + ?(Валюта.Пустая(),"",", " + Валюта);
	ИначеЕсли ТипСчета = Перечисления.ТипыСчетов.ЭлектронныйКошелек Тогда
		ВременноеНаименование = "Мой электронный кошелек" + ?(Валюта.Пустая(),"",", " + Валюта);
	ИначеЕсли ТипСчета = Перечисления.ТипыСчетов.Прочее Тогда
		ВременноеНаименование = "Мои деньги" + ?(Валюта.Пустая(),"",", " + Валюта);
	Иначе
		ВременноеНаименование = "Мои деньги" + ?(Валюта.Пустая(),"",", " + Валюта);
	КонецЕсли;

	// Проверяем наличие наименования:
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", ВременноеНаименование + "%");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(КошелькиИСчета.Наименование) КАК Наименование
	|ИЗ
	|	Справочник.КошелькиИСчета КАК КошелькиИСчета
	|ГДЕ
	|	КошелькиИСчета.Наименование ПОДОБНО &Наименование";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ВременноеНаименование;
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	СущесвтующееИмя = Выборка.Наименование;
	
	РазницаВНаименовании = СокрЛП(СтрЗаменить(СущесвтующееИмя, ВременноеНаименование, ""));
	
	Если ПустаяСтрока(РазницаВНаименовании) 
		Или НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(РазницаВНаименовании, Истина, Ложь) Тогда
		Возврат ВременноеНаименование + " 2";
	Иначе
		Возврат ВременноеНаименование + " " + Формат(Число(РазницаВНаименовании) + 1, "ЧДЦ=0; ЧГ=");
	КонецЕсли; 
	
КонецФункции

// Изменяет реквизиты и, при необходимости, перепроводит операции, в которых используется указанный в парамтерах кошелек
//	Необходимо выполнять при изменении назначения кошелька и при изменении типа счета с (или на) кредитной карты
//
//Параметры:
//	Кошелек - СправочникСсылка.КошелькиИСчета - кошелек, в котором изменилось назначение или "кредитность"
//	ИзменятьРазделУчета - Булево - признак необходимости изменять раздел учета и финансовую цель
//	НеРегистрироватьВОбмене - Булево - отключает регистрацию изменений в планах обмена
//
Процедура ИсправитьОперацииПоНовомуНазначениюКошелька(Кошелек, ИзменятьРазделУчета, НеРегистрироватьВОбмене = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кошелек", Кошелек);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбъектыОпераций.Операция,
	|	ТИПЗНАЧЕНИЯ(ОбъектыОпераций.Операция) КАК ТипОперации
	|ИЗ
	|	РегистрСведений.ОбъектыОпераций КАК ОбъектыОпераций
	|ГДЕ
	|	ОбъектыОпераций.ПредметУчета = &Кошелек
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыОпераций.Операция
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектыОпераций.Операция.Дата,
	|	ОбъектыОпераций.Операция.Ссылка";
	
	// раздел учета и финансовая цель меняется только если указано в параметрах:
	Если ИзменятьРазделУчета Тогда
		
		Если Кошелек.ИспользоватьДляНакоплений  Тогда
			ОбщиеНакопления = Справочники.ФинансовыеЦели.ОбщиеНакопления;
			РазделУчета = ПланыСчетов.РазделыУчета.Накопления;
		Иначе
			ОбщиеНакопления = Справочники.ФинансовыеЦели.ПустаяСсылка();
			РазделУчета = ПланыСчетов.РазделыУчета.СвободныеДеньги;
		КонецЕсли;
		
	КонецЕсли;
	
	ВыборкаОпераций = Запрос.Выполнить().Выбрать();
	Пока ВыборкаОпераций.Следующий() Цикл
		
		ОбъектОперации = ВыборкаОпераций.Операция.ПолучитьОбъект();
		
		Если ИзменятьРазделУчета Тогда
			
			Если ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.ВводИзменениеОстатка") Тогда
				
				ОбъектОперации.РазделУчета = РазделУчета;
				ОбъектОперации.ФинансоваяЦель = ОбщиеНакопления;
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.МыДалиВДолг") Тогда
				
				ОбъектОперации.ФинансоваяЦель = ОбщиеНакопления;
				Для Каждого СтрокаДопРасходов Из ОбъектОперации.ДополнительныеРасходы Цикл
					Если СтрокаДопРасходов.КошелекРасхода = Кошелек Тогда
						СтрокаДопРасходов.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.НамВернулиДолг") Тогда
				
				ОбъектОперации.ФинансоваяЦель = ОбщиеНакопления;
				Для Каждого СтрокаДопРасходов Из ОбъектОперации.ДополнительныеРасходы Цикл
					Если СтрокаДопРасходов.КошелекРасхода = Кошелек Тогда
						СтрокаДопРасходов.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.ОбменВалюты") Тогда
				
				Если ОбъектОперации.КошелекОткуда = Кошелек Тогда
					ОбъектОперации.ФинансоваяЦельОткуда = ОбщиеНакопления;
				КонецЕсли; 
				Если ОбъектОперации.КошелекКуда = Кошелек Тогда
					ОбъектОперации.ФинансоваяЦельКуда = ОбщиеНакопления;
				КонецЕсли; 
				Для Каждого СтрокаДопРасходов Из ОбъектОперации.ДополнительныеРасходы Цикл
					Если СтрокаДопРасходов.КошелекРасхода = Кошелек Тогда
						СтрокаДопРасходов.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.Перемещение") Тогда
				
				Если ОбъектОперации.КошелекОткуда = Кошелек Тогда
					ОбъектОперации.СчетОткуда = РазделУчета;
					ОбъектОперации.ФинансоваяЦельОткуда = ОбщиеНакопления;
				КонецЕсли; 
				Если ОбъектОперации.КошелекКуда = Кошелек Тогда
					ОбъектОперации.СчетКуда = РазделУчета;
					ОбъектОперации.ФинансоваяЦельКуда = ОбщиеНакопления;
				КонецЕсли; 
				Для Каждого СтрокаДопРасходов Из ОбъектОперации.ДополнительныеРасходы Цикл
					Если СтрокаДопРасходов.КошелекРасхода = Кошелек Тогда
						СтрокаДопРасходов.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.МыВернулиДолг") Тогда
				
				ОбъектОперации.ФинансоваяЦель = ОбщиеНакопления;
				Для Каждого СтрокаДопРасходов Из ОбъектОперации.ДополнительныеРасходы Цикл
					Если СтрокаДопРасходов.КошелекРасхода = Кошелек Тогда
						СтрокаДопРасходов.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.МыВзялиВДолг") Тогда
				
				ОбъектОперации.ФинансоваяЦель = ОбщиеНакопления;
				Для Каждого СтрокаДопРасходов Из ОбъектОперации.ДополнительныеРасходы Цикл
					Если СтрокаДопРасходов.КошелекРасхода = Кошелек Тогда
						СтрокаДопРасходов.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.Доход") Тогда
				
				Для Каждого СтрокаДокумента Из ОбъектОперации.Доходы Цикл
					Если СтрокаДокумента.Кошелек = Кошелек Тогда
						СтрокаДокумента.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.Расход") Тогда
				
				ОбъектОперации.КошелекДолг = Кошелек;
				ОбъектОперации.РазделУчета = РазделУчета;
				
				Для Каждого СтрокаДокумента Из ОбъектОперации.Расходы Цикл
					СтрокаДокумента.ФинансоваяЦель = ОбщиеНакопления;
				КонецЦикла; 
				
			ИначеЕсли ВыборкаОпераций.ТипОперации = Тип("ДокументСсылка.УниверсальнаяОперация") Тогда
				
				Для Каждого СтрокаДокумента Из ОбъектОперации.Доходы Цикл
					Если СтрокаДокумента.ОбъектУчета = Кошелек Тогда
						СтрокаДокумента.РазделУчета = РазделУчета;
						СтрокаДокумента.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
				Для Каждого СтрокаДокумента Из ОбъектОперации.Расходы Цикл
					Если СтрокаДокумента.ОбъектУчета = Кошелек Тогда
						СтрокаДокумента.РазделУчета = РазделУчета;
						СтрокаДокумента.ФинансоваяЦель = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
				Для Каждого СтрокаДокумента Из ОбъектОперации.Перемещения Цикл
					Если СтрокаДокумента.ОбъектУчетаДт = Кошелек Тогда
						СтрокаДокумента.РазделУчетаДт = РазделУчета;
						СтрокаДокумента.ФинансоваяЦельДт = ОбщиеНакопления;
					КонецЕсли; 
					Если СтрокаДокумента.ОбъектУчетаКт = Кошелек Тогда
						СтрокаДокумента.РазделУчетаКт = РазделУчета;
						СтрокаДокумента.ФинансоваяЦельКт = ОбщиеНакопления;
					КонецЕсли; 
				КонецЦикла; 
				
			Иначе
				Продолжить;
			КонецЕсли; 
			
		КонецЕсли;
		
		// Устанавливаем запрет на обработку последовательности, т.к. перепроводятся все документы в хронологическом порядке
		ОбъектОперации.ДополнительныеСвойства.Вставить("НеВосстанавливатьПоследовательность", Истина);
		
		// Если указано, отключаем регистрацию в журнале обмена
		Если НеРегистрироватьВОбмене Тогда
			ОбъектОперации.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
		КонецЕсли;
		
		ОбъектОперации.Записать(?(ОбъектОперации.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
	
	КонецЦикла;

КонецПроцедуры

// Обновляет информационные реквизиты по указанному или всем кошелькам
//	в регистре сведений "СтатистикаСправочников".
//Перед использованием необходимо актуализировать ключи статей.
//
//Параметры:
//	Ссылка - СправочникСсылка или Неопределено 
//
Процедура ОбновитьРегистрСтатистики(Ссылка = Неопределено) Экспорт
	
	РегистрыСведений.СтатистикаСправочников.ОбновитьСтатистикуСправочника("КошелькиИСчета", Ссылка);
	
КонецПроцедуры


#КонецОбласти



#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	// Проверяем/устанавливаем стандартные параметры отбора
	ОбслуживаниеСправочников.ПроверитьСтандартныеПараметрыОтбора(Параметры);
	
	// Если в параметрах есть необходимые ключи/значения будет выполнена расширенная обработка получения данных
	ОбслуживаниеСправочников.ВыполнитьРасширенноеПолучениеДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если НЕ Параметры.Свойство("Ключ") ИЛИ НЕ ЗначениеЗаполнено(Параметры.Ключ) Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "Обработка.ПомощникСозданияКошелька.Форма";
		КонецЕсли;
		
	ИначеЕсли ВидФормы = "ФормаВыбора" ИЛИ ВидФормы = "ФормаВыбораГруппы" Тогда 
		
		ОбслуживаниеСправочников.ОбработкаПолученияФормыВыбора(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
		
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#КонецЕсли

