#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Валюта = Константы.ВалютаУчета.Получить();
	ТекущаяДата = ТекущаяДатаСеанса();
	НачалоПланирования    = НачалоГода(?(Месяц(ТекущаяДата) < 2, ДобавитьМесяц(ТекущаяДата, -12), ТекущаяДата));
	Если НЕ ЗначениеЗаполнено(ДетальностьПланирования) Тогда
		ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Месяц;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДетальностьПланирования) Тогда
		
		Если ДетальностьПланирования <> Перечисления.ПериодичностьПланирования.Неделя
			И ДетальностьПланирования <> Перечисления.ПериодичностьПланирования.Месяц
			И ДетальностьПланирования <> Перечисления.ПериодичностьПланирования.Квартал
			И ДетальностьПланирования <> Перечисления.ПериодичностьПланирования.Год Тогда
			ТекстСообщения = НСтр("ru = 'Указана некорректная детальность планирования. 
				|Допускается только одно из следующих значений: Неделя, Месяц, Квартал, Год'"); 
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , 
					"Объект.ДетальностьПланирования", , Отказ);
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение обязательных и информационных реквизитов
	Если ЧислоМесяца = 0 Тогда
		ЧислоМесяца = 1;
	ИначеЕсли ЧислоМесяца > 29 Тогда
		ЧислоМесяца = 29;
	КонецЕсли;
	
	Если НомерМесяца = 0 Тогда
		НомерМесяца = 1;
	ИначеЕсли ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Квартал 
		И НомерМесяца > 3 Тогда
		НомерМесяца = 3;
	ИначеЕсли ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Год 
		И НомерМесяца > 12 Тогда
		НомерМесяца = 12;
	КонецЕсли;
	
	ПредставлениеДетальностиПланирования = Строка(ДетальностьПланирования);
	Если ЧислоМесяца <> 1 Или НомерМесяца <> 1 Тогда
		СтрокаЧисла = "";
		Если ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Месяц Тогда
			
			СтрокаЧисла = НСтр("ru='с %1-го числа'");
			СтрокаЧисла = СтрШаблон(СтрокаЧисла, ЧислоМесяца);
			
		ИначеЕсли ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Квартал Тогда
			
			СтрокаЧисла = НСтр("ru='с %1, %2, %3, %4'");
			СтрокаЧисла = СтрШаблон(СтрокаЧисла, 
						Формат(Дата(2010, НомерМесяца, ЧислоМесяца), "ДФ='д ММММ'"),
						Формат(Дата(2010, НомерМесяца + 3, ЧислоМесяца), "ДФ='д ММММ'"),
						Формат(Дата(2010, НомерМесяца + 6, ЧислоМесяца), "ДФ='д ММММ'"),
						Формат(Дата(2010, НомерМесяца + 9, ЧислоМесяца), "ДФ='д ММММ'"));
			
		ИначеЕсли ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Год Тогда
			
			СтрокаЧисла = НСтр("ru='с %1'");
			СтрокаЧисла = СтрШаблон(СтрокаЧисла, Формат(Дата(2010, НомерМесяца, ЧислоМесяца), "ДФ='д ММММ'") );
			
		КонецЕсли;
		
		Если СтрокаЧисла <> "" Тогда
			ПредставлениеДетальностиПланирования = ПредставлениеДетальностиПланирования + " (" 
					+ СтрокаЧисла + ")"; 
		КонецЕсли;
	
	КонецЕсли;
	
	ОтложеннаяЗапись = ДополнительныеСвойства.Свойство("ОтложеннаяЗапись");
	
	// Проверки перед записью
	ОбслуживаниеСправочников.ПроверкаИзмененияПредопределенныхЭлементовПередЗаписью(ЭтотОбъект, Отказ, "Наименование");
	Если Не Отказ И Не ОтложеннаяЗапись Тогда
		ОбслуживаниеСправочников.ПроверкаНаименованияСправочникаПередЗаписью(ЭтотОбъект, Отказ);
	КонецЕсли;
	Если Не Отказ И Не ОтложеннаяЗапись Тогда
		ОбслуживаниеСправочников.СогласованиеПометкиИАктивностиПередЗаписью(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЗаписываетсяНовыйОбъект", Ссылка.Пустая());
	Если Не ДополнительныеСвойства.ЗаписываетсяНовыйОбъект Тогда
		ДополнительныеСвойства.Вставить("ПрежнееНачалоПлана", Ссылка.НачалоПланирования);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЗаписываетсяНовыйОбъект Тогда
		
		БюджетированиеСервер.ЗаполнитьВариантБюджетаСтатьямиПоУмолчанию(Ссылка);
		
	ИначеЕсли ДополнительныеСвойства.ПрежнееНачалоПлана > НачалоПланирования Тогда
		
		// Удаляем лишние периоды в плановых показателях бюджета
		УдлаитьЛишниеПоказателиБюджета();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура УдлаитьЛишниеПоказателиБюджета() 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВариантБюджета", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода",  НачалоПланирования);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиБюджета.НачалоПериода КАК НачалоПериода,
	|	ПоказателиБюджета.ВариантБюджета,
	|	ПоказателиБюджета.РазделБюджета КАК РазделБюджета,
	|	ПоказателиБюджета.ТипПоказателя,
	|	ПоказателиБюджета.СтатьяБюджета,
	|	ПоказателиБюджета.ГрафаБюджета
	|ИЗ
	|	РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|ГДЕ
	|	ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|	И ПоказателиБюджета.НачалоПериода < &НачалоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделБюджета,
	|	НачалоПериода";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = РегистрыСведений.ПоказателиБюджета.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти



#КонецЕсли