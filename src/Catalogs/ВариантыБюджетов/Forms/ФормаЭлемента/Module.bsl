////////////////////////////////////////////////////////////////////////////////
//Справочник.ВариантыБюджета.ФормаЭлемнета
//  
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменены параметры бюджетрования" Тогда
		ПрочитатьПараметрыПланирования();
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОповещатьОДлительнойОперации = ЗначениеЗаполнено(ДопРеквизитыФормы.МинимальнаяДатаПоказателя) И ГодНачалаПлана > Год(ДопРеквизитыФормы.МинимальнаяДатаПоказателя)
		ИЛИ ГодПределаПланирования <> Год(ДопРеквизитыФормы.ПределПланирования);
		
	Объект.НачалоПланирования = Дата(ГодНачалаПлана, 1, 1);
	
	Если ОповещатьОДлительнойОперации Тогда
		ПоказатьОповещениеПользователя(НСтр("ru='Изменение периода планирования...'"), , НСтр("ru='Выполняется пересчет плановых операций и удаление линих показателей данного варианта бюджета'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ГодПределаПланирования <> Год(ДопРеквизитыФормы.ПределПланирования) Тогда
		Константы.ПределПланирования.Установить(Дата(ГодПределаПланирования, 12, 31, 23, 59, 59));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПрочитатьПараметрыПланирования();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправлениеФормой(ЭтотОбъект);
	Оповестить("Записан элемент справочника", Новый Структура("ИмяСправочника,Ссылка,ВладелецФормы", "ВариантыБюджетов", Объект.Ссылка, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НачалоПериодаПланаПриИзменении(Элемент)
	
	Если ГодНачалаПлана < 2000 Тогда
		ГодНачалаПлана = 2000;
	КонецЕсли;
	
	Если ГодНачалаПлана > ГодПределаПланирования Тогда
		ГодПределаПланирования = ГодНачалаПлана;
	КонецЕсли;
	
	ПриИзмененииПериодаПланирования(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПределаПланированияПриИзменении(Элемент)
	
	Если ГодПределаПланирования < 2000 Тогда
		ГодПределаПланирования = 2000;
	КонецЕсли;
	
	Если ГодНачалаПлана > ГодПределаПланирования Тогда
		ГодНачалаПлана = ГодПределаПланирования;
	КонецЕсли;
	
	ПриИзмененииПериодаПланирования(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДетальностьПланированияПриИзменении(Элемент)
	
	ОбновитьСписокВыбораМесяца(Элементы.НомерМесяца.СписокВыбора, Объект.ДетальностьПланирования);
	Если Объект.НомерМесяца > Элементы.НомерМесяца.СписокВыбора.Количество() Тогда
		Объект.НомерМесяца = Элементы.НомерМесяца.СписокВыбора[Элементы.НомерМесяца.СписокВыбора.Количество() - 1].Значение;
	КонецЕсли;
	
	ПриИзмененииПериодаПланирования(ЭтотОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ТекстИнформацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "ВернутьНачало" Тогда
		
		ГодНачалаПлана = Год(Объект.НачалоПланирования);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ВернутьПредел" Тогда
		
		ГодПределаПланирования = Год(ДопРеквизитыФормы.ПределПланирования);
		
	КонецЕсли;
	
	ПриИзмененииПериодаПланирования(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Редактировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыРедкатора = Новый Структура;
	ПараметрыРедкатора.Вставить("ВариантБюджета", Объект.Ссылка);
	ОткрытьФорму("Обработка.РазделБюджет.Форма", ПараметрыРедкатора, ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ДопРеквизитыФормы = Новый Структура;
	ДопРеквизитыФормы.Вставить("ЦветТекстаОшибки",      ЦветаСтиля.ЦветОтрицательногоЧисла);
	ДопРеквизитыФормы.Вставить("ЦветТекстаИнформации",  ЦветаСтиля.ИнформационнаяНадписьЦвет);
	ДопРеквизитыФормы.Вставить("ЦветТекстаГиперссылки", ЦветаСтиля.ГиперссылкаЦвет);
	
	ДопРеквизитыФормы.Вставить("ДетальностьНеделя",  Перечисления.ПериодичностьПланирования.Неделя);
	ДопРеквизитыФормы.Вставить("ДетальностьМесяц",   Перечисления.ПериодичностьПланирования.Месяц);
	ДопРеквизитыФормы.Вставить("ДетальностьКвартал", Перечисления.ПериодичностьПланирования.Квартал);
	ДопРеквизитыФормы.Вставить("ДетальностьГод",     Перечисления.ПериодичностьПланирования.Год);
	
	ПрочитатьПараметрыПланирования();
	
	// Заполняем список выбора для числа месяца
	Элементы.ЧислоМесяца.СписокВыбора.Очистить();
	Для Счетчик = 1 По 28 Цикл
		Элементы.ЧислоМесяца.СписокВыбора.Добавить(Счетчик, "" + Счетчик + "-го");
	КонецЦикла;
	
	// Заполняем список выбора для номера месяца
	ОбновитьСписокВыбораМесяца(Элементы.НомерМесяца.СписокВыбора, Объект.ДетальностьПланирования);
	Если Объект.НомерМесяца > Элементы.НомерМесяца.СписокВыбора.Количество() Тогда
		Объект.НомерМесяца = Элементы.НомерМесяца.СписокВыбора[Элементы.НомерМесяца.СписокВыбора.Количество() - 1].Значение;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
	// Общие настройки форм элементов справочников
	РаботаСФормамиСправочников.ФормаЭлементаПриСозданииНаСервере(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыПланирования()

	СвойстваВарианта = Справочники.ВариантыБюджетов.СвойстваВариантаБюджета(Объект.Ссылка);
	ДопРеквизитыФормы.Вставить("ПределПланирования",         СвойстваВарианта.ПределПланирования);
	ДопРеквизитыФормы.Вставить("ВБюджетеЕстьПоказатели",     СвойстваВарианта.ЕстьПлановыеПоказателиБюджета);
	ДопРеквизитыФормы.Вставить("МинимальнаяДатаПоказателя",  СвойстваВарианта.МинимальнаяДатаПоказателя);
	Если ЗначениеЗаполнено(Объект.ДетальностьПланирования) Тогда
		ДопРеквизитыФормы.Вставить("ВидПериода",    ОбщегоНазначения.ИмяЗначенияПеречисления(Объект.ДетальностьПланирования));
	Иначе
		ДопРеквизитыФормы.Вставить("ВидПериода",    ОбщегоНазначения.ИмяЗначенияПеречисления(Перечисления.ПериодичностьПланирования.Месяц));
	КонецЕсли;
	 
	
	ДопРеквизитыФормы.Вставить("КоличествоПериодов",         БюджетированиеКлиентСервер.КоличествоПериодовМеждуДатами(
						НачалоГода(Объект.НачалоПланирования), КонецГода(ДопРеквизитыФормы.ПределПланирования), 
						ДопРеквизитыФормы.ВидПериода, ПредставлениеЧислаПериодов));
						
	ГодНачалаПлана         = Год(Объект.НачалоПланирования);
	ГодПределаПланирования = Год(ДопРеквизитыФормы.ПределПланирования);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииПериодаПланирования(Форма)

	ДопРеквизитыФормы  = Форма.ДопРеквизитыФормы;
	
	НачДата = Дата(Форма.ГодНачалаПлана, 1, 1);
	КонДата = Дата(Форма.ГодПределаПланирования, 12, 31);
	ДопРеквизитыФормы.Вставить("КоличествоПериодов",         БюджетированиеКлиентСервер.КоличествоПериодовМеждуДатами(НачДата, КонДата, 
						ДопРеквизитыФормы.ВидПериода, Форма.ПредставлениеЧислаПериодов));

	УправлениеФормой(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект             = Форма.Объект;
	Элементы           = Форма.Элементы;
	ДопРеквизитыФормы  = Форма.ДопРеквизитыФормы;
	
	// Защищаем от изменения поля, которые нельзя редактировать после записи плановых показателей
	ЗапретИзменений = ДопРеквизитыФормы.ВБюджетеЕстьПоказатели Или Форма.ТолькоПросмотр;
	Если Элементы.ДетальностьПланирования.ТолькоПросмотр <> ЗапретИзменений Тогда
		Элементы.ДетальностьПланирования.ТолькоПросмотр = ЗапретИзменений;
	КонецЕсли;
	Если Элементы.Валюта.ТолькоПросмотр <> ЗапретИзменений Тогда
		Элементы.Валюта.ТолькоПросмотр = ЗапретИзменений;
	КонецЕсли;
	
	// Настраиваем видимость начала бюджетного периода
	ВидимостьЧислаМесяца  = Объект.ДетальностьПланирования <> ДопРеквизитыФормы.ДетальностьНеделя;
	ВидимостьНомераМесяца = ВидимостьЧислаМесяца И Объект.ДетальностьПланирования <> ДопРеквизитыФормы.ДетальностьМесяц;
	Если Элементы.НомерМесяца.Видимость <> ВидимостьНомераМесяца Тогда
		Элементы.НомерМесяца.Видимость        = ВидимостьНомераМесяца;
		Элементы.НомерМесяцаСуффикс.Видимость = ВидимостьНомераМесяца;
	КонецЕсли;
	
	Если Элементы.ЧислоМесяца.Видимость <> ВидимостьЧислаМесяца Тогда
		Элементы.ЧислоМесяца.Видимость        = ВидимостьЧислаМесяца;
		Элементы.ЧислоМесяцаСуффикс.Видимость = ВидимостьЧислаМесяца;
	КонецЕсли;
	
	// Формируем информационные надписи
	ТекстИнформации = Новый ФорматированнаяСтрока("");
	
	Если ЗначениеЗаполнено(ДопРеквизитыФормы.МинимальнаяДатаПоказателя) И Форма.ГодНачалаПлана > Год(ДопРеквизитыФормы.МинимальнаяДатаПоказателя) Тогда
		
		ТекстСообщения = НСтр("ru='Планы этого варианта бюджета до начала %1 года будут удалены!'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(Форма.ГодНачалаПлана, "ЧЦ=4; ЧДЦ=; ЧГ="));
		ТекстИнформации = Новый ФорматированнаяСтрока(ТекстИнформации,
					Новый ФорматированнаяСтрока(ТекстСообщения, , ДопРеквизитыФормы.ЦветТекстаОшибки),
					" ",
					Новый ФорматированнаяСтрока(НСтр("ru='Вернуть прежнее начало плана'"), , ДопРеквизитыФормы.ЦветТекстаГиперссылки, , "ВернутьНачало"),
					" "
					);
		
	Иначе
		
		ТекстИнформации = Новый ФорматированнаяСтрока(ТекстИнформации,
					Новый ФорматированнаяСтрока(НСтр("ru='Начало плана устанавливается для каждого варианта бюджета.'"), , ДопРеквизитыФормы.ЦветТекстаИнформации),
					" "
					);
		
	КонецЕсли;
	
	ТекущийГодПредела = Год(ДопРеквизитыФормы.ПределПланирования);
	Если Форма.ГодПределаПланирования < ТекущийГодПредела Тогда
		
		ТекстСообщения = НСтр("ru='Суммы всех плановых операций и вариантов бюджета по конец %1 года будут удалены!'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ТекущийГодПредела, "ЧЦ=4; ЧДЦ=; ЧГ="));
		ТекстИнформации = Новый ФорматированнаяСтрока(ТекстИнформации,
					?(ЗначениеЗаполнено(ТекстИнформации), Символы.ПС, ""),
					Новый ФорматированнаяСтрока(ТекстСообщения, , ДопРеквизитыФормы.ЦветТекстаОшибки),
					" ",
					Новый ФорматированнаяСтрока(НСтр("ru='Вернуть прежний предел планирования'"), , ДопРеквизитыФормы.ЦветТекстаГиперссылки, , "ВернутьПредел"),
					" "
					);
		
	ИначеЕсли Форма.ГодПределаПланирования > ТекущийГодПредела Тогда
		
		ТекстСообщения = НСтр("ru='Плановые операции будут пересчитаны по конец %1 года.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(Форма.ГодПределаПланирования, "ЧЦ=4; ЧДЦ=; ЧГ="));
		ТекстИнформации = Новый ФорматированнаяСтрока(ТекстИнформации,
					?(ЗначениеЗаполнено(ТекстИнформации), Символы.ПС, ""),
					Новый ФорматированнаяСтрока(ТекстСообщения, , ДопРеквизитыФормы.ЦветТекстаИнформации),
					" ",
					Новый ФорматированнаяСтрока(НСтр("ru='Вернуть прежний предел планирования'"), , ДопРеквизитыФормы.ЦветТекстаГиперссылки, , "ВернутьПредел"),
					" "
					);
		
	Иначе
		
		ТекстИнформации = Новый ФорматированнаяСтрока(ТекстИнформации,
					?(ЗначениеЗаполнено(ТекстИнформации), Символы.ПС, ""),
					Новый ФорматированнаяСтрока(НСтр("ru='Предел планирования един для всех вариантов бюджета и плановых операций.'"), , ДопРеквизитыФормы.ЦветТекстаИнформации),
					" "
					);
		
	КонецЕсли;
	
	Форма.ТекстИнформации = ТекстИнформации;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСписокВыбораМесяца(СписокВыбора, Периодичность)

	Предел = ?(Периодичность = ПредопределенноеЗначение("Перечисление.ПериодичностьПланирования.Квартал"), 3, 12);
	Если СписокВыбора.Количество() = Предел Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора.Очистить();
	Для Счетчик = 1 По Предел Цикл
		СписокВыбора.Добавить(Счетчик, "" + Счетчик + "-го");
	КонецЦикла;

КонецПроцедуры


#КонецОбласти










