////////////////////////////////////////////////////////////////////////////////
//Справочник.СтатьиРасходов.ФормаСписка
//  используется и для выбора и для просмотра
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Проверяем режим открытия списка
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора      = Истина;
		Элементы.Список.ОтображатьКорень = Истина;
		Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Установка условного оформления для форм списков:
	РаботаСФормамиСправочников.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "Список", Истина, , );
	
	// Перенос программно установленного отбора в пользовательские настройки:
	РаботаСФормамиСправочников.ФормаСпискаСправочникаОбработатьПараметрыОтбора(ЭтотОбъект, "Список", "");
	
	Если ХранилищеСистемныхНастроек.Загрузить(ЭтотОбъект.ИмяФормы + ?(КлючНазначенияИспользования = "", "", "/" + КлючНазначенияИспользования) + "/ТекущиеДанные", ) = Неопределено Тогда
		УстановитьБыстрыйОтборПоРеквизитам(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	УстановитьБыстрыйОтборПоРеквизитам(ЭтотОбъект);
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ Копирование И ЗначениеЗаполнено(Родитель) И Элементы.Список.Отображение = ОтображениеТаблицы.Дерево Тогда
		Отказ = Истина;
		// Добавляем элемент на тот же уровень, что выделенный в дереве
		ОткрытьФормуНовогоЭлемента(ПолучитьРодителяЭлемента(Родитель));
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти

// Обработчики Панели ГруппаБыстрыеОтборы
#Область ГруппаБыстрыеОтборы 

&НаКлиенте
Процедура АктуальностьПриИзменении(Элемент)
	
	УстановитьБыстрыйОтборПоРеквизитам(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьБыстрыйОтборПоРеквизитам(Форма)

	ОтборСписка = Форма.Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Форма.Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	//Если ОтборСписка <> Неопределено Тогда
	//	
	//	Если Форма.Актуальность = 1 Тогда
	//		// Только активные
	//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Актуальность", Истина, ВидСравненияКомпоновкиДанных.Равно, , Истина);
	//	ИначеЕсли Форма.Актуальность = -1 Тогда
	//		// Только неактивные
	//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Актуальность", Ложь, ВидСравненияКомпоновкиДанных.Равно, , Истина);
	//	Иначе
	//		// Все шаблоны
	//		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Актуальность", Истина, ВидСравненияКомпоновкиДанных.Равно, , Ложь);
	//	КонецЕсли; 
	//	
	//КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "ОтборПоАктивности", Форма.Актуальность);
	
	Если Форма.Элементы.Активность.Видимость <> Форма.Актуальность = 0 Тогда
		Форма.Элементы.Активность.Видимость = Форма.Актуальность = 0;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СписокПриЗагрузкеПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	АктуализироватьЗначенияБыстрыхОтборов(Настройки);
	
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	АктуализироватьЗначенияБыстрыхОтборов(Список.КомпоновщикНастроек.ПользовательскиеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьЗначенияБыстрыхОтборов(Настройки)

	// Восстанавливаем значения быстрых отборов, если они были
	ОтборСписка = Настройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	Если ОтборСписка <> Неопределено Тогда
		
		// "обнуляем" значения быстрого отбора:
		Актуальность    = 0;
		
		ЭлементыАктуальности = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(ОтборСписка, "Активность");
		Для Каждого ЭлементОтбора Из ЭлементыАктуальности Цикл
			Если ЭлементОтбора.Использование Тогда
				Актуальность = ?(ЭлементОтбора.ПравоеЗначение = Истина, 1, -1);
			КонецЕсли; 
		КонецЦикла; 
		
		
	КонецЕсли; 

	Если Элементы.Активность.Видимость <> Актуальность = 0 Тогда
		Элементы.Активность.Видимость = Актуальность = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПодчиненный(Команда)
	
	Родитель = Элементы.Список.ТекущаяСтрока;
	ОткрытьФормуНовогоЭлемента(Родитель);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьРодителяЭлемента(Элемент)

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Элемент, "Родитель");

КонецФункции

&НаКлиенте
Процедура ОткрытьФормуНовогоЭлемента(Родитель)

	ЗначенияЗаполнения = Новый Структура("Родитель", Родитель);
	
	ОткрытьФорму("Справочник.СтатьиРасходов.Форма.ФормаЭлемента", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), ЭтаФорма, Истина);

КонецПроцедуры



#КонецОбласти









