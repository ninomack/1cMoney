
&НаКлиенте
Перем ЗакрыватьФормуПослеПредупрежденияОбИзменеиях;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	РаботаСФормамиСправочников.ФормаОбъектаПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект, Истина, Истина, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСправочников.ФормаОбъектаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка, Истина, Истина, Истина);
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСФормамиСправочниковКлиент.ФормаОбъектаПриОткрытии(ЭтотОбъект, Отказ, Истина, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ОбработатьОповещениеДобавленияФайла(ЭтотОбъект, Параметр);
	ИначеЕсли (ПрикрепленныеФайлыКлиент.ЭтоИзменениеСпискаМультимедиа(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	КонецЕсли;
	#КонецОбласти
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.Ссылка.Пустая() И Объект.Родитель.Пустая() Тогда
		ОбслуживаниеСправочниковКлиент.ИнформироватьОДобавленииСтатьиБюджета();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	РаботаСФормамиСправочников.ФормаОбъектаПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекстСообщения = "";
	ЗаписатьНастройкиАналитики(ТекущийОбъект.Ссылка, Отказ, ТекстСообщения);
	
	Если Отказ И ЗначениеЗаполнено(ТекстСообщения) Тогда
		
		// Сообщаем о проблемах с настройками аналитики
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Поле = "ТаблицаАналитики";
		Сообщение.УстановитьДанные(ТекущийОбъект);
		Сообщение.Сообщить(); 
		
	КонецЕсли; 
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСправочников.ФормаОбъектаПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записан элемент справочника", Новый Структура("ИмяСправочника,Ссылка,ВладелецФормы", "СтатьиРасходов", Объект.Ссылка, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	РаботаСФормамиСправочниковКлиент.ФормаОбъектаПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект);
	ЗакрыватьФормуПослеПредупрежденияОбИзменеиях = Истина;
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТипВыбранного = ТипЗнч(ВыбранноеЗначение);
	
	Если ТипВыбранного = Тип("Строка") Тогда
		
		ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий", Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличественныйУчетПриИзменении(Элемент)
	КоличественныйУчетИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАналитикиПриИзменении(Элемент)
	
	Если ТаблицаАналитики.Количество() > 0 Тогда
		ЗаголовокГруппыАналитики = НСтр("ru = 'Аналитика для автоматического заполнения в операциях: %1'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ЗаголовокГруппыАналитики = "► " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокГруппыАналитики, ТаблицаАналитики.Количество());
	Иначе
		ЗаголовокГруппыАналитики = "► " + НСтр("ru = 'Аналитика для автоматического заполнения в операциях отсутствует'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
	КонецЕсли;
	АналитикаИзменена = Истина;
	
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеТекущегоФайлаНажатие(Элемент, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаТекущийФайл(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлКнопкаНавигацииНажатие(Элемент)
	ПрикрепленныеФайлыКлиент.ФайлКнопкаНавигацииНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры

#КонецОбласти 


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СкопироватьКоличественныйУчетНаПодчиненныеСтатьи(Команда)
	
	ЭтоНовый = НЕ ЗначениеЗаполнено(Объект.Ссылка);
	КоличествоПодчиненных = ?(ЭтоНовый, 0, КоличествоПодчиненныхЭлементовСервер(Объект.Ссылка));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКоманды", "СкопироватьКоличественныйУчет");
	ТекстВопроса = НСтр("ru = '%1 количественно-ценовой учет для %2 подчиненных статей?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, 
					?(Объект.КоличественныйУчет, НСтр("ru = 'Включить'"), НСтр("ru = 'Отключить'")),
					КоличествоПодчиненных);
	ДополнительныеПараметры.Вставить("ТекстВопроса", ТекстВопроса);
	
	Если ЭтоНовый ИЛИ Модифицированность Тогда
		ЗаписатьИзмененияСПодстверждением(ДополнительныеПараметры);
		Возврат;
	ИначеЕсли КоличествоПодчиненных = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'У статьи нет подчиненных статей'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Вставить("ЗакрыватьФорму", ЗакрыватьФормуПослеПредупрежденияОбИзменеиях = Истина);
	ЗапроситьПодтверждениеКоманды(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиАналитикиНаПодчиненныеСтатьи(Команда)
	
	ЭтоНовый = НЕ ЗначениеЗаполнено(Объект.Ссылка);
	КоличествоПодчиненных = ?(ЭтоНовый, 0, КоличествоПодчиненныхЭлементовСервер(Объект.Ссылка));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКоманды", "СкопироватьНастройкиАналитики");
	Если ТаблицаАналитики.Количество() = 0 Тогда
		ТекстВопроса = НСтр("ru = 'Очистить аналитику для автоматического заполнения в %1 подчиненных статьях?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Иначе
		ТекстВопроса = НСтр("ru = 'Установить такую же аналитику для автоматического заполнения в %1 подчиненных статьях?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли; 
	ДополнительныеПараметры.Вставить("ТекстВопроса", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, КоличествоПодчиненных));
	
	Если ЭтоНовый ИЛИ Модифицированность Тогда
		ЗаписатьИзмененияСПодстверждением(ДополнительныеПараметры);
		Возврат;
	ИначеЕсли КоличествоПодчиненных = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'У статьи нет подчиненных статей'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Вставить("ЗакрыватьФорму", ЗакрыватьФормуПослеПредупрежденияОбИзменеиях = Истина);
	ЗапроситьПодтверждениеКоманды(ДополнительныеПараметры);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ДопРеквизитыФормы = Новый Структура("ИзмененныеАналитики", Новый Массив);
	
	// Подсказка для предопреленных элементов
	Если Объект.Предопределенный Тогда
		
		Если Объект.Ссылка = ПредопределенноеЗначение("Справочник.СтатьиРасходов.ИзменениеОстатка") Тогда
			ТекстПодсказки = НСтр("ru = 'Статья используется программой для операций ввода/изменения остатков. 
										|Наименование изменять нельзя.'");
			
		ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Справочник.СтатьиРасходов.ОбменВалюты") Тогда
			ТекстПодсказки = НСтр("ru = 'Статья используется программой для операций обмена валюты. 
										|Наименование изменять нельзя.'");
			
		Иначе
			ТекстПодсказки = НСтр("ru = 'Статья используется программой. Наименование изменять нельзя.'");
			
		КонецЕсли;
		
		Элементы.Наименование.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элементы.НаименованиеРасширеннаяПодсказка.Заголовок = ТекстПодсказки;  // Новый ФорматированнаяСтрока(ТекстПодсказки,, ЦветаСтиля.ПоясняющийТекст);
		
		Элементы.Наименование.Доступность = Ложь;
		
	КонецЕсли;
	
	// Сброс расположения и размеров формы
	ОбщегоНазначенияДеньги.СброситьРазмерИПоложениеФормы(ЭтотОбъект);
	
	ПрочитатьНастройкиАналитики(); 
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()

	Элементы.СкопироватьКоличественныйУчетНаПодчиненныеСтатьи.Доступность = НЕ Объект.Ссылка.Пустая();
	Элементы.ТаблицаАналитикиСкопироватьНастройкиАналитикиНаПодчиненныеСтатьи.Доступность = НЕ Объект.Ссылка.Пустая();

КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоПодчиненныхЭлементовСервер(Родитель)

	Если НЕ ЗначениеЗаполнено(Родитель) Тогда
		Возврат 0;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СтатьиРасходов.Ссылка) КАК КоличествоПодчиненных
	|ИЗ
	|	Справочник.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.Ссылка В ИЕРАРХИИ(&Родитель)
	|	И СтатьиРасходов.Ссылка <> &Родитель";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.КоличествоПодчиненных;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

&НаСервере
Процедура УстановитьКоличественныйУчетДляПодчиненныхЭлементовСервер(Родитель, КоличественныйУчет)

	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Запрос.УстановитьПараметр("КоличественныйУчет", КоличественныйУчет);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка
	|ИЗ
	|	Справочник.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.Ссылка В ИЕРАРХИИ(&Родитель)
	|	И СтатьиРасходов.Ссылка <> &Родитель
	|	И СтатьиРасходов.КоличественныйУчет <> &КоличественныйУчет";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СпрОбъект.КоличественныйУчет = КоличественныйУчет;
		СпрОбъект.Записать();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиАналитикиДляПодчиненныхЭлементовСервер(Родитель)

	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка
	|ИЗ
	|	Справочник.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.Ссылка В ИЕРАРХИИ(&Родитель)
	|	И СтатьиРасходов.Ссылка <> &Родитель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаписатьНаборНастроек(Выборка.Ссылка);
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры


// Формирование вопросов и обработчики ответов

&НаКлиенте
Процедура ЗаписатьИзмененияСПодстверждением(ДополнительныеПараметры)

	ТекстВопроса = НСтр("ru = 'Статья еще не записана. Записать?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ОбработчикОтвета = Новый ОписаниеОповещения("ЗаписатьИзмененияСПодстверждениемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);

КонецПроцедуры
 
&НаКлиенте
Процедура ЗаписатьИзмененияСПодстверждениемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли; 
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
			ЗапроситьПодтверждениеКоманды(ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьПодтверждениеКоманды(ДополнительныеПараметры)

	ОбработчикОтвета = Новый ОписаниеОповещения("ЗапроситьПодтверждениеКомандыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОбработчикОтвета, ДополнительныеПараметры.ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);

КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьПодтверждениеКомандыЗавершение(Ответ, ДополнительныеПараметры) Экспорт


	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ТекстПредупреждения = "";
		
		Если Найти(ДополнительныеПараметры.ИмяКоманды, "СкопироватьНастройкиАналитики") > 0 Тогда
			
			УстановитьНастройкиАналитикиДляПодчиненныхЭлементовСервер(Объект.Ссылка);
			АналитикаИзменена = Ложь;
			ТекстПредупреждения = НСтр("ru = 'Настройки аналитики скопированы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			
		КонецЕсли;
			
		Если Найти(ДополнительныеПараметры.ИмяКоманды, "СкопироватьКоличественныйУчет") > 0 Тогда
			
			УстановитьКоличественныйУчетДляПодчиненныхЭлементовСервер(Объект.Ссылка, Объект.КоличественныйУчет);
			КоличественныйУчетИзменен = Ложь;
			ТекстПредупреждения = ТекстПредупреждения + ?(ТекстПредупреждения = "", "", Символы.ПС) + НСтр("ru = 'Настройка количественного учета скопирована'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			
		КонецЕсли;
			
		Если НЕ ДополнительныеПараметры.Свойство("ЗакрыватьФорму") Тогда
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли; 
			
	КонецЕсли;

	ПредупредитьОбИзмененииВидимостиАналитики();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупредитьОбИзмененииВидимостиАналитики()

	АналитикаИзменена         = Ложь;
	КоличественныйУчетИзменен = Ложь;
	
	Если ДопРеквизитыФормы.ИзмененныеАналитики.Количество() > 0 Тогда
		
		ИменаАналитик = "";
		Для Каждого Имя Из ДопРеквизитыФормы.ИзмененныеАналитики Цикл
			ИменаАналитик = ИменаАналитик + ?(ИменаАналитик = "", "", ", ") + """" + Имя + """";
		КонецЦикла; 
		
		ТекстПредупреждения = НСтр("ru = 'Для аналитики %1 изменена видимость в операциях.
			|Теперь аналитика будет появлятся в операциях автоматически, после выбора связанных с ней статей'");
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, ИменаАналитик);
		
		Оповещение = Новый ОписаниеОповещения("ПредупредитьОбИзмененииВидимостиАналитикиЗавершение", ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение, ТекстПредупреждения, , Заголовок);
		
	Иначе
		
		ПредупредитьОбИзмененииВидимостиАналитикиЗавершение(Неопределено);
		
	КонецЕсли; 

		
КонецПроцедуры

&НаКлиенте
Процедура ПредупредитьОбИзмененииВидимостиАналитикиЗавершение(ДополнительныеПараметры) Экспорт

	Если Открыта() И ЗакрыватьФормуПослеПредупрежденияОбИзменеиях = Истина Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры
 

// Обслуживание аналитики

&НаСервере
Процедура ЗаписатьНаборНастроек(СсылкаНаСтатью)

	НаборЗаписей = РегистрыСведений.НастройкиАналитикиПоСтатьям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Статья.Установить(СсылкаНаСтатью);

	Для Каждого СтрокаАналитики Из ТаблицаАналитики Цикл
		Если ЗначениеЗаполнено(СтрокаАналитики.ВидАналитики) Тогда
			ЗаписьНастройки = НаборЗаписей.Добавить();
			ЗаписьНастройки.ВидАналитики        = СтрокаАналитики.ВидАналитики;
			ЗаписьНастройки.Статья              = СсылкаНаСтатью;
			ЗаписьНастройки.ЗначениеПоУмолчанию = СтрокаАналитики.ЗначениеПоУмолчанию;
			ЗаписьНастройки.Использовать        = Истина;
		КонецЕсли;
	КонецЦикла; 
	
	НаборЗаписей.Записать(Истина);

КонецПроцедуры
 
&НаСервере
Процедура ПрочитатьНастройкиАналитики()

	ТаблицаАналитики.Очистить();
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьАналитикуСтатей") Тогда
		Возврат;
	КонецЕсли; 
	
	Статья = ?(Объект.Ссылка.Пустая(), Объект.Родитель, Объект.Ссылка);
	Если НЕ ЗначениеЗаполнено(Статья) Тогда
		Возврат;
	КонецЕсли; 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Статья", Статья);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиАналитикиПоСтатьям.ВидАналитики,
	|	НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию
	|ИЗ
	|	РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|ГДЕ
	|	НастройкиАналитикиПоСтатьям.Статья = &Статья
	|	И НастройкиАналитикиПоСтатьям.Использовать
	|	И НЕ НастройкиАналитикиПоСтатьям.ВидАналитики.ПометкаУдаления
	|	И НастройкиАналитикиПоСтатьям.ВидАналитики.АктуальнаДляРасхода
	|	И НастройкиАналитикиПоСтатьям.ВидАналитики.РасширенныеНастройкиДляРасхода
	|
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиАналитикиПоСтатьям.ВидАналитики.Наименование";
	
	ТаблицаАналитики.Загрузить(Запрос.Выполнить().Выгрузить());
	Если ТаблицаАналитики.Количество() > 0 Тогда
		ЗаголовокГруппыАналитики = НСтр("ru = 'Аналитика для автоматического заполнения в операциях: %1'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ЗаголовокГруппыАналитики = "► " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокГруппыАналитики, ТаблицаАналитики.Количество());
	Иначе
		ЗаголовокГруппыАналитики = "► " + НСтр("ru = 'Аналитика для автоматического заполнения в операциях отсутствует'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
	КонецЕсли; 
	Элементы.ГруппаНастройкиАналитики.ЗаголовокСвернутогоОтображения = ЗаголовокГруппыАналитики;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиАналитики(СсылкаНаСтатью, Отказ, ОписаниеПроблемы)

	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	ОписаниеПроблемы = "";
	ОписаниеТекущегоДействия = НСтр("ru = 'Сохранение настроек аналитики'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	Попытка
		
		Если ТаблицаАналитики.Количество() = 0 Тогда
			НаборЗаписей = РегистрыСведений.НастройкиАналитикиПоСтатьям.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Статья.Установить(СсылкаНаСтатью);
			ОписаниеТекущегоДействия = НСтр("ru = ''", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			НаборЗаписей.Записать(Истина);
			Возврат;
		Иначе
			
			ТаблицаВидовАналитик = ТаблицаАналитики.Выгрузить(,"ВидАналитики");
			ТаблицаВидовАналитик.Свернуть("ВидАналитики");
			Если ТаблицаВидовАналитик.Количество() < ТаблицаАналитики.Количество() Тогда
				Отказ = истина;
				ОписаниеПроблемы = НСтр("ru = 'В аналитике для автоматического заполнения несколько раз указаны одинаковые виды аналитик.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
				Возврат;
			КонецЕсли; 
			
			// Проверяем виды аналитики, в которых нужно установить расширенные настройки:
			ОписаниеТекущегоДействия = НСтр("ru = 'Сохранение настроек аналитики, установка расширенных настроек для выбранных видов аналитики'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ВидыАналитикиДляИзменения = ВидыАналитикБезРасширенныхНастроек(ТаблицаВидовАналитик.ВыгрузитьКолонку("ВидАналитики"));
			Для Каждого ВидАналитики Из ВидыАналитикиДляИзменения Цикл
				
				ОбъектВидаАналитики = ВидАналитики.ПолучитьОбъект();
				ОбъектВидаАналитики.Заблокировать();
				ОбъектВидаАналитики.РасширенныеНастройкиДляРасхода = Истина;
				ОбъектВидаАналитики.Записать();
				
				ДопРеквизитыФормы.ИзмененныеАналитики.Добавить(ОбъектВидаАналитики.Наименование);
				
			КонецЦикла; 
			
			ЗаписатьНаборНастроек(СсылкаНаСтатью);
			
		КонецЕсли; 
	
	Исключение
		
		ДеньгиВызовСервера.ЗаписатьОшибкуДействияВЖурналРегистрации(НСтр("ru = 'Запись статьи расходов'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()) , 
			ОписаниеТекущегоДействия, 
			ИнформацияОбОшибке(), 
			Отказ, ОписаниеПроблемы);
		Возврат;
		
	КонецПопытки; 

КонецПроцедуры

&НаСервере
Функция ВидыАналитикБезРасширенныхНастроек(СписокВидовАнилитик)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокВидовАнилитик", СписокВидовАнилитик); 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыАналитик.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|ГДЕ
	|	ВидыАналитик.Ссылка В(&СписокВидовАнилитик)
	|	И НЕ ВидыАналитик.РасширенныеНастройкиДляРасхода";
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;

КонецФункции

// Вызывается если пользователь выбрал кнопку записать изменения
&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(Ответ = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт

	ПроверятьПодчиненные = НЕ Объект.Ссылка.Пустая();
	
	Если ПроверитьЗаполнение() И Записать() Тогда
		Модифицированность = Ложь;
	Иначе
		ЗакрыватьФормуПослеПредупрежденияОбИзменеиях = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ПроверятьПодчиненные И АналитикаИзменена ИЛИ КоличественныйУчетИзменен Тогда
		
		КоличествоПодчиненных = КоличествоПодчиненныхЭлементовСервер(Объект.Ссылка);
		Если КоличествоПодчиненных > 0 Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ЗакрыватьФорму", ЗакрыватьФормуПослеПредупрежденияОбИзменеиях = Истина);
			Если АналитикаИзменена И КоличественныйУчетИзменен Тогда
				ТекстВопроса = НСтр("ru = 'Установить такие же настройки аналитики и количественно-ценового учета в %1 подчиненных статьях?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
				ДополнительныеПараметры.Вставить("ИмяКоманды", "СкопироватьНастройкиАналитики,СкопироватьКоличественныйУчет");
			ИначеЕсли АналитикаИзменена Тогда
				ТекстВопроса = НСтр("ru = 'Установить такую же аналитику для автоматического заполнения в %1 подчиненных статьях?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
				ДополнительныеПараметры.Вставить("ИмяКоманды", "СкопироватьНастройкиАналитики");
			Иначе
				ТекстВопроса = НСтр("ru = 'Установить такую же настройку количественно-ценового учета в %1 подчиненных статьях?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
				ДополнительныеПараметры.Вставить("ИмяКоманды", "СкопироватьКоличественныйУчет");
			КонецЕсли; 
			ДополнительныеПараметры.Вставить("ТекстВопроса", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, КоличествоПодчиненных));
			ЗапроситьПодтверждениеКоманды(ДополнительныеПараметры);
			
		Иначе
			
			ПредупредитьОбИзмененииВидимостиАналитики();
			
		КонецЕсли;
		
	КонецЕсли;
	

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства


#КонецОбласти


