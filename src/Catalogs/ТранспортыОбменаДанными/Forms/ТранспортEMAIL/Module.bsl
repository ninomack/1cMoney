#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаписатьПараметрыТранспорта(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ТранспортыОбменаДанными.ОбновитьПараметрыСценария(ТекущийОбъект, РасписаниеРегламентногоЗадания, ИспользоватьРегламентноеЗадание);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура ВыполнятьОбменДаннымиАвтоматическиПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры
  
&НаКлиенте
Процедура СжиматьФайлИсходящегоСообщенияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры



#КонецОбласти



#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьРасписаниеРегламентногоЗадания(Команда)
	
	РедактированиеРасписанияРегламентногоЗадания();
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверитьПодключение(Команда)
	
	ПроверитьПодключение();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Подготовка реквизитов формы
	ПрочитатьПараметрыТранспорта();
	COMАутентификацияОперационнойСистемы = (ТипАутентификации = 1);
	
	РасписаниеРегламентногоЗадания = Справочники.ТранспортыОбменаДанными.РасписаниеСценария(Объект.Ссылка, ИспользоватьРегламентноеЗадание);
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.ПарольАрхиваСообщенияОбмена.Доступность = Объект.СжиматьФайлИсходящегоСообщения;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыТранспорта()

	Для Каждого СтрокаПараметра Из Объект.ПараметрыТранспорта Цикл
		Если ЗначениеЗаполнено(СтрокаПараметра.ИмяПараметра) Тогда
			ЭтаФорма[СтрокаПараметра.ИмяПараметра] = ?(ЗначениеЗаполнено(СтрокаПараметра.ЗначениеДлиннойСтрокой), СтрокаПараметра.ЗначениеДлиннойСтрокой, СтрокаПараметра.ЗначениеПараметра);
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыТранспорта(ТекущийОбъект)

	ТекущийОбъект.ПараметрыТранспорта.Очистить();
	//НоваяСтрокаПараметровТранспорта(ТекущийОбъект, "COMАутентификацияОперационнойСистемы", COMАутентификацияОперационнойСистемы);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	ПроверитьПодключениеНаСервере(Отказ);
	
	//ОповеститьПользователяОРезультатахПодключения(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеНаСервере(Отказ)
	
	ОбменДаннымиСервер.ПроверитьПодключениеОбработкиТранспортаСообщенийОбмена(Отказ, 
				СтруктураНастроекТранспорта(), 
				Объект.ВидТранспорта);
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВнешнийРесурсЗавершение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ВнешниеРесурсыРазрешены = Истина;
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗадания()
	
	// если расписание не инициализировано в форме на сервере, то создаем новое
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	// открываем диалог для редактирования Расписания
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеРасписанияРегламентногоЗаданияЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Расписание;
		
		ОбновитьПредставлениеРасписания();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеРасписания()
	
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
КонецПроцедуры


&НаСервере
Функция СтруктураНастроекТранспорта()

	Результат = Новый Структура();
	Результат.Вставить("EMAILМаксимальныйДопустимыйРазмерСообщения", Объект.МаксимальныйДопустимыйРазмерСообщения);
	Результат.Вставить("EMAILСжиматьФайлИсходящегоСообщения",        Объект.СжиматьФайлИсходящегоСообщения);
	Результат.Вставить("EMAILУчетнаяЗапись",                         Объект.EMAILУчетнаяЗапись);
	Результат.Вставить("ПарольАрхиваСообщенияОбмена",                Объект.ПарольАрхиваСообщенияОбмена);
	Результат.Вставить("Узел", ОбменМобильноеПриложение.ПолучитьЭтотУзел());

	Возврат Результат;
	
КонецФункции


#КонецОбласти


