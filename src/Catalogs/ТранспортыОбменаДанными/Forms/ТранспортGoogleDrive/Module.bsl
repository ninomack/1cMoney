#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаписатьПараметрыТранспорта(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ТранспортыОбменаДанными.ОбновитьПараметрыСценария(ТекущийОбъект, РасписаниеРегламентногоЗадания, ИспользоватьРегламентноеЗадание);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура ВыполнятьОбменДаннымиАвтоматическиПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры
  

#КонецОбласти



#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьРасписаниеРегламентногоЗадания(Команда)
	
	РедактированиеРасписанияРегламентногоЗадания();
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверитьПодключение(Команда)
	
	ТекстРезультата = "";
	Если ПроверитьДоступностьПровайдера(ТекстРезультата) Тогда
		ТекстРезультата = НСтр("ru = 'Аккаунт Dropbox готов к обмену данными!'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли; 
	
	ПоказатьПредупреждение(, ТекстРезультата);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Подготовка реквизитов формы
	ПрочитатьПараметрыТранспорта();
	
	РасписаниеРегламентногоЗадания = Справочники.ТранспортыОбменаДанными.РасписаниеСценария(Объект.Ссылка, ИспользоватьРегламентноеЗадание);
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ПредставлениеРасписания = Строка(Форма.РасписаниеРегламентногоЗадания);
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
		
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыТранспорта()

	Для Каждого СтрокаПараметра Из Объект.ПараметрыТранспорта Цикл
		Если ЗначениеЗаполнено(СтрокаПараметра.ИмяПараметра) Тогда
			ЭтаФорма[СтрокаПараметра.ИмяПараметра] = ?(ЗначениеЗаполнено(СтрокаПараметра.ЗначениеДлиннойСтрокой), СтрокаПараметра.ЗначениеДлиннойСтрокой, СтрокаПараметра.ЗначениеПараметра);
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыТранспорта(ТекущийОбъект)

	ТекущийОбъект.ПараметрыТранспорта.Очистить();

КонецПроцедуры


&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗадания()
	
	// если расписание не инициализировано в форме на сервере, то создаем новое
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	// открываем диалог для редактирования Расписания
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеРасписанияРегламентногоЗаданияЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Расписание;
		
		ОбновитьПредставлениеРасписания();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеРасписания()
	
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
КонецПроцедуры


&НаСервере
Функция ПроверитьДоступностьПровайдера(ОписаниеПроблемы)

	ОписаниеПроблемы = "";
	Если Объект.ЗапретитьИспользование Тогда
		ОписаниеПроблемы = НСтр("ru = 'Выключено использование  Google Drive'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Ложь;
	КонецЕсли;
		
	Если ОписаниеПроблемы <> "" Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	ОбъектОбработки = Обработки.ТранспортСообщенийОбменаОблачныйФайловыйСервис.Создать();	
	ОбъектОбработки.Провайдер = Перечисления.ТипыПровайдеровREST.Google;
	ОбъектОбработки.Инициализация();
	
	Результат = Истина;
	
	Если НЕ ОбъектОбработки.ВыполнитьДействияПередОбработкойСообщения() Тогда
		ОписаниеПроблемы = ОбъектОбработки.СтрокаСообщенияОбОшибке;
		Результат = Ложь;
	КонецЕсли;
	
	Если Результат И НЕ ОбъектОбработки.ПодключениеУстановлено() Тогда
		ОписаниеПроблемы = ОбъектОбработки.СтрокаСообщенияОбОшибке;
		Результат = Ложь;
	КонецЕсли; 
	
	ОбъектОбработки.ВыполнитьДействияПослеОбработкиСообщения();
	Возврат Результат;
	
КонецФункции


#КонецОбласти


