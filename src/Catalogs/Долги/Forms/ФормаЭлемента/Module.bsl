
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	РаботаСФормамиСправочников.ФормаОбъектаПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект, Истина, Истина, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСправочников.ФормаОбъектаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка, Истина, Истина, Истина);
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	РаботаСФормамиСправочниковКлиент.ФормаОбъектаПриОткрытии(ЭтотОбъект, Отказ, Истина, Истина, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.Ссылка.Пустая() Тогда
		ОбслуживаниеСправочниковКлиент.ИнформироватьОДобавленииСтатьиБюджета();
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСправочников.ФормаОбъектаПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Ссылка) И ТекущийОбъект.Активность <> ТекущийОбъект.Ссылка.Активность И ЗначениеЗаполнено(ПараметрыРасписания.ВладелецРасписания) Тогда
		ТаблицаДат = ПлановыеОперации.ПолучитьТаблицуПроизвольныхДатДляРедактирования(ПараметрыРасписания.ВладелецРасписания,
				ПараметрыГрафика.ДатаВозникновенияДолга, 
				КонецГода(ДобавитьМесяц(ПараметрыГрафика.ДатаВозникновенияДолга, ПараметрыГрафика.СрокМесяцев)));
		СохранитьРасписание = Истина;
		АдресПроизвольныхДатРасписания = ПоместитьВоВременноеХранилище(ТаблицаДат, УникальныйИдентификатор);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСправочников.ФормаОбъектаПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
	Если СохранитьРасписание И НЕ ЗначениеЗаполнено(ПараметрыРасписания.ВладелецРасписания) Тогда
		
		ВалютаУчета = Константы.ВалютаУчета.Получить();
		
		// Создаем Шаблон платежа
		Если ТекущийОбъект.ИспользоватьДляУчетаВыданныхДолгов
			И НЕ ТекущийОбъект.ИспользоватьДляУчетаВзятыхДолгов Тогда
			
			// Возврат выданного займа
			ШаблонПлатежа = Документы.НамВернулиДолг.СоздатьДокумент();
			ШаблонПлатежа.ЭтоШаблон            = Истина;
			ШаблонПлатежа.Дата                 = ТекущаяДатаСеанса();
			ШаблонПлатежа.ОписаниеОперации     = НСтр("ru='Возврат займа %1'");
			ШаблонПлатежа.ОписаниеОперации     = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПлатежа.ОписаниеОперации, "<" + Объект.Наименование + ">");
			ШаблонПлатежа.ВалютаДолга          = ТекущийОбъект.Валюта;
			ШаблонПлатежа.Кошелек              = ПараметрыГрафика.КошелекДляПогашения;
			ШаблонПлатежа.ВалютаПолучено       = ?(ЗначениеЗаполнено(ШаблонПлатежа.Кошелек.Валюта), ШаблонПлатежа.Кошелек.Валюта, ВалютаУчета);
			Если ШаблонПлатежа.Кошелек.ИспользоватьДляНакоплений Тогда
				ШаблонПлатежа.ФинансоваяЦель   = Справочники.ФинансовыеЦели.ОбщиеНакопления;
			КонецЕсли;
			ШаблонПлатежа.Долг                 = ТекущийОбъект.Ссылка;
			ШаблонПлатежа.Контакт              = ТекущийОбъект.Контакт;
			
			ШаблонПлатежа.Записать();
			
		Иначе
			
			// Погашение полученного кредита
			ШаблонПлатежа = Документы.МыВернулиДолг.СоздатьДокумент();
			ШаблонПлатежа.ЭтоШаблон                     = Истина;
			ШаблонПлатежа.Дата                          = ТекущаяДатаСеанса();
			ШаблонПлатежа.ОписаниеОперации              = НСтр("ru='Погашение кредита %1'");
			ШаблонПлатежа.ОписаниеОперации              = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПлатежа.ОписаниеОперации, "<" + ТекущийОбъект.Наименование + ">");
			ШаблонПлатежа.ВалютаКредита                 = ТекущийОбъект.Валюта;
			ШаблонПлатежа.Кошелек                       = ПараметрыГрафика.КошелекДляПогашения;
			ШаблонПлатежа.ВалютаКошелька                = ?(ЗначениеЗаполнено(ШаблонПлатежа.Кошелек.Валюта), ШаблонПлатежа.Кошелек.Валюта, ВалютаУчета);
			Если ШаблонПлатежа.Кошелек.ИспользоватьДляНакоплений Тогда
				ШаблонПлатежа.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
			КонецЕсли;
			ШаблонПлатежа.Кредит                        = ТекущийОбъект.Ссылка;
			ШаблонПлатежа.Кредитор                      = ТекущийОбъект.Контакт;
			
			ШаблонПлатежа.Записать();
			
		КонецЕсли;
		
		ПараметрыРасписания.ВладелецРасписания = ШаблонПлатежа.Ссылка;
		ПараметрыГрафика.ШаблонОперации = ПараметрыРасписания.ВладелецРасписания;
		
	КонецЕсли;
	
	
	// Обслуживание плановых операций
	ПлановыеОперации.ПослеЗаписиСправочникДолги(Объект.Ссылка, ПараметрыРасписания, АдресПроизвольныхДатРасписания, СохранитьРасписание, ПараметрыГрафика);
	
	ЗаполнитьДобавленныеКолонки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записан элемент справочника", Новый Структура("ИмяСправочника,Ссылка,ВладелецФормы", "Долги", Объект.Ссылка, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	РаботаСФормамиСправочниковКлиент.ФормаОбъектаПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи, Истина, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записана операция" Тогда
		
		ВидДокумента = "";
		ЭтоШаблон = Ложь;
		Если Параметр.Свойство("ВидДокумента", ВидДокумента) И Параметр.Свойство("ЭтоШаблон", ЭтоШаблон) И ЭтоШаблон = Истина Тогда
			Если ВидДокумента = "МыВернулиДолг" ИЛИ ВидДокумента = "НамВернулиДолг" Тогда
				ОбновитьШаблонПлатежей();
			КонецЕсли; 
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = "Изменено расписание" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ИмяСправочника = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			РаботаСФормамиСправочниковКлиентСервер.ОбслужитьАвтоНаименованиеДолга(ЭтаФорма);
			УправлениеФормой();
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = "Записана операция" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ВидДокумента = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ВидДокумента", ВидДокумента) И ВидДокумента = "ВводИзменениеОстатка"
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			ПриИзмененииОстаткаСервер();
			ОбновитьОтображениеДанных();
		КонецЕсли; 
	КонецЕсли; 
		
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ОбработатьОповещениеДобавленияФайла(ЭтотОбъект, Параметр);
	ИначеЕсли (ПрикрепленныеФайлыКлиент.ЭтоИзменениеСпискаМультимедиа(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	КонецЕсли; 
	#КонецОбласти
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтактПриИзменении(Элемент)
	
	РаботаСФормамиСправочниковКлиентСервер.ОбслужитьАвтоНаименованиеДолга(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	РаботаСФормамиСправочниковКлиентСервер.ОбслужитьАвтоНаименованиеДолга(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДолгаПриИзменении(Элемент)
	
	Объект.ИспользоватьДляУчетаВзятыхДолгов   = ВидДолга = 2 ИЛИ ВидДолга = 0;
	Объект.ИспользоватьДляУчетаВыданныхДолгов = ВидДолга = 2 ИЛИ ВидДолга = 1;
	
	ПрочитатьЗаписиРегистровСведений();
	
	РаботаСФормамиСправочниковКлиентСервер.ОбслужитьАвтоНаименованиеДолга(ЭтаФорма);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстШаблонаОперацииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьШаблонПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстГрафикаПогашенияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПлановыеОперацииКлиент.ОткрытьРедакторРасписанияИзСправочникаДолги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий", Заголовок);
	
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеТекущегоФайлаНажатие(Элемент, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаТекущийФайл(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлКнопкаНавигацииНажатие(Элемент)
	ПрикрепленныеФайлыКлиент.ФайлКнопкаНавигацииНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры

#КонецОбласти 


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьОстаток(Команда)
	
	ЗначенияЗаполнения = Новый Структура("ОбъектУчета", Объект.Ссылка);
	ПараметрыДокумента = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Документ.ВводИзменениеОстатка.ФормаОбъекта", ПараметрыДокумента, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстаток(Команда)
	
	СтруктураОстатков = ПолучитьТекущийОстаток(Объект.Ссылка);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураОстатков);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Подготовка реквизитов формы
	Если Объект.ИспользоватьДляУчетаВзятыхДолгов И Объект.ИспользоватьДляУчетаВыданныхДолгов Тогда
		ВидДолга = 2; // Взаимный расчет
	ИначеЕсли Объект.ИспользоватьДляУчетаВыданныхДолгов Тогда
		ВидДолга = 1; // Выданый заем
	Иначе
		ВидДолга = 0; // Полученный кредит
	КонецЕсли; 
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		ЗапрещеноМенятьВалюту = РазделыУчета.ЕстьПроводкиПоОбъектуУчета(Объект.Ссылка);
	КонецЕсли; 
	
	ПрочитатьЗаписиРегистровСведений();
	
	РаботаСФормамиСправочниковКлиентСервер.СформироватьСписокВыбораНаименования(Элементы.НаименованиеДолга, Объект, ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = Элементы.НаименованиеДолга.СписокВыбора[0];
	КонецЕсли;
	
	// Заполнение дополнительных колонок
	ЗаполнитьДобавленныеКолонки();
	
	// Общие настройки форм элементов справочников
	РаботаСФормамиСправочников.ФормаЭлементаПриСозданииНаСервере(ЭтаФорма);
	
	СтруктураОстатков = ПолучитьТекущийОстаток(Объект.Ссылка);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураОстатков);
	
	// Сброс расположения и размеров формы
	ОбщегоНазначенияДеньги.СброситьРазмерИПоложениеФормы(ЭтотОбъект);
	
	#Область ПрикрепленныеФайлы
	ИндексТекущегоФайла = ПрикрепленныеФайлыКлиентСервер.ИндексПервогоГрафическогоФайла(МедиаФайлы);
	ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	#КонецОбласти	
	
	// Настройка внешнего вида
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаписиРегистровСведений()

	ТекстШаблонаОперации  = НСтр("ru = 'Не задан'") ;
	
	Если Объект.ИспользоватьДляУчетаВзятыхДолгов = Объект.ИспользоватьДляУчетаВыданныхДолгов Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыГрафика, РегистрыСведений.ПараметрыГрафикаПогашенияДолгов.СоздатьМенеджерЗаписи());
		ЗаполнитьЗначенияСвойств(ПараметрыРасписания, РегистрыСведений.Расписания.СоздатьМенеджерЗаписи());
		ТекстШаблонаОперации   = НСтр("ru = 'Для взаимных расчетов не задается'") ;
		ТекстГрафикаПогашения  = НСтр("ru = 'Для взаимных расчетов не задается'") ;
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Если Объект.ИспользоватьДляУчетаВзятыхДолгов И НЕ Объект.ИспользоватьДляУчетаВыданныхДолгов Тогда
		Запрос.УстановитьПараметр("ИмяТипа", Тип("ДокументСсылка.МыВернулиДолг"));
	ИначеЕсли НЕ Объект.ИспользоватьДляУчетаВзятыхДолгов И Объект.ИспользоватьДляУчетаВыданныхДолгов Тогда
		Запрос.УстановитьПараметр("ИмяТипа", Тип("ДокументСсылка.НамВернулиДолг"));
	КонецЕсли; 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыГрафикаПогашенияДолгов.*,
	|	ЕСТЬNULL(ПараметрыГрафикаПогашенияДолгов.ШаблонОперации.ОписаниеОперации, """") КАК НазваниеШаблона,
	|	ЕСТЬNULL(ПараметрыГрафикаПогашенияДолгов.ШаблонОперации.ПометкаУдаления, Ложь) КАК ПометкаУдаления
	|ИЗ
	|	РегистрСведений.ПараметрыГрафикаПогашенияДолгов КАК ПараметрыГрафикаПогашенияДолгов
	|ГДЕ
	|	ПараметрыГрафикаПогашенияДолгов.Долг = &Ссылка 
	|		И ТИПЗНАЧЕНИЯ(ПараметрыГрафикаПогашенияДолгов.ШаблонОперации) = &ИмяТипа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расписания.*
	|ИЗ
	|	РегистрСведений.Расписания КАК Расписания
	|ГДЕ
	|	Расписания.ВладелецРасписания В
	|			(ВЫБРАТЬ
	|				Параметры.ШаблонОперации
	|			ИЗ
	|				РегистрСведений.ПараметрыГрафикаПогашенияДолгов КАК Параметры
	|			ГДЕ
	|				Параметры.Долг = &Ссылка
	|				И ТИПЗНАЧЕНИЯ(Параметры.ШаблонОперации) = &ИмяТипа
	|)";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	Выборка = ПакетРезультатов[0].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыГрафика, Выборка);
		ТекстШаблонаОперации = ?(ЗначениеЗаполнено(Выборка.НазваниеШаблона), Выборка.НазваниеШаблона, НСтр("ru = '<Без названия>'") );
		Если Выборка.ПометкаУдаления Тогда
			ТекстШаблонаОперации = ТекстШаблонаОперации + НСтр("ru = ' (Помечен на удаление!)'"); 
		КонецЕсли; 
	Иначе
		ЗаполнитьЗначенияСвойств(ПараметрыГрафика, РегистрыСведений.ПараметрыГрафикаПогашенияДолгов.СоздатьМенеджерЗаписи());
	КонецЕсли; 
	Выборка = ПакетРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыРасписания, Выборка);
		//ТекстГрафикаПогашения = ПараметрыРасписания.ОписаниеРасписания;
	Иначе
		ТекстГрафикаПогашения = НСтр("ru = 'Не задан'");
		ЗаполнитьЗначенияСвойств(ПараметрыРасписания, РегистрыСведений.Расписания.СоздатьМенеджерЗаписи());
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ОбновитьШаблонПлатежей()

	ПрочитатьЗаписиРегистровСведений();
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонки()
	

КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()

	Элементы.Валюта.Доступность           = Не ЗапрещеноМенятьВалюту;
	
	ДоступностьШаблона = (Объект.ИспользоватьДляУчетаВзятыхДолгов И НЕ Объект.ИспользоватьДляУчетаВыданныхДолгов)
		ИЛИ (НЕ Объект.ИспользоватьДляУчетаВзятыхДолгов И Объект.ИспользоватьДляУчетаВыданныхДолгов);
	Элементы.ТекстШаблонаОперации.Доступность  = ДоступностьШаблона;
	Элементы.ТекстГрафикаПогашения.Доступность = ДоступностьШаблона; 

	ТекстГрафикаПогашения = ПлановыеОперацииКлиентСервер.ПредставлениеУсловийДолга(ПараметрыГрафика, ПараметрыРасписания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблонПлатежей()
	
	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Создать шаблон можно только для долга, сохраненного в базе.
			|Записать этот долг?'");
		ОбработчикОтвета = Новый ОписаниеОповещения("ОткрытьШаблонПлатежейЗавершение", ЭтотОбъект);	
		ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ОткрытьФормуШаблонаПлатежей();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОстаткаСервер()

	СтруктураОстатков = ПолучитьТекущийОстаток(Объект.Ссылка);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураОстатков);
	УправлениеФормой();

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущийОстаток(Знач Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Субконто", Ссылка);
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.РазделыУчета.Долги);
	Запрос.УстановитьПараметр("Период", КонецДня(ТекущаяДатаСеанса()));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	жОстатки.Счет,
	|	СУММА(жОстатки.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.ЖурналОпераций.Остатки(&Период, Счет В ИЕРАРХИИ (&Счет), , Субконто1 = &Субконто) КАК жОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	жОстатки.Счет";
	
	РезультатЗапроса = Запрос.Выполнить();
	Результат = Новый Структура("ТекущийОстаток,ТекущийОстатокПроцентов", 0, 0);
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Счет = ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов Тогда
				Результат.ТекущийОстаток = ?(Выборка.ВалютнаяСуммаОстаток = NULL, 0, Выборка.ВалютнаяСуммаОстаток);
			ИначеЕсли ЗначениеЗаполнено(Выборка.Счет) Тогда
				Результат.ТекущийОстатокПроцентов = ?(Выборка.ВалютнаяСуммаОстаток = NULL, 0, Выборка.ВалютнаяСуммаОстаток);
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 

	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуШаблонаПлатежей()

	Если ЗначениеЗаполнено(ПараметрыГрафика.ШаблонОперации) Тогда
		ПараметрыФормы = Новый Структура("Ключ", ПараметрыГрафика.ШаблонОперации);
		Если Объект.ИспользоватьДляУчетаВзятыхДолгов Тогда
			ОткрытьФорму("Документ.МыВернулиДолг.ФормаОбъекта", ПараметрыФормы, ЭтаФорма, Ложь);
		Иначе
			ОткрытьФорму("Документ.НамВернулиДолг.ФормаОбъекта", ПараметрыФормы, ЭтаФорма, Ложь);
		КонецЕсли; 
	Иначе
		Если Объект.ИспользоватьДляУчетаВзятыхДолгов Тогда
			НазваниеШаблона = НСтр("ru = 'Погашение кредита [%1]'");
			НазваниеШаблона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НазваниеШаблона, Объект.Наименование);
			ПараметрыШаблона = Новый Структура("Кредитор,Кредит,ОписаниеОперации,ЭтоШаблон", Объект.Контакт, Объект.Ссылка,
					НазваниеШаблона, Истина);
			ОткрытьФорму("Документ.МыВернулиДолг.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыШаблона), ЭтаФорма, Ложь);
		Иначе
			НазваниеШаблона = НСтр("ru = 'Возврат займа [%1]'");
			НазваниеШаблона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НазваниеШаблона, Объект.Наименование);
			ПараметрыШаблона = Новый Структура("Контакт,Долг,СуммаВозвратаДолга,СуммаСписания,ОписаниеОперации,ЭтоШаблон", Объект.Контакт, 
					Объект.Ссылка, 0, 0, НазваниеШаблона, Истина);
			ОткрытьФорму("Документ.НамВернулиДолг.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыШаблона), ЭтаФорма, Ложь);
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблонПлатежейЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			ОткрытьФормуШаблонаПлатежей();
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


