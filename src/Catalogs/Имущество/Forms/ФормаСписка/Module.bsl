////////////////////////////////////////////////////////////////////////////////
//Справочник.Имущество.ФормаСписка
//  используется и для выбора и для просмотра
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", Константы.ВалютаУчета.Получить());
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Установка условного оформления для форм списков:
	СуммыИВалюты = Новый Структура("Остаток", Новый Массив);
	СуммыИВалюты.Остаток.Добавить("Остаток");
	СуммыИВалюты.Остаток.Добавить("Валюта");
	РаботаСФормамиСправочников.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "Список", Истина, , СуммыИВалюты);
	
	// Проверяем режим открытия формы списка
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора      = Истина;
		Элементы.Список.ОтображатьКорень = Истина;
		Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	// Установка условного оформления для форм списков:
	РаботаСФормамиСправочников.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "Список", Истина, , );
	
	// Перенос программно установленного отбора в пользовательские настройки:
	РаботаСФормамиСправочников.ФормаСпискаСправочникаОбработатьПараметрыОтбора(ЭтотОбъект, "Список");
	
	Если ХранилищеСистемныхНастроек.Загрузить(ЭтотОбъект.ИмяФормы + ?(КлючНазначенияИспользования = "", "", "/" + КлючНазначенияИспользования) + "/ТекущиеДанные", ) = Неопределено Тогда
		ОбновитьОтборПоАктуальности();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записана операция" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Элементы.Список.РежимВыбора Тогда
		ОтборСписка = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
		Если ОтборСписка <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ОтборСписка, "Активность");
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьОтборПоАктуальности();	
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры



#КонецОбласти

// Обработчики Панели ГруппаБыстрыеОтборы
#Область ГруппаБыстрыеОтборы 

&НаКлиенте
Процедура АктуальностьПриИзменении(Элемент)
	
	ОбновитьОтборПоАктуальности();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьБыстрыйОтборПоРеквизитам(Форма)

	ОтборСписка = Форма.Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Форма.Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	Если ОтборСписка <> Неопределено Тогда
		Если Форма.Актуальность = 1 Тогда
			// Только активные
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Активность", Истина, ВидСравненияКомпоновкиДанных.Равно, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
		ИначеЕсли Форма.Актуальность = -1 Тогда
			// Только неактивные
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Активность", Ложь, ВидСравненияКомпоновкиДанных.Равно, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
		Иначе
			// Все шаблоны
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Активность", , , , Ложь, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
		КонецЕсли; 
		
		ОписаниеОтбора = Строка(ОтборСписка);
		Форма.ОписаниеОтбора = ?(ПустаяСтрока(ОписаниеОтбора), НСтр("ru = 'не установлен'"), ОтборСписка);
		
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура АктуализироватьЗначенияБыстрыхОтборов(Настройки)

	// Восстанавливаем значения быстрых отборов, если они были
	ОтборСписка = Настройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	Если ОтборСписка <> Неопределено Тогда
		
		// "обнуляем" значения быстрого отбора:
		Актуальность    = 0;
		ОписаниеОтбора  = "";
		
		// Проверяем актуальность:
		ЭлементыОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(ОтборСписка, "Активность");
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если НЕ ЭлементОтбора.Использование Тогда
				Актуальность = 0;
			ИначеЕсли ЭлементОтбора.ПравоеЗначение = Ложь Тогда
				Актуальность = 2;
			Иначе
				Актуальность = 1;
			КонецЕсли; 
		КонецЦикла; 
		
		ОписаниеОтбора = Строка(ОтборСписка);
		ОписаниеОтбора = ?(ПустаяСтрока(ОписаниеОтбора), НСтр("ru = 'не установлен'"), ОтборСписка);
		
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборПоАктуальности()

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ОтборПоАктивности", Актуальность);
	
	Если Элементы.Активность.Видимость <> Актуальность = 0 Тогда
		Элементы.Активность.Видимость = Актуальность = 0;
	КонецЕсли;

КонецПроцедуры



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьОстаток(Команда)
	
	ТекущийОбъект = Элементы.Список.ТекущиеДанные;
	Если ТекущийОбъект = Неопределено ИЛИ ТекущийОбъект.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	 
	ПараметрыЗаполнения = Новый Структура("РазделУчета,ОбъектУчета", ПредопределенноеЗначение("ПланСчетов.РазделыУчета.Имущество"), ТекущийОбъект.Ссылка);
	ОткрытьФорму("Документ.ВводИзменениеОстатка.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения));
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти


#Область СлужебныеПроцедурыИФункции


#КонецОбласти







