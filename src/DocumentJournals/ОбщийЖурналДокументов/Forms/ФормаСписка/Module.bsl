#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Устанавливаем свой порядок видов операций
	СписокТипов = ДеньгиВызовСервера.ПолучитьСписокВидовОпераций();
	
	// Заполняем список видов операции:
	Элементы.ТипОперации.СписокВыбора.Добавить("Все", НСтр("ru = 'Все типы операций'") );
	Для Каждого ЭлементСписка Из СписокТипов Цикл
		Элементы.ТипОперации.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление );
	КонецЦикла; 
	ТипОперации = "Все";
	
	// Установка условного оформления для форм списков:
	СуммыИВалюты = Новый Структура("СуммаПоступления, СуммаСписания", 
			Новый Массив, Новый Массив);
	СуммыИВалюты.СуммаПоступления.Добавить("СуммаПоступления");
	СуммыИВалюты.СуммаПоступления.Добавить("ВалютаПоступления");
	СуммыИВалюты.СуммаСписания.Добавить("СуммаСписания");
	СуммыИВалюты.СуммаСписания.Добавить("ВалютаСписания");
	РаботаСФормамиДокументов.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "Список", Истина, СуммыИВалюты, Истина, Ложь);
	
	// Обработка параметра "Отбор":
	Актуальность = 1;
	Если Параметры.Отбор.Свойство("Тип") И ЗначениеЗаполнено(Параметры.Отбор.Тип) Тогда
		ТипОтбора = Параметры.Отбор.Тип;
		ТипОперации = Метаданные.НайтиПоТипу(ТипОтбора).Имя;
		Если НЕ ЗначениеЗаполнено(ТипОперации) Тогда
			ТипОперации = "Все";
		КонецЕсли; 
	КонецЕсли; 
	РаботаСФормамиДокументов.ФормаСпискаДокументовОбработатьПараметрыОтбора(ЭтотОбъект, "Список", ОписаниеОтбора, Истина, Ложь);
	
	Если НЕ ДеньгиВызовСервераПовтИсп.ИспользуетсяВариантИнтерфейсаТакси() Тогда
		// Для обычного интерфейса заменим шрифт на обычный
		РаботаСФормамиСправочников.ИзменитьШрифтПанелиОтбораСпискаВыбора(Элементы.ГруппаБыстрыеОтборы, ШрифтыСтиля.ОбычныйШрифтТекста);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройка стандартных команд формы
	РаботаСФормамиДокументовКлиентСервер.ПереименоватьКнопкиИПанелиСпискаДокументов(ЭтаФорма);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование = Истина Тогда
		Возврат;
	КонецЕсли; 
	
	Отказ = истина;
	ПараметрыФормыНовогоДокумента = Новый Структура;
	ПараметрыФормыНовогоДокумента.Вставить("ЗначенияЗаполнения", Новый Структура);
	Если ЗначениеЗаполнено(Параметр) Тогда
		ПараметрыФормыНовогоДокумента.Вставить("ТипДокумента", Параметр);
		ОткрытьФормуДобавленияОперации(ПараметрыФормыНовогоДокумента);
	Иначе
		ОбработчикВыбора = Новый ОписаниеОповещения("СписокПередНачаломДобавленияЗавершение", ЭтотОбъект, ПараметрыФормыНовогоДокумента);
		СписокТипов.ПоказатьВыборЭлемента(ОбработчикВыбора, НСтр("ru = 'Выбор типа операции'"));
	КонецЕсли; 
	
КонецПроцедуры

// Обработчики Панели ГруппаБыстрыеОтборы
#Область ГруппаБыстрыеОтборы 

&НаКлиенте
Процедура АктуальностьПриИзменении(Элемент)
	
	УстановитьБыстрыйОтборПоРеквизитам(ЭтотОбъект); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОперацииПриИзменении(Элемент)
	
	УстановитьБыстрыйОтборПоРеквизитам(ЭтотОбъект); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОперацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТипОперации = "Все";
	УстановитьБыстрыйОтборПоРеквизитам(ЭтотОбъект); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьБыстрыйОтборПоРеквизитам(Форма)

	ОтборСписка = Форма.Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Форма.Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	Если ОтборСписка <> Неопределено Тогда
		Если Форма.Актуальность = 1 Тогда
			// Только активные
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Проведен", Истина, ВидСравненияКомпоновкиДанных.Равно, , Истина);
			
		ИначеЕсли Форма.Актуальность = 2 Тогда
			// Только неактивные
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Проведен", Ложь, ВидСравненияКомпоновкиДанных.Равно, , Истина);
			
		Иначе
			// Все шаблоны
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Проведен", , , , Ложь);
			
		КонецЕсли; 
		
		Если Форма.ТипОперации = "Все" Тогда
			// Все типы операций
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Тип", , , , Ложь);
		Иначе
			// Только одного типа
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборСписка, "Тип", Тип("ДокументСсылка." + Форма.ТипОперации), ВидСравненияКомпоновкиДанных.Равно, , Истина);
		КонецЕсли; 
		
		ОписаниеОтбора = Строка(ОтборСписка);
		Форма.ОписаниеОтбора = ?(ПустаяСтрока(ОписаниеОтбора), НСтр("ru = 'не установлен'"), СтрЗаменить(ОтборСписка, "Тип документа", "Тип операции"));
		
	КонецЕсли; 

КонецПроцедуры
 
&НаСервере
Процедура СписокПриЗагрузкеПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	АктуализироватьЗначенияБыстрыхОтборов(Настройки);
	
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	АктуализироватьЗначенияБыстрыхОтборов(Список.КомпоновщикНастроек.ПользовательскиеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьЗначенияБыстрыхОтборов(Настройки)

	// Восстанавливаем значения быстрых отборов, если они были
	ОтборСписка = Настройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	Если ОтборСписка <> Неопределено Тогда
		
		// "обнуляем" значения быстрого отбора:
		Актуальность    = 0;
		ОписаниеОтбора  = "";
		ТипОперации     = "Все";
		
		ПолеАктивность = Новый ПолеКомпоновкиДанных("Проведен");
		ПолеТипОперации = Новый ПолеКомпоновкиДанных("Тип");
		Для Каждого ЭлементОтбора Из ОтборСписка.Элементы Цикл
			Если ЭлементОтбора.ЛевоеЗначение = ПолеАктивность Тогда
				Если НЕ ЭлементОтбора.Использование Тогда
					Актуальность = 0;
				ИначеЕсли ЭлементОтбора.ПравоеЗначение = Ложь Тогда
					Актуальность = 2;
				Иначе
					Актуальность = 1;
				КонецЕсли; 
			ИначеЕсли ЭлементОтбора.ЛевоеЗначение = ПолеТипОперации Тогда
				Если НЕ ЭлементОтбора.Использование Или ТипЗнч(ЭлементОтбора.ПравоеЗначение) = Тип("СписокЗначений") Тогда
					ТипОперации = "Все";
				Иначе
					ТипОперации = Метаданные.НайтиПоТипу(ЭлементОтбора.ПравоеЗначение).Имя;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
		ОписаниеОтбора = Строка(ОтборСписка);
		ОписаниеОтбора = ?(ПустаяСтрока(ОписаниеОтбора), НСтр("ru = 'не установлен'"), СтрЗаменить(ОтборСписка, "Тип документа", "Тип операции"));
		
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСписокШаблонов(Команда)
	
	ОткрытьФорму("ЖурналДокументов.ОбщийЖурналДокументов.Форма.ФормаСпискаШаблонов", Неопределено);
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СписокПередНачаломДобавленияЗавершение(Выбор, ДополнительныеПараметры) Экспорт

	Если Выбор <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("ИмяВидаДокумента", Выбор.Значение);
		ОткрытьФормуДобавленияОперации(ДополнительныеПараметры);
	КонецЕсли; 

КонецПроцедуры
 
&НаКлиенте
Процедура ОткрытьФормуДобавленияОперации(ПараметрыФормыНовогоДокумента)

	ПараметрыФормыНовогоДокумента.Вставить("АдресПараметровНовогоДокумента", 
		ПоместитьВоВременноеХранилище(ПараметрыФормыНовогоДокумента, УникальныйИдентификатор));
	
	РаботаСФормамиДокументовКлиент.ОткрытьФормуНовогоДокументаСУчетомШаблона(ПараметрыФормыНовогоДокумента.ИмяВидаДокумента, ПараметрыФормыНовогоДокумента, Элементы.Список);

КонецПроцедуры
 

#КонецОбласти


