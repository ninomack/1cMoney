////////////////////////////////////////////////////////////////////////////////
//ОбщаяФорма.ВыборОбъектаУчета
//  Форма выбора для элементов составного типа
//  
//Параметры формы:
//	Стандартные параметры формы выбора
//	+ РасширенныйВыбор - Структура
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РасширенныйВыбор = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Недостаточно параметров для использования формы выбора объекта учета'");
	КонецЕсли;
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	РазрешитьВыборГрупп = Параметры.Свойство("ВыборГруппИЭлементов") 
		И (Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы 
				Или Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	
	РасширенныйВыбор = Параметры.РасширенныйВыбор;
	РасширенныйВыбор.Вставить("РежимВыбора", Параметры.РежимВыбора);
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора      = Истина;
		Элементы.Список.ОтображатьКорень = Истина;
		Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Отборы = Параметры.Отбор;
	Если Отборы.Свойство("Активность") Тогда
		Актуальность = Отборы.Активность;
	КонецЕсли;
	Если Параметры.Свойство("ВыборГруппы") И Параметры.ВыборГруппы Тогда
		Отборы.Вставить("ЭтоГруппа", Истина);
	КонецЕсли;
	
	Для каждого ЭлементСписка Из Элементы.ВыбранныйТип.СписокВыбора Цикл
		ДоступныеТипы.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
	// Заполнение доступных типов значений
	ТипыДолгов = ?(Параметры.РасширенныйВыбор.Свойство("ТипыДолгов"), Параметры.РасширенныйВыбор.ТипыДолгов, Новый Массив);
	
	Если Параметры.РасширенныйВыбор.Свойство("ИсточникиДанных") Тогда
		Элементы.ВыбранныйТип.СписокВыбора.Очистить();
		Для каждого ДоступныйТип Из Параметры.РасширенныйВыбор.ИсточникиДанных Цикл
			
			Если ДоступныйТип = "Долги" И ЗначениеЗаполнено(ТипыДолгов) Тогда
				
				Если ТипыДолгов.Найти("МыДолжныОсновнаяСумма") <> Неопределено Тогда
					ДобавитьПереключательТипа("МыДолжны");
				КонецЕсли;
				Если ТипыДолгов.Найти("МыДолжныПроценты") <> Неопределено Тогда
					ДобавитьПереключательТипа("МыДолжныПроценты");
				КонецЕсли;
				Если ТипыДолгов.Найти("НамДолжныОсновнаяСумма") <> Неопределено Тогда
					ДобавитьПереключательТипа("НамДолжны");
				КонецЕсли;
				Если ТипыДолгов.Найти("НамДолжныПроценты") <> Неопределено Тогда
					ДобавитьПереключательТипа("НамДолжныПроценты");
				КонецЕсли;
					
			Иначе
				ДобавитьПереключательТипа(ДоступныйТип);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	
	// Определение текущего типа и текущей строки
	ОпределитьТипПоЗначению(Параметры.ТекущаяСтрока);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АктуальностьПриИзменении(Элемент)
	УстановитьОтборПоАктуальности();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйТипПриИзменении(Элемент)
	ВыбранныйТипПриИзмененииСервер();
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если СтрНайти("НамДолжны,НамДолжныПроценты,МыДолжны,МыДолжныПроценты", ВыбранныйТип) > 0 Тогда
		СтандартнаяОбработка = Ложь;
		Значение = Новый Структура("Ссылка,ВидДолга", Значение, ВыбранныйТип);
		ОповеститьОВыборе(Значение);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НазначитьПоУмолчанию(Команда)
	
	Ссылка = ?(Элементы.Список.ТекущиеДанные = Неопределено, Неопределено, Элементы.Список.ТекущиеДанные.Ссылка);
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	НазначитьПоУмолчаниюСервер(Ссылка);
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьПереключательТипа(ДоступныйТип)

	ЭлементСписка = ДоступныеТипы.НайтиПоЗначению(ДоступныйТип);
	Если ЭлементСписка = Неопределено Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru='Ошибка открытия формы выбора объекта учета: не задано представление для типа ""%1""'"), ДоступныйТип);
	КонецЕсли;
	
	Элементы.ВыбранныйТип.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);

КонецПроцедуры

&НаСервере
Процедура ОпределитьТипПоЗначению(Значение)

	Тип = ТипЗнч(Значение);
	Если Значение = Неопределено Или Не ОбщегоНазначения.ЭтоСсылка(Тип) Тогда
		ИмяТипа = Элементы.ВыбранныйТип.СписокВыбора[0].Значение;
	Иначе
		ИмяТипа = Значение.Метаданные().Имя;
	КонецЕсли;
	
	Если ИмяТипа = "Долги" И Элементы.ВыбранныйТип.СписокВыбора.НайтиПоЗначению(ИмяТипа) = Неопределено Тогда
		
		ИмяДолга = "";
		Если Не ЗначениеЗаполнено(Значение) Или Значение.ИспользоватьДляУчетаВзятыхДолгов Тогда
			Если Элементы.ВыбранныйТип.СписокВыбора.НайтиПоЗначению("МыДолжны") <> Неопределено Тогда
				ИмяДолга = "МыДолжны";
			ИначеЕсли Элементы.ВыбранныйТип.СписокВыбора.НайтиПоЗначению("МыДолжныПроценты") Тогда
				ИмяДолга = "МыДолжныПроценты";
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяДолга = "" И Значение.ИспользоватьДляУчетаВыданныхДолгов Тогда
			Если Элементы.ВыбранныйТип.СписокВыбора.НайтиПоЗначению("НамДолжны") <> Неопределено Тогда
				ИмяДолга = "НамДолжны";
			ИначеЕсли Элементы.ВыбранныйТип.СписокВыбора.НайтиПоЗначению("НамДолжныПроценты") <> Неопределено Тогда 
				ИмяДолга = "НамДолжныПроценты";
			КонецЕсли;
		КонецЕсли;
		
		ИмяТипа = ИмяДолга;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяТипа) Тогда
		ВыбранныйТип = ИмяТипа;
	Иначе
		ВыбранныйТип = Элементы.ВыбранныйТип.СписокВыбора[0].Значение;
	КонецЕсли;
	 
	ВыбранныйТипПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура ВыбранныйТипПриИзмененииСервер()

	Если ВыбранныйТип = "КошелькиИСчета" Тогда
		ВывестиСписокКошельков();
		Элементы.Декорация2.Картинка = БиблиотекаКартинок.Кошелек48;
	ИначеЕсли ВыбранныйТип = "Контакты" Тогда
		ВывестиСписокКонтактов();
		Элементы.Декорация2.Картинка = БиблиотекаКартинок.Контакт48;
	ИначеЕсли ВыбранныйТип = "Долги" 
		Или ВыбранныйТип = "МыДолжны" Или ВыбранныйТип = "МыДолжныПроценты" 
		Или ВыбранныйТип = "НамДолжны" Или ВыбранныйТип = "НамДолжныПроценты" Тогда
		ВывестиСписокДолгов(ВыбранныйТип);
		Если ВыбранныйТип = "Долги" Или ВыбранныйТип = "МыДолжны"  Тогда
			Элементы.Декорация2.Картинка = БиблиотекаКартинок.ПолученныйКредит48;
		ИначеЕсли ВыбранныйТип = "МыДолжныПроценты"  Тогда
			Элементы.Декорация2.Картинка = БиблиотекаКартинок.ПроцентыПоПолученнымКредитам32;
		ИначеЕсли ВыбранныйТип = "НамДолжны"  Тогда
			Элементы.Декорация2.Картинка = БиблиотекаКартинок.ВыданныйЗаем48;
		ИначеЕсли ВыбранныйТип = "НамДолжныПроценты"  Тогда
			Элементы.Декорация2.Картинка = БиблиотекаКартинок.ПроцентыПоВыданнымЗаймам32;
		КонецЕсли;
	ИначеЕсли ВыбранныйТип = "Имущество" Тогда
		ВывестиСписокИмущества();
		Элементы.Декорация2.Картинка = БиблиотекаКартинок.Имущество48;
	ИначеЕсли ВыбранныйТип = "СтатьиДоходов" Тогда
		ВывестиСписокСтатейДоходов();
		Элементы.Декорация2.Картинка = БиблиотекаКартинок.ИконкаПлюс32х32;
	ИначеЕсли ВыбранныйТип = "СтатьиРасходов" Тогда
		ВывестиСписокСтатейРасходов();
		Элементы.Декорация2.Картинка = БиблиотекаКартинок.ИконкаМинус32х32;
	ИначеЕсли ВыбранныйТип = "ФинансовыеЦели" Тогда
		ВывестиСписокФинансовыхЦелей();
		Элементы.Декорация2.Картинка = БиблиотекаКартинок.Накопления48;
	КонецЕсли;

	ОбновитьВидиомстьКолонок();
	УстановитьОтборПоАктуальности();
	ПроверитьОбщиеОтборы();
	
	Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
	ТекущийЭлемент = Элементы.Список;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСписокКошельков()

	Список.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Статистика.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КошелькиОтбора
	|ИЗ
	|	РегистрСведений.СтатистикаСправочников КАК Статистика
	|ГДЕ
	|	Статистика.Ссылка Ссылка Справочник.КошелькиИСчета И
	|	(&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|
	|
	|ВЫБРАТЬ
	|	КошелькиИСчета.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КошелькиИСчета.ЭтоГруппа
	|				И КошелькиИСчета.Валюта = &ВалютаУчета
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА ЖурналОперацийОстатки.Валюта ЕСТЬ NULL
	|							ТОГДА 0
	|						ИНАЧЕ ВЫРАЗИТЬ(ЖурналОперацийОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютКошелька.Курс, 0) / ВЫБОР
	|									КОГДА ЕСТЬNULL(КурсыВалютКошелька.Кратность, 0) = 0
	|										ТОГДА 1
	|									ИНАЧЕ КурсыВалютКошелька.Кратность
	|								КОНЕЦ КАК ЧИСЛО(15, 2))
	|					КОНЕЦ)
	|		ИНАЧЕ СУММА(ВЫБОР
	|					КОГДА ЖурналОперацийОстатки.Валюта ЕСТЬ NULL
	|						ТОГДА 0
	|					ИНАЧЕ ЖурналОперацийОстатки.ВалютнаяСуммаОстаток
	|				КОНЕЦ)
	|	КОНЕЦ КАК Остаток,
	|	КошелькиИСчета.ПометкаУдаления КАК ПометкаУдаления,
	|	КошелькиИСчета.Родитель КАК Родитель,
	|	КошелькиИСчета.ЭтоГруппа КАК ЭтоГруппа,
	|	КошелькиИСчета.Наименование КАК Наименование,
	|	КошелькиИСчета.Активность КАК Активность,
	|	КошелькиИСчета.ТипСчета КАК Тип,
	|	КошелькиИСчета.Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(КошелькиИСчета.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
	|	КошелькиИСчета.ИспользоватьДляНакоплений КАК ИспользоватьДляНакоплений,
	|	КошелькиИСчета.КредитныйЛимит КАК КредитныйЛимит,
	|	Статистика.КоличествоНаличных КАК КоличествоНаличных,
	|	Статистика.КоличествоБезналичных КАК КоличествоБезналичных,
	|	Статистика.КоличествоКредиток КАК КоличествоКредиток,
	|	Статистика.КоличествоДляНакоплений КАК КоличествоДляНакоплений,
	|	Статистика.КоличествоСвободных КАК КоличествоСвободных,
	|	КошелькиИСчета.Предопределенный КАК Предопределенный
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	Остаток,
	|	ПометкаУдаления,
	|	Родитель.*,
	|	ЭтоГруппа,
	|	Наименование,
	|	Активность,
	|	Тип.*,
	|	Валюта.*,
	|	Комментарий,
	|	ИспользоватьДляНакоплений,
	|	КредитныйЛимит,
	|	Предопределенный}
	|ИЗ
	|	Справочник.КошелькиИСчета КАК КошелькиИСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатистикаСправочников КАК Статистика
	|		ПО (Статистика.Ссылка = КошелькиИСчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЖурналОпераций.Остатки(
	|				,
	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Деньги)),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.КошелькиИСчета),
	|								&ОтборПоАктивности = 0
	|					ИЛИ Субконто1 В
	|						(ВЫБРАТЬ
	|							КошелькиОтбора.Ссылка
	|						ИЗ
	|							КошелькиОтбора КАК КошелькиОтбора)
	|				) КАК ЖурналОперацийОстатки
	|		ПО (КошелькиИСчета.Ссылка = (ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.КошелькиИСчета))
	|				ИЛИ КошелькиИСчета.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.КошелькиИСчета).Родитель
	|				ИЛИ КошелькиИСчета.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.КошелькиИСчета).Родитель.Родитель
	|				ИЛИ КошелькиИСчета.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.КошелькиИСчета).Родитель.Родитель.Родитель
	|				ИЛИ КошелькиИСчета.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.КошелькиИСчета).Родитель.Родитель.Родитель.Родитель
	|				ИЛИ КошелькиИСчета.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.КошелькиИСчета).Родитель.Родитель.Родитель.Родитель.Родитель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыВалютКошелька
	|		ПО (ЕСТЬNULL(ЖурналОперацийОстатки.Валюта, КошелькиИСчета.Валюта) = КурсыВалютКошелька.Валюта)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КошелькиОтбора КАК КошелькиОтбора
	|		ПО (КошелькиОтбора.Ссылка = КошелькиИСчета.Ссылка)
	|ГДЕ
	|	(&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|{ГДЕ
	|	КошелькиИСчета.Ссылка.* КАК Кошелек,
	|	КошелькиИСчета.ПометкаУдаления,
	|	КошелькиИСчета.ТипСчета.* КАК Тип,
	|	КошелькиИСчета.Валюта.*,
	|	КошелькиИСчета.ЭтоГруппа КАК ЭтоГруппа,
	|	КошелькиИСчета.ИспользоватьДляНакоплений,
	|	КошелькиИСчета.КредитныйЛимит}
	|
	|СГРУППИРОВАТЬ ПО
	|	КошелькиИСчета.Ссылка,
	|	ВЫРАЗИТЬ(КошелькиИСчета.Комментарий КАК СТРОКА(1000)),
	|	КошелькиИСчета.ПометкаУдаления,
	|	КошелькиИСчета.Родитель,
	|	КошелькиИСчета.ЭтоГруппа,
	|	КошелькиИСчета.Наименование,
	|	КошелькиИСчета.Активность,
	|	КошелькиИСчета.ТипСчета,
	|	КошелькиИСчета.Валюта,
	|	КошелькиИСчета.ИспользоватьДляНакоплений,
	|	КошелькиИСчета.КредитныйЛимит,
	|	Статистика.КоличествоНаличных,
	|	Статистика.КоличествоБезналичных,
	|	Статистика.КоличествоКредиток,
	|	Статистика.КоличествоДляНакоплений,
	|	Статистика.КоличествоСвободных,
	|	КошелькиИСчета.Предопределенный";
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", ВалютаУчета);
	Список.ОсновнаяТаблица = "Справочник.КошелькиИСчета";
	
	ОбъектПоУмолчанию = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Истина);

КонецПроцедуры

&НаСервере
Процедура ВывестиСписокКонтактов()

	Список.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Статистика.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЭлементыОтбора
	|ИЗ
	|	РегистрСведений.СтатистикаСправочников КАК Статистика
	|ГДЕ
	|	Статистика.Ссылка ССЫЛКА Справочник.Контакты
	|	И (&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контакты.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Контакты.ЭтоГруппа
	|				И Контакты.Валюта = &ВалютаУчета
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА ЖурналОперацийОстатки.Валюта ЕСТЬ NULL
	|							ТОГДА 0
	|						ИНАЧЕ ВЫРАЗИТЬ(ЖурналОперацийОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютКошелька.Курс, 0) / ВЫБОР
	|									КОГДА ЕСТЬNULL(КурсыВалютКошелька.Кратность, 0) = 0
	|										ТОГДА 1
	|									ИНАЧЕ КурсыВалютКошелька.Кратность
	|								КОНЕЦ КАК ЧИСЛО(15, 2))
	|					КОНЕЦ)
	|		ИНАЧЕ СУММА(ВЫБОР
	|					КОГДА ЖурналОперацийОстатки.Валюта ЕСТЬ NULL
	|						ТОГДА 0
	|					ИНАЧЕ ЖурналОперацийОстатки.ВалютнаяСуммаОстаток
	|				КОНЕЦ)
	|	КОНЕЦ КАК Остаток,
	|	Контакты.ПометкаУдаления КАК ПометкаУдаления,
	|	Контакты.Родитель КАК Родитель,
	|	Контакты.ЭтоГруппа КАК ЭтоГруппа,
	|	Контакты.Наименование КАК Наименование,
	|	Контакты.Активность КАК Активность,
	|	Контакты.Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(Контакты.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
	|	Контакты.Предопределенный КАК Предопределенный
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	Остаток,
	|	ПометкаУдаления,
	|	Родитель.*,
	|	ЭтоГруппа,
	|	Наименование,
	|	Активность,
	|	Валюта.*,
	|	Комментарий,
	|	Предопределенный}
	|ИЗ
	|	Справочник.Контакты КАК Контакты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатистикаСправочников КАК Статистика
	|		ПО (Статистика.Ссылка = Контакты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЖурналОпераций.Остатки(
	|				,
	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Долги)),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Долги),
	|				&ОтборПоАктивности = 0
	|					ИЛИ Субконто1 В
	|						(ВЫБРАТЬ
	|							ЭлементыОтбора.Ссылка
	|						ИЗ
	|							ЭлементыОтбора КАК ЭлементыОтбора)) КАК ЖурналОперацийОстатки
	|		ПО (Контакты.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Долги).Контакт
	|				ИЛИ Контакты.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Долги).Контакт.Родитель
	|				ИЛИ Контакты.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Долги).Контакт.Родитель.Родитель
	|				ИЛИ Контакты.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Долги).Контакт.Родитель.Родитель.Родитель
	|				ИЛИ Контакты.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Долги).Контакт.Родитель.Родитель.Родитель.Родитель
	|				ИЛИ Контакты.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Долги).Контакт.Родитель.Родитель.Родитель.Родитель.Родитель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыВалютКошелька
	|		ПО (ЕСТЬNULL(ЖурналОперацийОстатки.Валюта, Контакты.Валюта) = КурсыВалютКошелька.Валюта)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЭлементыОтбора КАК ЭлементыОтбора
	|		ПО (ЭлементыОтбора.Ссылка = Контакты.Ссылка)
	|ГДЕ
	|	(&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|{ГДЕ
	|	Контакты.Ссылка.* КАК Контакт,
	|	Контакты.ЭтоГруппа КАК ЭтоГруппа,
	|	Контакты.ПометкаУдаления,
	|	Контакты.Валюта.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	Контакты.Ссылка,
	|	ВЫРАЗИТЬ(Контакты.Комментарий КАК СТРОКА(1000)),
	|	Контакты.ПометкаУдаления,
	|	Контакты.Родитель,
	|	Контакты.ЭтоГруппа,
	|	Контакты.Наименование,
	|	Контакты.Активность,
	|	Контакты.Валюта,
	|	Контакты.Предопределенный";

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", ВалютаУчета);
	Список.ОсновнаяТаблица = "Справочник.Контакты";

	ОбъектПоУмолчанию = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКонтакт();
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Истина);

КонецПроцедуры

&НаСервере
Процедура ВывестиСписокДолгов(ВидДолга)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СправочникДолги.Ссылка КАК Ссылка,
	|	СправочникДолги.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникДолги.Наименование КАК Наименование,
	|	СправочникДолги.Активность КАК Активность,
	|	СправочникДолги.Валюта КАК Валюта,
	|	СправочникДолги.Комментарий КАК Комментарий,
	|	СправочникДолги.Контакт КАК Контакт,
	|	СправочникДолги.Предопределенный КАК Предопределенный,
	|	ВЫБОР
	|		КОГДА СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|				И НЕ СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ВыданныйЗаем)
	|		КОГДА НЕ СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|				И СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ПолученныйКредит)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ВзаимныйРасчет)
	|	КОНЕЦ КАК Тип,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|						И НЕ СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|					ИЛИ СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|						И СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|						И жОстатки.ВалютнаяСуммаОстаток > 0
	|				ТОГДА жОстатки.ВалютнаяСуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ, 0) КАК ОстатокНамДолжны,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|						И СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|					ИЛИ СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|						И СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|						И жОстатки.ВалютнаяСуммаОстаток < 0
	|				ТОГДА -жОстатки.ВалютнаяСуммаОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ, 0) КАК ОстатокМыДолжны,
	|	ЕСТЬNULL(жОстатки.ВалютнаяСуммаОстаток, 0) КАК Остаток
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	ПометкаУдаления,
	|	Наименование,
	|	Активность,
	|	Валюта.*,
	|	Комментарий,
	|	Контакт.*,
	|	Предопределенный,
	|	Тип.*,
	|	ОстатокНамДолжны,
	|	ОстатокМыДолжны,
	|	Остаток}
	|ИЗ
	|	Справочник.Долги КАК СправочникДолги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЖурналОпераций.Остатки(, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Долги)), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Долги), ) КАК жОстатки
	|		ПО (СправочникДолги.Ссылка = (ВЫРАЗИТЬ(жОстатки.Субконто1 КАК Справочник.Долги)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыГрафикаПогашенияДолгов КАК ПараметрыГрафикаПогашенияДолгов
	|		ПО СправочникДолги.Ссылка = ПараметрыГрафикаПогашенияДолгов.Долг
	|ГДЕ
	|	(&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И СправочникДолги.Активность
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Не СправочникДолги.Активность)
	|	И
	|	(&ВидДолга = ""Долги""
	|			ИЛИ &ВидДолга = ""НамДолжны""
	|				И СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|			ИЛИ &ВидДолга = ""МыДолжны""
	|				И СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов)
	|
	|{ГДЕ
	|	СправочникДолги.Ссылка.*,
	|	СправочникДолги.ПометкаУдаления,
	|	СправочникДолги.Наименование,
	|	СправочникДолги.Валюта.*,
	|	СправочникДолги.Контакт.*,
	|	(ВЫБОР
	|			КОГДА СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|					И НЕ СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ВыданныйЗаем)
	|			КОГДА НЕ СправочникДолги.ИспользоватьДляУчетаВыданныхДолгов
	|					И СправочникДолги.ИспользоватьДляУчетаВзятыхДолгов
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ПолученныйКредит)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ВзаимныйРасчет)
	|		КОНЕЦ).* КАК Тип}";
	
	
	Если СтрНайти(ВидДолга, "Проценты") > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Долги)", "Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.ПроцентыПоДолгам)");
	КонецЕсли;
	
	Список.ТекстЗапроса = ТекстЗапроса;
	Список.ОсновнаяТаблица = "Справочник.Долги";
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", ВалютаУчета);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВидДолга", СтрЗаменить(ВидДолга, "Проценты", ""));

	ОбъектПоУмолчанию = Неопределено;
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Ложь);

КонецПроцедуры

&НаСервере
Процедура ВывестиСписокИмущества()

	Список.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Статистика.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИмуществоОтбора
	|ИЗ
	|	РегистрСведений.СтатистикаСправочников КАК Статистика
	|ГДЕ
	|	Статистика.Ссылка ССЫЛКА Справочник.Имущество
	|	И (&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникИмущество.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СправочникИмущество.ЭтоГруппа
	|			ТОГДА СУММА(ВЫБОР
	|						КОГДА ЖурналОперацийОстатки.Валюта ЕСТЬ NULL
	|							ТОГДА 0
	|						ИНАЧЕ ВЫРАЗИТЬ(ЖурналОперацийОстатки.ВалютнаяСуммаОстаток * ЕСТЬNULL(КурсыВалютКошелька.Курс, 0) / ВЫБОР
	|									КОГДА ЕСТЬNULL(КурсыВалютКошелька.Кратность, 0) = 0
	|										ТОГДА 1
	|									ИНАЧЕ КурсыВалютКошелька.Кратность
	|								КОНЕЦ КАК ЧИСЛО(15, 2))
	|					КОНЕЦ)
	|		ИНАЧЕ СУММА(ВЫБОР
	|					КОГДА ЖурналОперацийОстатки.Валюта ЕСТЬ NULL
	|						ТОГДА 0
	|					ИНАЧЕ ЖурналОперацийОстатки.ВалютнаяСуммаОстаток
	|				КОНЕЦ)
	|	КОНЕЦ КАК Остаток,
	|	СправочникИмущество.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникИмущество.Родитель КАК Родитель,
	|	СправочникИмущество.ЭтоГруппа КАК ЭтоГруппа,
	|	СправочникИмущество.Наименование КАК Наименование,
	|	СправочникИмущество.Активность КАК Активность,
	|	ВЫБОР
	|		КОГДА СправочникИмущество.ЭтоГруппа
	|			ТОГДА &ВалютаУчета
	|		ИНАЧЕ СправочникИмущество.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ВЫРАЗИТЬ(СправочникИмущество.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
	|	СправочникИмущество.Предопределенный КАК Предопределенный
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	Остаток,
	|	ПометкаУдаления,
	|	Родитель.*,
	|	ЭтоГруппа,
	|	Наименование,
	|	Активность,
	|	Валюта.*,
	|	Комментарий,
	|	Предопределенный}
	|ИЗ
	|	Справочник.Имущество КАК СправочникИмущество
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЖурналОпераций.Остатки(
	|				,
	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Имущество)),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Имущество),
	|				&ОтборПоАктивности = 0
	|					ИЛИ Субконто1 В
	|						(ВЫБРАТЬ
	|							ИмуществоОтбора.Ссылка
	|						ИЗ
	|							ИмуществоОтбора КАК ИмуществоОтбора)) КАК ЖурналОперацийОстатки
	|		ПО (СправочникИмущество.Ссылка = (ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Имущество))
	|				ИЛИ СправочникИмущество.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Имущество).Родитель
	|				ИЛИ СправочникИмущество.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Имущество).Родитель.Родитель
	|				ИЛИ СправочникИмущество.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Имущество).Родитель.Родитель.Родитель
	|				ИЛИ СправочникИмущество.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Имущество).Родитель.Родитель.Родитель.Родитель
	|				ИЛИ СправочникИмущество.Ссылка = ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто1 КАК Справочник.Имущество).Родитель.Родитель.Родитель.Родитель.Родитель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыВалютКошелька
	|		ПО (ЕСТЬNULL(ЖурналОперацийОстатки.Валюта, СправочникИмущество.Валюта) = КурсыВалютКошелька.Валюта)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИмуществоОтбора КАК ИмуществоОтбора
	|		ПО (ИмуществоОтбора.Ссылка = СправочникИмущество.Ссылка)
	|{ГДЕ
	|	СправочникИмущество.Ссылка.* КАК Кошелек,
	|	СправочникИмущество.Активность,
	|	СправочникИмущество.ЭтоГруппа КАК ЭтоГруппа,
	|	СправочникИмущество.ПометкаУдаления,
	|	СправочникИмущество.Валюта.*,
	|	СправочникИмущество.ЭтоГруппа}
	|
	|СГРУППИРОВАТЬ ПО
	|	СправочникИмущество.Ссылка,
	|	ВЫРАЗИТЬ(СправочникИмущество.Комментарий КАК СТРОКА(1000)),
	|	СправочникИмущество.ПометкаУдаления,
	|	СправочникИмущество.Родитель,
	|	СправочникИмущество.ЭтоГруппа,
	|	СправочникИмущество.Наименование,
	|	СправочникИмущество.Активность,
	|	СправочникИмущество.Предопределенный,
	|	ВЫБОР
	|		КОГДА СправочникИмущество.ЭтоГруппа
	|			ТОГДА &ВалютаУчета
	|		ИНАЧЕ СправочникИмущество.Валюта
	|	КОНЕЦ";
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", ВалютаУчета);
	Список.ОсновнаяТаблица = "Справочник.Имущество";

	ОбъектПоУмолчанию = ПользовательскиеНастройкиДеньгиСервер.ОсновноеИмущество();
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Истина);

КонецПроцедуры

&НаСервере
Процедура ВывестиСписокСтатейРасходов()

	Список.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Статистика.Ссылка КАК Ссылка,
	|	Статистика.КоличествоНеактуальных + Статистика.КоличествоАктуальных - 1 КАК КоличествоПодчиненных
	|ПОМЕСТИТЬ СтатьиОтбора
	|ИЗ
	|	РегистрСведений.СтатистикаСправочников КАК Статистика
	|ГДЕ
	|	Статистика.Ссылка ССЫЛКА Справочник.СтатьиРасходов
	|	И (&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|;
	|
	|/////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Статьи.*,
	|	ВЫБОР
	|		КОГДА Статистика.КоличествоПодчиненных <> 0
	|			ТОГДА 0
	|		ИНАЧЕ 3
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Статьи.ПометкаУдаления
	|			ТОГДА 1
	|		КОГДА Статьи.Предопределенный
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексКартинки,
	|	Статистика.КоличествоПодчиненных
	|
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	ПометкаУдаления,
	|	Родитель.*,
	|	Наименование,
	|	Активность,
	|	Комментарий,
	|	КоличественныйУчет,
	|	ИндексКартинки,
	|	КоличествоПодчиненных}
	|ИЗ
	|	Справочник.СтатьиРасходов КАК Статьи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатьиОтбора КАК Статистика
	|		ПО (Статистика.Ссылка = Статьи.Ссылка)
	|{ГДЕ
	|	Статьи.Ссылка.*,
	|	Статьи.Родитель.*,
	|	Статьи.Наименование,
	|	Статьи.Активность,
	|	Статьи.Комментарий,
	|	Статьи.КоличественныйУчет,
	|	Статистика.КоличествоПодчиненных,
	|	Статьи.ПометкаУдаления}";
	
	Список.ОсновнаяТаблица = "Справочник.СтатьиРасходов";

	ОбъектПоУмолчанию = Неопределено;
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Ложь);

КонецПроцедуры

&НаСервере
Процедура ВывестиСписокСтатейДоходов()

	Список.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Статистика.Ссылка КАК Ссылка,
	|	Статистика.КоличествоНеактуальных + Статистика.КоличествоАктуальных - 1 КАК КоличествоПодчиненных
	|ПОМЕСТИТЬ СтатьиОтбора
	|ИЗ
	|	РегистрСведений.СтатистикаСправочников КАК Статистика
	|ГДЕ
	|	Статистика.Ссылка ССЫЛКА Справочник.СтатьиДоходов
	|	И (&ОтборПоАктивности = 0
	|			ИЛИ &ОтборПоАктивности > 0
	|				И Статистика.КоличествоАктуальных > 0
	|			ИЛИ &ОтборПоАктивности < 0
	|				И Статистика.КоличествоНеактуальных > 0)
	|;
	|
	|/////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Статьи.*,
	|	ВЫБОР
	|		КОГДА Статистика.КоличествоПодчиненных <> 0
	|			ТОГДА 0
	|		ИНАЧЕ 3
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Статьи.ПометкаУдаления
	|			ТОГДА 1
	|		КОГДА Статьи.Предопределенный
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексКартинки,
	|	Статистика.КоличествоПодчиненных
	|
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	ПометкаУдаления,
	|	Родитель.*,
	|	Наименование,
	|	Активность,
	|	Комментарий,
	|	ИндексКартинки,
	|	КоличествоПодчиненных}
	|ИЗ
	|	Справочник.СтатьиДоходов КАК Статьи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатьиОтбора КАК Статистика
	|		ПО (Статистика.Ссылка = Статьи.Ссылка)
	|{ГДЕ
	|	Статьи.Ссылка.*,
	|	Статьи.Родитель.*,
	|	Статьи.Наименование,
	|	Статьи.Активность,
	|	Статьи.Комментарий,
	|	Статистика.КоличествоПодчиненных,
	|	Статьи.ПометкаУдаления}";
	
	Список.ОсновнаяТаблица = "Справочник.СтатьиДоходов";

	ОбъектПоУмолчанию = Неопределено;
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Ложь);

КонецПроцедуры

&НаСервере
Процедура ВывестиСписокФинансовыхЦелей()

	Список.ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ФинансовыеЦели.Ссылка КАК Ссылка,
	|	ФинансовыеЦели.ВерсияДанных КАК ВерсияДанных,
	|	ФинансовыеЦели.ПометкаУдаления КАК ПометкаУдаления,
	|	ФинансовыеЦели.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА ФинансовыеЦели.Предопределенный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ФинансовыеЦели.Активность
	|	КОНЕЦ КАК Активность,
	|	ФинансовыеЦели.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	|	ФинансовыеЦели.Комментарий КАК Комментарий,
	|	ФинансовыеЦели.Сумма КАК Сумма,
	|	ФинансовыеЦели.Валюта КАК Валюта,
	|	ФинансовыеЦели.Срок КАК Срок,
	|	ФинансовыеЦели.ШаблонНакопления КАК ШаблонНакопления,
	|	ФинансовыеЦели.Предопределенный КАК Предопределенный,
	|	ВЫРАЗИТЬ(ПодЗапрос.ОстатокНакоплений КАК ЧИСЛО(14, 2)) КАК ТекущиеНакопления,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПодЗапрос.ИспользованоНакоплений, 0) КАК ЧИСЛО(14, 2)) КАК ИспользованоНакоплений,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПодЗапрос.ИспользованоСвободныхСредств, 0) КАК ЧИСЛО(14, 2)) КАК ИспользованоСвободныхСредств,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ПодЗапрос.ИспользованоНакоплений, 0) КАК ЧИСЛО(14, 2))) + ЕСТЬNULL(ПодЗапрос.ИспользованоСвободныхСредств, 0) КАК ВсегоИспользовано,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ФинансовыеЦели.Сумма <> 0
	|				ТОГДА ФинансовыеЦели.Сумма - ЕСТЬNULL(ПодЗапрос.ИспользованоСвободныхСредств, 0) - ЕСТЬNULL(ПодЗапрос.ИспользованоНакоплений, 0) - ЕСТЬNULL(ПодЗапрос.ОстатокНакоплений, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(14, 2)) КАК ОсталосьНакопить
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	ВерсияДанных,
	|	ПометкаУдаления,
	|	Наименование,
	|	Активность,
	|	РеквизитДопУпорядочивания,
	|	Комментарий,
	|	Сумма,
	|	Валюта.*,
	|	Срок,
	|	ШаблонНакопления.*,
	|	Предопределенный,
	|	ТекущиеНакопления,
	|	ИспользованоНакоплений,
	|	ИспользованоСвободныхСредств,
	|	ВсегоИспользовано,
	|	ОсталосьНакопить}
	|ИЗ
	|	Справочник.ФинансовыеЦели КАК ФинансовыеЦели
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОстаткиНакоплений.Ссылка КАК Ссылка,
	|			ОстаткиНакоплений.ОстатокНакоплений КАК ОстатокНакоплений,
	|			СУММА(ЕСТЬNULL(РасходыНаЦели.ИспользованоНакопленийОборот, 0) * ЕСТЬNULL(КурсыРасходов.Курс, 0) * ЕСТЬNULL(ОстаткиНакоплений.КратностьЦели, 0) / (ЕСТЬNULL(ОстаткиНакоплений.КурсЦели, 1) * ЕСТЬNULL(КурсыРасходов.Кратность, 1))) КАК ИспользованоНакоплений,
	|			СУММА(ЕСТЬNULL(РасходыНаЦели.ИспользованоСвободныхСредствОборот, 0) * ЕСТЬNULL(КурсыРасходов.Курс, 0) * ЕСТЬNULL(ОстаткиНакоплений.КратностьЦели, 0) / (ЕСТЬNULL(ОстаткиНакоплений.КурсЦели, 1) * ЕСТЬNULL(КурсыРасходов.Кратность, 1))) КАК ИспользованоСвободныхСредств
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ФинансовыеЦели.Ссылка КАК Ссылка,
	|				СУММА(ЕСТЬNULL(жОстатки.ВалютнаяСуммаОстаток, 0) * ЕСТЬNULL(КурсыКошельков.Курс, 0) * ЕСТЬNULL(КурсыЦелей.Кратность, 0) / (ЕСТЬNULL(КурсыЦелей.Курс, 1) * ЕСТЬNULL(КурсыКошельков.Кратность, 1))) КАК ОстатокНакоплений,
	|				КурсыЦелей.Курс КАК КурсЦели,
	|				КурсыЦелей.Кратность КАК КратностьЦели
	|			ИЗ
	|				Справочник.ФинансовыеЦели КАК ФинансовыеЦели
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЖурналОпераций.Остатки(
	|							,
	|							Счет = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления),
	|							,
	|							&Кошелек = """"
	|								ИЛИ Субконто1 В ИЕРАРХИИ (&Кошелек)) КАК жОстатки
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыКошельков
	|						ПО жОстатки.Валюта = КурсыКошельков.Валюта
	|					ПО ФинансовыеЦели.Ссылка = жОстатки.Субконто2
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыЦелей
	|					ПО ФинансовыеЦели.Валюта = КурсыЦелей.Валюта
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ФинансовыеЦели.Ссылка,
	|				КурсыЦелей.Курс,
	|				КурсыЦелей.Кратность) КАК ОстаткиНакоплений
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИспользованиеСуммФинансовыхЦелей.Обороты(, , Период, ) КАК РасходыНаЦели
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыРасходов
	|					ПО РасходыНаЦели.Валюта = КурсыРасходов.Валюта
	|				ПО ОстаткиНакоплений.Ссылка = РасходыНаЦели.ФинансоваяЦель
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОстаткиНакоплений.ОстатокНакоплений,
	|			ОстаткиНакоплений.Ссылка) КАК ПодЗапрос
	|		ПО ФинансовыеЦели.Ссылка = ПодЗапрос.Ссылка
	|{ГДЕ
	|	ФинансовыеЦели.Ссылка.*,
	|	ФинансовыеЦели.ПометкаУдаления,
	|	ФинансовыеЦели.Наименование,
	|	ФинансовыеЦели.Активность,
	|	ФинансовыеЦели.РеквизитДопУпорядочивания,
	|	ФинансовыеЦели.Комментарий,
	|	ФинансовыеЦели.Валюта.*,
	|	ФинансовыеЦели.Срок}";

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ВалютаУчета", ВалютаУчета);
	Если Отборы.Свойство("Кошелек") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Кошелек", Отборы.Кошелек);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Кошелек", "");
	КонецЕсли;
	
	Список.ОсновнаяТаблица = "Справочник.ФинансовыеЦели";

	ОбъектПоУмолчанию = Неопределено;
	ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Ложь);

КонецПроцедуры


&НаСервере
Процедура ИзменитьДоступностьКомандыОбъектаПоУмолчанию(Доступность)
	
	Элементы.СписокНазначитьПоУмолчанию.Доступность = Доступность;
	Элементы.СписокКонтекстноеМенюНазначитьПоУмолчанию.Доступность = Доступность;
	
КонецПроцедуры
 
&НаСервере
Процедура УстановитьОтборПоАктуальности()

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ОтборПоАктивности", Актуальность);

	Если Элементы.Активность.Видимость <> (Актуальность = 0) Тогда
		Элементы.Активность.Видимость = Актуальность = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьОбщиеОтборы()
	
	Если Отборы.Свойство("Валюта") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Валюта", Отборы.Валюта);
	КонецЕсли;
	Если Отборы.Свойство("ЭтоГруппа") И СписокСИерархиейГрупп() Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ЭтоГруппа", Отборы.ЭтоГруппа);
		Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы;
	Иначе
		Элементы.Список.ВыборГруппИЭлементов = ?(РазрешитьВыборГрупп, 
				ИспользованиеГруппИЭлементов.ГруппыИЭлементы, 
				ИспользованиеГруппИЭлементов.Элементы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СписокСИерархиейГрупп()
	Возврат ВыбранныйТип = "КошелькиИСчета" 
		Или ВыбранныйТип = "Имущество"
		Или ВыбранныйТип = "Контакты";
КонецФункции 

&НаСервере
Процедура ОбновитьВидиомстьКолонок()

	ИзменитьВидимостьРеквизита(ЭтотОбъект, "Тип", СтрНайти("КошелькиИСчета,Долги,НамДолжны,НамДолжныПроценты,МыДолжны,МыДолжныПроценты", ВыбранныйТип) > 0);
	ИзменитьВидимостьРеквизита(ЭтотОбъект, "ИспользоватьДляНакоплений", СтрНайти("КошелькиИСчета", ВыбранныйТип) > 0);
	ИзменитьВидимостьРеквизита(ЭтотОбъект, "Контакт", СтрНайти("Долги,НамДолжны,НамДолжныПроценты,МыДолжны,МыДолжныПроценты", ВыбранныйТип) > 0);
	ЕстьОстаток = СтрНайти("КошелькиИСчета,Долги,НамДолжны,НамДолжныПроценты,МыДолжны,МыДолжныПроценты,Имущество", ВыбранныйТип) > 0;
	ИзменитьВидимостьРеквизита(ЭтотОбъект, "Остаток", ЕстьОстаток);
	ИзменитьВидимостьРеквизита(ЭтотОбъект, "Валюта1", ЕстьОстаток);
	
	Если СтрНайти("СтатьиДоходов,СтатьиРасходов", ВыбранныйТип) > 0 Тогда
		Элементы.Список.КартинкаСтрок = БиблиотекаКартинок.ПиктограммыСправочникаСИерархиейЭлементов;
		Элементы.Список.ПутьКДаннымКартинкиСтроки = "Список.ИндексКартинки";
	Иначе
		Элементы.Список.КартинкаСтрок = Новый Картинка;
		Элементы.Список.ПутьКДаннымКартинкиСтроки = "Список.СтандартнаяКартинка";
	КонецЕсли;
	 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьВидимостьРеквизита(Форма, ИмяЭлемента, ЗначениеВидимости)

	ЭлементФормы = Форма.Элементы.Найти(ИмяЭлемента);
	Если ЭлементФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭлементФормы.Видимость <> ЗначениеВидимости Тогда
		ЭлементФормы.Видимость = ЗначениеВидимости;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	Иерархический = СтрНайти("КошелькиИСчета,Контакты,СтатьиРасходов,СтатьиДоходов,Имущество", ВыбранныйТип) > 0;
	Если СтрНайти("СтатьиРасходов,СтатьиДоходов", ВыбранныйТип) > 0 Тогда
		СуммыИВалюты = Новый Структура;
	Иначе
		СуммыИВалюты = Новый Структура("Остаток", Новый Массив);
		СуммыИВалюты.Остаток.Добавить("Остаток");
		СуммыИВалюты.Остаток.Добавить("Валюта1");
	КонецЕсли;
	 
	РаботаСФормамиСправочников.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "Список", Иерархический, "", СуммыИВалюты, Ложь);

КонецПроцедуры

&НаСервере
Процедура НазначитьПоУмолчаниюСервер(Ссылка)
	
	ТипСсылки = ТипЗнч(Ссылка);
	Если ТипСсылки = Тип("СправочникСсылка.КошелькиИСчета") Тогда
		ПользовательскиеНастройкиДеньгиСервер.ЗаписатьОсновнойКошелек(Ссылка);
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Контакты") Тогда
		ПользовательскиеНастройкиДеньгиСервер.ЗаписатьОсновнойКонтакт(Ссылка);
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Имущество") Тогда
		ПользовательскиеНастройкиДеньгиСервер.ЗаписатьОсновноеИмущество(Ссылка);
	КонецЕсли;
	
	ОбъектПоУмолчанию = Ссылка;
	
КонецПроцедуры
 

#КонецОбласти
