////////////////////////////////////////////////////////////////////////////////
// Общая форма РедакторРасписания: 
//  
//  Позволяет установить шаблон повторяемости операций или 
// задать конкретные даты повторения
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если РежимПовторения <> 5 Тогда
		
		Если НЕ ЗначениеЗаполнено(ПараметрыРасписания.ДатаНачалаРасписания) Тогда
			Отказ = Истина;
			ТекстОшибки = ДеньгиКлиентСервер.ПолучитьТекстСообщения(, , НСтр("ru = 'Начать с'"));
			Сообщение = Новый СообщениеПользователю;
			Сообщение.ИдентификаторНазначения = УникальныйИдентификатор;
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Поле = "ПараметрыРасписанияДатаНачалаРасписания";
			//Сообщение.УстановитьДанные();
			Сообщение.Сообщить(); 
		КонецЕсли; 
		
	КонецЕсли;
	
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимПовторенияПриИзменении(Элемент)
	
	Если РежимПовторения = 1 Тогда //Ежедневно
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
	ИначеЕсли РежимПовторения = 2 Тогда //Еженедельно
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		НомерДняНедели = ДеньНедели(ПараметрыРасписания.ДатаНачалаРасписания);
		Для Счетчик = 1 По 7 Цикл
			ЭтаФорма["ДеньНедели" + Счетчик] = (Счетчик = НомерДняНедели);
		КонецЦикла;
		
	ИначеЕсли РежимПовторения = 3 И РежимПовторенияВПериоде = 0 Тогда //ЕжемесячноПоЧислам
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = Формат(День(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		
	ИначеЕсли РежимПовторения = 3 И РежимПовторенияВПериоде = 1 Тогда //ЕжемесячноПоДнямНедели
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		НомерДняНедели = ДеньНедели(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ШаблонДнейНедели     = Формат(НомерДняНедели, "ЧДЦ=0; ЧГ=") + ",";
		День = День(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ПорядокДнейНедели    = Мин(4, Цел(День / 7) + ?(День % 7 > 0, 1, 0));
		
	ИначеЕсли РежимПовторения = 4 И РежимПовторенияВПериоде = 0 Тогда //ЕжегодноПоЧислам
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ШаблонНомеровМесяцев = Формат(Месяц(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		ПараметрыРасписания.ШаблонЧиселМесяца    = Формат(День(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		
	ИначеЕсли РежимПовторения = 4 И РежимПовторенияВПериоде = 1 Тогда // ЕжегодноПоДнямНедели
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ШаблонНомеровМесяцев = Формат(Месяц(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		День = День(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ПорядокДнейНедели    = Мин(4, Цел(День / 7) + ?(День % 7 > 0, 1, 0));
		НомерДняНедели = ДеньНедели(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ШаблонДнейНедели     = Формат(НомерДняНедели, "ЧДЦ=0; ЧГ=") + ",";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		
	ИначеЕсли РежимПовторения = 5 Тогда
		ПараметрыРасписания.ПорядокПериодов      = 0;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		Если ПроизвольныеДатыРасписания.Количество() = 0 Тогда
			СтрокаДаты = ПроизвольныеДатыРасписания.Добавить();
			СтрокаДаты.ПлановаяДата = ПараметрыРасписания.ДатаНачалаРасписания;
		КонецЕсли; 
		ПараметрыРасписания.ДатаОкончанияРасписания = Неопределено;
		ПараметрыРасписания.КоличествоПовторов      = 0;
		ПроверитьокончаниеРасписания();
		
	Иначе
		ПараметрыРасписания.ПорядокПериодов      = 0;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		
	КонецЕсли; 
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПовторенияВПериодеПриИзменении(Элемент)
	
	Если РежимПовторения = 3 И РежимПовторенияВПериоде = 0 Тогда //ЕжемесячноПоЧислам
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = Формат(День(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		
	ИначеЕсли РежимПовторения = 3 И РежимПовторенияВПериоде = 1 Тогда //ЕжемесячноПоДнямНедели
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		НомерДняНедели = ДеньНедели(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ШаблонДнейНедели     = Формат(НомерДняНедели, "ЧДЦ=0; ЧГ=") + ",";
		День = День(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ПорядокДнейНедели    = Мин(4, Цел(День / 7) + ?(День % 7 > 0, 1, 0));
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПовторенияВПериоде1ПриИзменении(Элемент)
	
	Если РежимПовторения = 4 И РежимПовторенияВПериоде = 0 Тогда //ЕжегодноПоЧислам
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ШаблонНомеровМесяцев = Формат(Месяц(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		ПараметрыРасписания.ШаблонЧиселМесяца    = Формат(День(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		
	ИначеЕсли РежимПовторения = 4 И РежимПовторенияВПериоде = 1 Тогда // ЕжегодноПоДнямНедели
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ШаблонНомеровМесяцев = Формат(Месяц(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
		День = День(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ПорядокДнейНедели    = Мин(4, Цел(День / 7) + ?(День % 7 > 0, 1, 0));
		НомерДняНедели = ДеньНедели(ПараметрыРасписания.ДатаНачалаРасписания);
		ПараметрыРасписания.ШаблонДнейНедели     = Формат(НомерДняНедели, "ЧДЦ=0; ЧГ=") + ",";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыРасписанияДатаНачалаРасписанияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ПараметрыРасписания.ДатаНачалаРасписания) Тогда
		ПараметрыРасписания.ДатаНачалаРасписания = ТекущаяДатаКлиентСервер();
	КонецЕсли;
	Если ПределПовторения = 2 И ПараметрыРасписания.ДатаОкончанияРасписания < ПараметрыРасписания.ДатаНачалаРасписания Тогда
		ПараметрыРасписания.ДатаОкончанияРасписания = ПараметрыРасписания.ДатаНачалаРасписания;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПределПовторенияПриИзменении(Элемент)
	
	Если ПределПовторения = 0 Тогда
		ПараметрыРасписания.КоличествоПовторов      = 0;
		ПараметрыРасписания.ДатаОкончанияРасписания = Неопределено;
	ИначеЕсли ПределПовторения = 1 Тогда
		ПараметрыРасписания.КоличествоПовторов      = ?(ЗначениеЗаполнено(ПараметрыРасписания.КоличествоПовторов), ПараметрыРасписания.КоличествоПовторов, 10);
		ПараметрыРасписания.ДатаОкончанияРасписания = Неопределено;
	ИначеЕсли ПределПовторения = 2 Тогда
		ПараметрыРасписания.КоличествоПовторов      = 0;
		ПараметрыРасписания.ДатаОкончанияРасписания = ?(ЗначениеЗаполнено(ПараметрыРасписания.ДатаОкончанияРасписания), ПараметрыРасписания.ДатаОкончанияРасписания, ДобавитьМесяц(ПараметрыРасписания.ДатаНачалаРасписания, 12));
	КонецЕсли; 
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыРасписанияШаблонНомеровМесяцевПриИзменении(Элемент)
	
	ПроверитьДатуГода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыРасписанияШаблонЧиселМесяца1ПриИзменении(Элемент)
	
	ПроверитьДатуГода();
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПроизвольныеДатыРасписанияПриИзменении(Элемент)
	ПроверитьокончаниеРасписания();
КонецПроцедуры
 

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОк(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	Если РежимПовторения = 5 И ВДатахЕстьОшибки() Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьокончаниеРасписания();
	СобратьРезультат();
	ПлановыеОперацииКлиент.СохранитьИзмененияРедактораРасписания(ЭтаФорма, ВладелецФормы);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьПовторы(Команда)
	
	Если ЗначениеЗаполнено(ДатаПоследнегоВыполненияПлана) Тогда
		ТекстВопроса = НСтр("ru = 'После удаления расписания все операции, созданные по нему, останутся в базе, но не будут отображаться в календаре.
			|Удалить расписание?'"); 
		
		ОбработчикОтвета = Новый ОписаниеОповещения("ПрекратитьПовторыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Возврат;
	КонецЕсли; 
	
	ОчиститьИнформациюОПовторах();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Обрабатываем параметры, полученные из формы владельца расписания:
	Параметры.Свойство("ИДФормыВладельца", ИДФормыВладельца);
	Параметры.Свойство("АдресПроизвольныхДатРасписания", АдресПроизвольныхДатРасписания);
	Если Параметры.Свойство("НазваниеШаблона") Тогда
		Заголовок = НСтр("ru = 'Расписание шаблона [%1]'");
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Заголовок, Параметры.НазваниеШаблона);
	КонецЕсли; 
	Если Параметры.Свойство("ПараметрыГрафика") Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыГрафика, Параметры.ПараметрыГрафика);
	КонецЕсли; 
	Если Параметры.Свойство("ПараметрыРасписания") Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыРасписания, Параметры.ПараметрыРасписания);
	КонецЕсли; 
	Если ЗначениеЗаполнено(АдресПроизвольныхДатРасписания) Тогда
		ПроизвольныеДатыРасписания.Загрузить(ПолучитьИзВременногоХранилища(АдресПроизвольныхДатРасписания));
	Иначе
		Если ПараметрыРасписания.Периодичность = Перечисления.СпособыПовторовСобытий.ВУказанныеДаты Тогда
			ТаблицаДат = ПлановыеОперации.ПолучитьТаблицуПроизвольныхДатДляРедактирования(Параметры.ВладелецРасписания,
					ПараметрыРасписания.ДатаНачалаРасписания, ПараметрыРасписания.ДатаОкончанияРасписания);
			ПроизвольныеДатыРасписания.Загрузить(ТаблицаДат);
		КонецЕсли; 
	КонецЕсли; 
	
	ДатаПоследнегоВыполненияПлана = ПлановыеОперации.ПолучитьДатуПоследнейВыполненнойОперации(Параметры.ВладелецРасписания);
	
	// Настраиваем элементы формы:
	Элементы.ПараметрыРасписанияШаблонЧиселМесяца.СписокВыбора.Очистить();
	Элементы.ПараметрыРасписанияШаблонЧиселМесяца1.СписокВыбора.Очистить();
	Для Счетчик = 1 по 31  Цикл
		Элементы.ПараметрыРасписанияШаблонЧиселМесяца.СписокВыбора.Добавить("" + Счетчик + ",", Счетчик);
		Элементы.ПараметрыРасписанияШаблонЧиселМесяца1.СписокВыбора.Добавить("" + Счетчик + ",", Счетчик);
	КонецЦикла;
	Элементы.ПараметрыРасписанияШаблонНомеровМесяцев.СписокВыбора.Очистить();
	Для Счетчик = 1 по 12  Цикл
		МесяцДляВыбора = Дата(2000,Счетчик,1);
		Элементы.ПараметрыРасписанияШаблонНомеровМесяцев.СписокВыбора.Добавить("" + Счетчик + ",", Формат(МесяцДляВыбора, "ДФ=ММММ") );
	КонецЦикла;
	
	ЗначенияДляСравнения = Новый Структура;
	ЗначенияДляСравнения.Вставить("СпособыПовторовСобытий", Новый Структура);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("НеИспользовать", Перечисления.СпособыПовторовСобытий.НеИспользовать);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("ВУказанныеДаты", Перечисления.СпособыПовторовСобытий.ВУказанныеДаты);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("ЕжегодноПоДнямНедели", Перечисления.СпособыПовторовСобытий.ЕжегодноПоДнямНедели);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("ЕжегодноПоЧислам", Перечисления.СпособыПовторовСобытий.ЕжегодноПоЧислам);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("Ежедневно", Перечисления.СпособыПовторовСобытий.Ежедневно);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("ЕжемесячноПоДнямНедели", Перечисления.СпособыПовторовСобытий.ЕжемесячноПоДнямНедели);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("ЕжемесячноПоЧислам", Перечисления.СпособыПовторовСобытий.ЕжемесячноПоЧислам);
	ЗначенияДляСравнения.СпособыПовторовСобытий.Вставить("Еженедельно", Перечисления.СпособыПовторовСобытий.Еженедельно);
	
	Если ЗначениеЗаполнено(ПараметрыРасписания.КоличествоПовторов) Тогда
		ТипКонечнойДаты = 1;
	ИначеЕсли ЗначениеЗаполнено(ПараметрыРасписания.ДатаОкончанияРасписания) Тогда
		ТипКонечнойДаты = 2;
	Иначе
		ТипКонечнойДаты = 0;
	КонецЕсли;
	
	Элементы.ПрекратитьПовторы.Доступность = ПараметрыРасписания.Периодичность <> ЗначенияДляСравнения.СпособыПовторовСобытий.НеИспользовать;
	
	Если Не ЗначениеЗаполнено(ПараметрыРасписания.Периодичность) Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжемесячноПоЧислам;
		ПараметрыРасписания.ПорядокПериодов      = ?(ПараметрыРасписания.ПорядокПериодов = 0, 1, ПараметрыРасписания.ПорядокПериодов);
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = Формат(День(ПараметрыРасписания.ДатаНачалаРасписания), "ЧДЦ=0; ЧГ=") + ",";
	КонецЕсли;
	
	Если ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.Ежедневно Тогда
		РежимПовторения = 1;
		Датаначала =ТекущаяДатаКлиентСервер();
	ИначеЕсли ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.Еженедельно Тогда
		РежимПовторения = 2;
		Датаначала =НачалоНедели(ТекущаяДатаКлиентСервер());
	ИначеЕсли ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжемесячноПоЧислам Тогда
		РежимПовторения = 3;
		РежимПовторенияВПериоде = 0;
		Датаначала =НачалоМесяца(ТекущаяДатаКлиентСервер());
	ИначеЕсли ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжемесячноПоДнямНедели Тогда
		РежимПовторения = 3;
		РежимПовторенияВПериоде = 1;
		Датаначала =НачалоМесяца(ТекущаяДатаКлиентСервер());
	ИначеЕсли ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжегодноПоЧислам Тогда
		РежимПовторения = 4;
		РежимПовторенияВПериоде = 0;
		Датаначала =НачалоГода(ТекущаяДатаКлиентСервер());
	ИначеЕсли ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжегодноПоДнямНедели Тогда
		РежимПовторения = 4;
		РежимПовторенияВПериоде = 1;
		Датаначала =НачалоГода(ТекущаяДатаКлиентСервер());
	ИначеЕсли ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ВУказанныеДаты Тогда
		РежимПовторения = 5;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыРасписания.ДатаНачалаРасписания) Тогда
		ПараметрыРасписания.ДатаНачалаРасписания = Датаначала;
	КонецЕсли;
	
	Для Счетчик = 1 По 7 Цикл
		ЭтаФорма["ДеньНедели" + Счетчик] = Найти(ПараметрыРасписания.ШаблонДнейНедели, "" + Счетчик + ",") > 0;
	КонецЦикла;
	
	Если ПараметрыРасписания.КоличествоПовторов > 0 Тогда
		ПределПовторения = 1;
	ИначеЕсли ЗначениеЗаполнено(ПараметрыРасписания.ДатаОкончанияРасписания) Тогда
		ПределПовторения = 2;
	КонецЕсли; 
	
	// Настройка внешнего вида
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	Если Форма.РежимПовторения = 0 Тогда
		Элементы.ГруппаСтраницыНастройкиПовторения.ТекущаяСтраница = Элементы.ГруппаСтраницаНеИспользовать;
	ИначеЕсли Форма.РежимПовторения = 1 Тогда
		Элементы.ГруппаСтраницыНастройкиПовторения.ТекущаяСтраница = Элементы.ГруппаСтраницаЕжедневно;
	ИначеЕсли Форма.РежимПовторения = 2 Тогда
		Элементы.ГруппаСтраницыНастройкиПовторения.ТекущаяСтраница = Элементы.ГруппаСтраницаЕженедельно;
	ИначеЕсли Форма.РежимПовторения = 3 Тогда
		Элементы.ГруппаСтраницыНастройкиПовторения.ТекущаяСтраница = Элементы.ГруппаСтраницаЕжемесячно;
	ИначеЕсли Форма.РежимПовторения = 4 Тогда
		Элементы.ГруппаСтраницыНастройкиПовторения.ТекущаяСтраница = Элементы.ГруппаСтраницаЕжегодно;
	ИначеЕсли Форма.РежимПовторения = 5 Тогда
		Элементы.ГруппаСтраницыНастройкиПовторения.ТекущаяСтраница = Элементы.ГруппаСтраницаПроизвольныеДаты;
	КонецЕсли;
	
	Элементы.ПределПовторения.Доступность = Форма.РежимПовторения > 0 И Форма.РежимПовторения < 5;
	Элементы.ПрекратитьПовторы.Доступность = Форма.РежимПовторения > 0;
	Элементы.ПараметрыРасписанияКоличествоПовторов.Доступность      = Элементы.ПределПовторения.Доступность И Форма.ПределПовторения = 1;
	Элементы.ПараметрыРасписанияДатаОкончанияРасписания.Доступность = Элементы.ПределПовторения.Доступность И Форма.ПределПовторения = 2;

	Элементы.ПараметрыРасписанияШаблонЧиселМесяца.Доступность = Форма.РежимПовторения = 3 И Форма.РежимПовторенияВПериоде = 0;
	Элементы.Декорация5.Доступность                           = Форма.РежимПовторения = 3 И Форма.РежимПовторенияВПериоде = 0;
	Элементы.ЗаписьРегистраПорядокДнейНедели.Доступность      = Форма.РежимПовторения = 3 И Форма.РежимПовторенияВПериоде = 1;
	Элементы.ЗаписьРегистраШаблонДнейНедели.Доступность       = Форма.РежимПовторения = 3 И Форма.РежимПовторенияВПериоде = 1;
	
	Элементы.ПараметрыРасписанияШаблонЧиселМесяца1.Доступность = Форма.РежимПовторения = 4 И Форма.РежимПовторенияВПериоде = 0;
	Элементы.Декорация7.Доступность                            = Форма.РежимПовторения = 4 И Форма.РежимПовторенияВПериоде = 0;
	Элементы.ЗаписьРегистраПорядокДнейНедели1.Доступность      = Форма.РежимПовторения = 4 И Форма.РежимПовторенияВПериоде = 1;
	Элементы.ЗаписьРегистраШаблонДнейНедели1.Доступность       = Форма.РежимПовторения = 4 И Форма.РежимПовторенияВПериоде = 1;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилищеТаблицуПроизвольныхДат()

	АдресПроизвольныхДатРасписания = ПоместитьВоВременноеХранилище(ПроизвольныеДатыРасписания.Выгрузить(), ИДФормыВладельца);

КонецПроцедуры
 
&НаКлиенте
Процедура СобратьРезультат()

	Если РежимПовторения = 1 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.Ежедневно;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		
	ИначеЕсли РежимПовторения = 2 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.Еженедельно;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		Для Счетчик = 1 По 7 Цикл
			ЗначениеДня = ЭтаФорма["ДеньНедели" + Счетчик];
			Если ЗначениеДня Тогда
				ПараметрыРасписания.ШаблонДнейНедели = ПараметрыРасписания.ШаблонДнейНедели + Счетчик + ",";
			КонецЕсли; 
		КонецЦикла;
		
	ИначеЕсли РежимПовторения = 3 И РежимПовторенияВПериоде = 0 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжемесячноПоЧислам;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		
	ИначеЕсли РежимПовторения = 3 И РежимПовторенияВПериоде = 1 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжемесячноПоДнямНедели;
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		
	ИначеЕсли РежимПовторения = 4 И РежимПовторенияВПериоде = 0 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжегодноПоЧислам;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		
	ИначеЕсли РежимПовторения = 4 И РежимПовторенияВПериоде = 1 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ЕжегодноПоДнямНедели;
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		
	ИначеЕсли РежимПовторения = 5 Тогда
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.ВУказанныеДаты;
		ПараметрыРасписания.ПорядокПериодов      = 0;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		ПоместитьВХранилищеТаблицуПроизвольныхДат();
		
	Иначе
		ПараметрыРасписания.Периодичность = ЗначенияДляСравнения.СпособыПовторовСобытий.НеИспользовать;
		ПараметрыРасписания.ПорядокПериодов      = 0;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		
	КонецЕсли; 
	
	ПараметрыРасписания.ОписаниеРасписания = ПлановыеОперацииКлиентСервер.ПредставлениеРасписания(ПараметрыРасписания, ПроизвольныеДатыРасписания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДатуГода()

	Если РежимПовторенияВПериоде = 0 Тогда
		Если ПараметрыРасписания.ШаблонНомеровМесяцев = "2," И СтрНайти(",30,31,", "," + ПараметрыРасписания.ШаблонЧиселМесяца) > 0 Тогда
			ПараметрыРасписания.ШаблонЧиселМесяца = "29,";
		ИначеЕсли СтрНайти(",4,6,9,11,", "," + ПараметрыРасписания.ШаблонНомеровМесяцев) > 0 И ПараметрыРасписания.ШаблонЧиселМесяца = "31," Тогда
			ПараметрыРасписания.ШаблонЧиселМесяца = "30,";
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьокончаниеРасписания()

	Если РежимПовторения = 5 Тогда
		
		МаксДата = '00010101';
		ПределПовторения = 2;
		Для Каждого СтрокаДаты Из ПроизвольныеДатыРасписания Цикл
			Если НЕ СтрокаДаты.Пропустить И СтрокаДаты.ПлановаяДата > МаксДата Тогда
				МаксДата = СтрокаДаты.ПлановаяДата;
			КонецЕсли; 
		КонецЦикла; 
		
		ПараметрыРасписания.ДатаОкончанияРасписания = ?(ЗначениеЗаполнено(МаксДата), МаксДата, ТекущаяДатаКлиентСервер());
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИнформациюОПовторах()

	ПроизвольныеДатыРасписания.Очистить();
	РежимПовторения = 0;
	СобратьРезультат();
	ПлановыеОперацииКлиент.СохранитьИзмененияРедактораРасписания(ЭтаФорма, ВладелецФормы);
	Закрыть();

КонецПроцедуры

&НаКлиенте
Функция ВДатахЕстьОшибки()

	ЕстьОшибки   = Ложь;
	МассивДат    = Новый Массив;
	СписокОшибок = Неопределено;
	
	ПроизвольныеДатыРасписания.Сортировать("ПлановаяДата");
	
	Для Каждого СтрокаДаты Из ПроизвольныеДатыРасписания Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаДаты.ПлановаяДата) Тогда
			ТекстСообщения = НСтр("ru = 'Удалите строки с пустыми датами.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "ПроизвольныеДатыРасписания.ПлановаяДата", ТекстСообщения, "");
			ЕстьОшибки = Истина;
			Продолжить;
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(СтрокаДаты.АктуальнаяДата) Тогда
			СтрокаДаты.АктуальнаяДата = СтрокаДаты.ПлановаяДата;
		КонецЕсли; 
		
		ДатаДня = НачалоДня(СтрокаДаты.ПлановаяДата);
		Если МассивДат.Найти(ДатаДня) = Неопределено Тогда
			МассивДат.Добавить(ДатаДня);
		Иначе
			ТекстСообщения = НСтр("ru = 'Удалите из расписания повторяющиеся даты: %1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Формат(ДатаДня, "Л=ru_RU; ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(СписокОшибок, "ПроизвольныеДатыРасписания.ПлановаяДата", ТекстСообщения, "");
			ЕстьОшибки = Истина;
		КонецЕсли; 
		
	КонецЦикла; 

	Если ЕстьОшибки И СписокОшибок <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(СписокОшибок);
	КонецЕсли;
	
	Возврат ЕстьОшибки;

КонецФункции
 


////////////////////////////////////////////////////////////////////////////////
// Завершения процедур, использующих интерактивное взаимодействие с пользователем

&НаКлиенте
Процедура ПрекратитьПовторыЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОчиститьИнформациюОПовторах();
	КонецЕсли; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяДатаКлиентСервер()
	#Если Сервер Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли 
КонецФункции 

#КонецОбласти



