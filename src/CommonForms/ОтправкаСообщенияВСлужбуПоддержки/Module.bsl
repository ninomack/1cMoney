////////////////////////////////////////////////////////////////////////////////
//ОбщаяФорма.ОтправкаСообщенияВСлужбуПоддержки
//  формирует почтовое сообщение для отпарвки в службу поддержки
//  
//Параметры формы:
//	Тема - Строка - 
//	Тело - Строка - 
//	ТехнологическаяИнформация - Строка - 
//	УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - 
//	Получатель - Строка
//	РегистрационныйНомер - Строка - регистрационный номер программы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполняем сообщение
	Параметры.Свойство("Тема", ТемаСообщения);
	Параметры.Свойство("Тело", ТекстСообщения);
	Параметры.Свойство("ТехнологическаяИнформация", ТехнологическаяИнформация);
	Параметры.Свойство("УчетнаяЗапись", УчетнаяЗапись);
	Параметры.Свойство("Получатель", ПочтовыйАдресПолучателя);
	Параметры.Свойство("РегистрационныйНомер", РегНомер);
	
	ВложениеВПараметрах = Неопределено;
	Параметры.Свойство("Вложения", ВложениеВПараметрах);
	
	Если ТипЗнч(ВложениеВПараметрах) = Тип("СписокЗначений") Или ТипЗнч(ВложениеВПараметрах) = Тип("Массив") Тогда
		Для Каждого Вложение Из ВложениеВПараметрах Цикл
			ОписаниеВложения = Вложения.Добавить();
			Если ТипЗнч(ВложениеВПараметрах) = Тип("СписокЗначений") Тогда
				ОписаниеВложения.Представление = Вложение.Представление;
				ОписаниеВложения.НеУдалять = СтрНайти("Записи журнала регистрации.mxl,Результаты синхронизации.mxl,", ОписаниеВложения.Представление + ",") > 0;
				Если ТипЗнч(Вложение.Значение) = Тип("ДвоичныеДанные") Тогда
					ОписаниеВложения.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Вложение.Значение, УникальныйИдентификатор);
				Иначе
					Если ЭтоАдресВременногоХранилища(Вложение.Значение) Тогда
						ОписаниеВложения.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(Вложение.Значение), УникальныйИдентификатор);
					Иначе
						ОписаниеВложения.ПутьКФайлу = Вложение.Значение;
					КонецЕсли;
				КонецЕсли;
			Иначе // ТипЗнч(ВложениеВПараметрах) = "массив структур"
				ЗаполнитьЗначенияСвойств(ОписаниеВложения, Вложение);
				Если Не ПустаяСтрока(ОписаниеВложения.АдресВоВременномХранилище) Тогда
					ОписаниеВложения.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(
						ПолучитьИзВременногоХранилища(ОписаниеВложения.АдресВоВременномХранилище), УникальныйИдентификатор);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПредставлениеВложений();
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РегНомерПриИзменении(Элемент)
	
	Если ПоддержкаПользователейДеньгиКлиентСервер.РегистрационныйНомерСоответствуетМаске(РегНомер) Тогда
		ЗапомнитьРегНомер(РегНомер);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Вложения

// Удаляет вложение из списка, а так же вызывает функцию
// обновления таблицы представления вложений.
//
&НаКлиенте
Процедура ВложенияПередУдалением(Элемент, Отказ)
	
	НаименованиеВложения = Элемент.ТекущиеДанные[Элемент.ТекущийЭлемент.Имя];
	
	Для Каждого Вложение Из Вложения Цикл
		Если Вложение.Представление = НаименованиеВложения Тогда
			Если Вложение.НеУдалять Тогда
				ПоказатьПредупреждениеНельзяУдалить(НаименованиеВложения);
			Иначе
				Вложения.Удалить(Вложение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьПредставлениеВложений();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ДобавитьФайлВоВложения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьВложение();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Файл") Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВложенияПеретаскиваниеЗавершение", ЭтотОбъект, Новый Структура("Имя", ПараметрыПеретаскивания.Значение.Имя));
		НачатьПомещениеФайла(ОписаниеОповещения, , ПараметрыПеретаскивания.Значение.ПолноеИмя, Ложь);
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	ОткрытьВложение();
КонецПроцедуры

&НаКлиенте
Процедура ПриложитьФайлВыполнить()
	
	ДобавитьФайлВоВложения();
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПоддержкаПользователейДеньгиКлиентСервер.РегистрационныйНомерСоответствуетМаске(РегНомер) Тогда
		ПоказатьПредупреждениеНекорректныйНомер();
		ТекущийЭлемент = Элементы.РегНомер;
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ТемаСообщения) Тогда
		ПоказатьПредупреждениеНетТемы();
		ТекущийЭлемент = Элементы.РегНомер;
		Возврат;
	КонецЕсли;
	
	Если СпособОтправки = 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПроверкаУчетныхЗаписейЗавершение", ЭтотОбъект);
		РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(Оповещение);
		
	Иначе
		ОтправитьСообщениеКлиент();
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеКлиент()

	Если СпособОтправки = 0 Тогда
		
		ОтправитьПочтовоеСообщение();
		
	Иначе
		
		ПараметрыПисьма = СформироватьПараметрыПисьма();
		Если ПараметрыПисьма = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПоддержкаПользователейДеньгиКлиент.ОтправитьПочтовоеСообщениеВнешнимПриложением(ПараметрыПисьма);
		
	КонецЕсли;
	
	Закрыть();
	Состояние(НСтр("ru = 'Сообщение успешно отправлено'"));

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверкаУчетныхЗаписейЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = Истина Тогда
		ОтправитьСообщениеКлиент();
	КонецЕсли;

КонецПроцедуры
 

&НаСервереБезКонтекста 
Процедура ЗапомнитьРегНомер(Номер)

	ПоддержкаПользователейДеньги.ЗаписатьРегистрационныйНомер(Номер);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеНекорректныйНомер()

	Если ПустаяСтрока(РегНомер) Тогда
		ТекстПредупреждения = НСтр("ru='Не указан регистрационный номер программы.'");
	Иначе
		ТекстПредупреждения = НСтр("ru='Указан некорректный регистрационный номер программы.'");
	КонецЕсли;
	
	ТекстПредупреждения = ТекстПредупреждения + Символы.ПС + НСтр("ru='Перепишите регистрационный номер с анкеты или из личного кабинета покупателя.'"); 
	ПоказатьПредупреждение(, ТекстПредупреждения, , Заголовок);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеНетТемы()

	ТекстПредупреждения = НСтр("ru='Не заполнена тема сообщения
			|Сформулируйте в теме суть проблемы или предложения для эффективной обработки сообщения'");
	
	ПоказатьПредупреждение(, ТекстПредупреждения, , Заголовок);

КонецПроцедуры

&НаСервере
Функция ОтправитьПочтовоеСообщение()
	
	ПараметрыПисьма = СформироватьПараметрыПисьма();
	ПараметрыПисьма.Вставить("ТипТекста", ТипТекстаПочтовогоСообщения.ПростойТекст);
	РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
	 
	Возврат Истина;
	
КонецФункции

// Проверяет возможность отправления письма и если
// это возможно - формирует параметры отправки.
//
&НаСервере
Функция СформироватьПараметрыПисьма()
	
	ПараметрыПисьма = Новый Структура;
	
	СписокПолучателей = ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(ПочтовыйАдресПолучателя);
	Кому = Новый Массив;
	Для Каждого Получатель Из СписокПолучателей Цикл
		Кому.Добавить(Новый Структура("Адрес, Представление", Получатель.Адрес, Получатель.Псевдоним));
	КонецЦикла;
		
	ПараметрыПисьма.Вставить("Кому", Кому);
	
	Если ЗначениеЗаполнено(ТемаСообщения) Тогда
		ПараметрыПисьма.Вставить("Тема", ТемаСообщения);
	КонецЕсли;
	
	ПолныйТекст = "1С:Деньги 8. Регистрационный номер: " + СокрЛП(РегНомер) + Символы.ПС
		+ "----------------------" + Символы.ПС + Символы.ПС
		+ ТекстСообщения + ?(Не ПустаяСтрока(ТекстСообщения) , Символы.ПС + Символы.ПС + "----------------------", "")
		+ ТехнологическаяИнформация;
	
	ПараметрыПисьма.Вставить("Тело", ПолныйТекст);
	ПараметрыПисьма.Вставить("Вложения", Вложения());
	
	Возврат ПараметрыПисьма;
	
КонецФункции


#Область Вложения

&НаСервере
Функция Вложения()
	
	Результат = Новый Соответствие;
	
	Для Каждого Вложение Из Вложения Цикл
		//ОписаниеВложения = Новый Структура;
		//ОписаниеВложения.Вставить("Представление", Вложение.Представление);
		//ОписаниеВложения.Вставить("АдресВоВременномХранилище", Вложение.АдресВоВременномХранилище);
		//ОписаниеВложения.Вставить("Кодировка", Вложение.Кодировка);
		//ОписаниеВложения.Вставить("Идентификатор", Вложение.Идентификатор);
		Если ЗначениеЗаполнено(Вложение.АдресВоВременномХранилище) Тогда
			ДанныеВложения = ПолучитьИзВременногоХранилища(Вложение.АдресВоВременномХранилище);
		ИначеЕсли ЗначениеЗаполнено(Вложение.ПутьКФайлу) Тогда 
			ДанныеВложения = Новый ДвоичныеДанные(Вложение.ПутьКФайлу);
		КонецЕсли;
		
		Если ДанныеВложения <> Неопределено Тогда
			Результат.Вставить(Вложение.Представление, ДанныеВложения);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьВложение()
	
	ВыбранноеВложение = ВыбранноеВложение();
	Если ВыбранноеВложение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		ПолучитьФайл(ВыбранноеВложение.АдресВоВременномХранилище, ВыбранноеВложение.Представление, Истина);
	#Иначе
		
		Если ЗначениеЗаполнено(ВыбранноеВложение.ПутьКФайлу) Тогда
			
			ИмяВременногоФайла = ВыбранноеВложение.ПутьКФайлу;
			
		Иначе
			
			ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
			СоздатьКаталог(ИмяВременнойПапки);
			ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ВыбранноеВложение.Представление;
			
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(ВыбранноеВложение.АдресВоВременномХранилище);
			ДвоичныеДанные.Записать(ИмяВременногоФайла);
			
		КонецЕсли;
		
		Файл = Новый Файл(ИмяВременногоФайла);
		Файл.УстановитьТолькоЧтение(Истина);
		Если Файл.Расширение = ".mxl" Тогда
			Если ЗначениеЗаполнено(ВыбранноеВложение.ПутьКФайлу) Тогда
				ТабличныйДокумент = ПолучитьТабличныйДокументИзФайла(ИмяВременногоФайла);
			Иначе
				ТабличныйДокумент = ПолучитьТабличныйДокументПоДвоичнымДанным(ВыбранноеВложение.АдресВоВременномХранилище);
			КонецЕсли;
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ИмяДокумента", ВыбранноеВложение.Представление);
			ПараметрыОткрытия.Вставить("ТабличныйДокумент", ТабличныйДокумент);
			ПараметрыОткрытия.Вставить("ПутьКФайлу", ИмяВременногоФайла);
			ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия, ЭтотОбъект);
		Иначе
			ЗапуститьПриложение(ИмяВременногоФайла);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Функция ВыбранноеВложение()
	
	Результат = Неопределено;
	Если Элементы.Вложения.ТекущиеДанные <> Неопределено Тогда
		НаименованиеВложения = Элементы.Вложения.ТекущиеДанные[Элементы.Вложения.ТекущийЭлемент.Имя];
		Для Каждого Вложение Из Вложения Цикл
			Если Вложение.Представление = НаименованиеВложения Тогда
				Результат = Вложение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументИзФайла(Знач ИмяФайла)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяФайла);
	Возврат ТабличныйДокумент;

КонецФункции
 
&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументПоДвоичнымДанным(Знач ДвоичныеДанные)
	
	Если ТипЗнч(ДвоичныеДанные) = Тип("Строка") Тогда
		// Передан адрес двоичных данных во временном хранилище.
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДвоичныеДанные);
	КонецЕсли;
	
	ИмяФайла = ПолучитьИмяВременногоФайла("mxl");
	ДвоичныеДанные.Записать(ИмяФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяФайла);
	
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Получение табличного документа'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка, , , 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьФайлВоВложения()
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлВоВложенияПриПомещенииФайлов", ЭтотОбъект);
	ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлВоВложенияПриПомещенииФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	Если ПомещенныеФайлы = Неопределено Или ПомещенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ДобавитьФайлыВСписок(ПомещенныеФайлы);
	ОбновитьПредставлениеВложений();
КонецПроцедуры

&НаСервере
Процедура ДобавитьФайлыВСписок(ПомещенныеФайлы)
	
	Для Каждого ОписаниеФайла Из ПомещенныеФайлы Цикл
		Файл = Новый Файл(ОписаниеФайла.Имя);
		Вложение = Вложения.Добавить();
		Вложение.Представление = Файл.Имя;
		Вложение.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(ОписаниеФайла.Хранение), УникальныйИдентификатор);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВложений()
	
	ПредставлениеВложений.Очистить();
	
	Индекс = 0;
	
	Для Каждого Вложение Из Вложения Цикл
		Если Индекс = 0 Тогда
			СтрокаПредставления = ПредставлениеВложений.Добавить();
		КонецЕсли;
		
		СтрокаПредставления["Вложение" + Строка(Индекс + 1)] = Вложение.Представление;
		
		Индекс = Индекс + 1;
		Если Индекс = 2 Тогда 
			Индекс = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредупреждениеНельзяУдалить(ПредставлениеВложения)

	ТекстПредупреждения = НСтр("ru='Файл ""%1"" содержит технологическую информацию.
			|Удалять этот файл из вложений нельзя.'");
	ТекстПредупреждения = СтрШаблон(ТекстПредупреждения, ПредставлениеВложения);
	ПоказатьПредупреждение(, ТекстПредупреждения, , Заголовок);

КонецПроцедуры

#КонецОбласти


#КонецОбласти
