
////////////////////////////////////////////////////////////////////////////////
// Параметры формы
//	ИмяВидаДокумента - Строка - вид документа, для которого выполняются настройки
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КартинкаЭлементСЗамком = БиблиотекаКартинок.ПиктограммаЭлементСЗамком;
	
	НаборАналитики.Загрузить(Параметры.НаборАналитики.Выгрузить());
	ИмяВидаДокумента = Параметры.ИмяВидаДокумента;
	ЭтоРасход = Параметры.ЭтоРасход;
	
	РазрешитьРедактированиеАналитикиВШапке = Параметры.РазрешитьРедактированиеАналитикиВШапке;
	Элементы.ГруппаКнопкиСписокВерхний.Видимость               = РазрешитьРедактированиеАналитикиВШапке;
	Элементы.ГруппаКнопкиПеремещенияЭлементовСписков.Видимость = РазрешитьРедактированиеАналитикиВШапке;
	
	ЗаголовокКнопки = НСтр("ru = 'Для операций вида «%1»'");
	ЗаголовокКнопки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокКнопки, Метаданные.Документы[ИмяВидаДокумента].Представление());
	Элементы.ФормаЗаписатьПоУмолчанию.Заголовок = ЗаголовокКнопки;
	
	ЗаголовокКнопки = ?(ЭтоРасход, НСтр("ru = 'Для всех операций расхода'"), НСтр("ru = 'Для всех операций дохода'"));
	Элементы.ФормаЗаписатьПоУмолчаниюДляВсехОпераций.Заголовок = ЗаголовокКнопки;
	
	Для Каждого СтрокаАналитики Из НаборАналитики Цикл
		
		Если (ЭтоРасход И СтрокаАналитики.ИспользоватьДляРасхода) ИЛИ (НЕ ЭтоРасход И СтрокаАналитики.ИспользоватьДляДохода) Тогда
			
			ЗаполняетсяВсегда = АналитикаЗаполняетсяВсегда(СтрокаАналитики.ВидАналитики, ЭтоРасход);
			КартинкаЭлемента = ?(ЗаполняетсяВсегда, БиблиотекаКартинок.ПиктограммаЭлементСЗамком, БиблиотекаКартинок.ПиктограммаЭлемент);
								 
			Если СтрокаАналитики.РедактироватьВШапке И РазрешитьРедактированиеАналитикиВШапке Тогда
				СписокАналитикиШапки.Добавить(СтрокаАналитики.ВидАналитики, СтрокаАналитики.ВидАналитики.Наименование,, КартинкаЭлемента);
			Иначе
				СписокАналитикиСтрок.Добавить(СтрокаАналитики.ВидАналитики, СтрокаАналитики.ВидАналитики.Наименование,, КартинкаЭлемента);
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	ЗаполнитьСписокДоступныхАналитикСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ИмяПВХ = Неопределено;
	Если ИмяСобытия = "Записан вид характеристик" И ТипЗнч(Параметр) = Тип("Структура")
		 И Параметр.Свойство("ИмяПланаВидовХарактеристик", ИмяПВХ) И ИмяПВХ = "ВидыАналитик" Тогда
		ЗаполнитьСписокДоступныхАналитикСервер(Ложь, Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ  СписокДоступнойАналитики

&НаКлиенте
Процедура СписокДоступнойАналитикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// Надо добавлять в шапку или в таблицу в соответствии с настройками по умолчанию
	// Пока все добавляем в таблицу
	
	ПереместитьЭлементыИзСпискаВСписок(СписокДоступнойАналитики, СписокАналитикиСтрок, Элементы.СписокДоступнойАналитики, Элементы.СписокАналитикиСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоступнойАналитикиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПараметрыПеретаскивания.Значение = Новый Структура("Источник, ВыделенныеСтроки", "СписокДоступнойАналитики", Элемент.ВыделенныеСтроки);
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоступнойАналитикиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Структура")
		И (ПараметрыПеретаскивания.Значение.Источник = "СписокАналитикиШапки"
			ИЛИ ПараметрыПеретаскивания.Значение.Источник = "СписокАналитикиСтрок") Тогда
			
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
		
	Иначе
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоступнойАналитикиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
	ИмяИсточника = ПараметрыПеретаскивания.Значение.Источник;
	ПереместитьЭлементыИзСпискаВСписок(ЭтаФорма[ИмяИсточника], СписокДоступнойАналитики, Элементы[ИмяИсточника], Элемент);
	
	СписокДоступнойАналитики.СортироватьПоПредставлению();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ  СписокАналитикиШапки

&НаКлиенте
Процедура СписокАналитикиШапкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СписокНазначения  = ?(Элементы.ГруппаКнопкиСписокНижний.Видимость, СписокАналитикиСтрок, СписокДоступнойАналитики);
	ЭлементНазначения = ?(Элементы.ГруппаКнопкиСписокНижний.Видимость, Элементы.СписокАналитикиСтрок, Элементы.СписокДоступнойАналитики);
	ПереместитьЭлементыИзСпискаВСписок(СписокАналитикиШапки, СписокНазначения, Элементы.СписокАналитикиШапки, ЭлементНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАналитикиШапкиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПараметрыПеретаскивания.Значение = Новый Структура("Источник, ВыделенныеСтроки", "СписокАналитикиШапки", Элемент.ВыделенныеСтроки);
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАналитикиШапкиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Структура")
		И (ПараметрыПеретаскивания.Значение.Источник = "СписокДоступнойАналитики"
			ИЛИ ПараметрыПеретаскивания.Значение.Источник = "СписокАналитикиШапки"
			ИЛИ ПараметрыПеретаскивания.Значение.Источник = "СписокАналитикиСтрок") Тогда
			
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
		
	Иначе
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАналитикиШапкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
	ИмяИсточника = ПараметрыПеретаскивания.Значение.Источник;
	ПереместитьЭлементыИзСпискаВСписок(ЭтаФорма[ИмяИсточника], СписокАналитикиШапки, Элементы[ИмяИсточника], Элемент, Строка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ  СписокАналитикиСтрок

&НаКлиенте
Процедура СписокАналитикиСтрокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СписокНазначения  = ?(Элементы.ГруппаКнопкиСписокВерхний.Видимость, СписокАналитикиШапки, СписокДоступнойАналитики);
	ЭлементНазначения = ?(Элементы.ГруппаКнопкиСписокВерхний.Видимость, Элементы.СписокАналитикиШапки, Элементы.СписокДоступнойАналитики);
	ПереместитьЭлементыИзСпискаВСписок(СписокАналитикиСтрок, СписокНазначения, Элементы.СписокАналитикиСтрок, ЭлементНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАналитикиСтрокНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПараметрыПеретаскивания.Значение = Новый Структура("Источник, ВыделенныеСтроки", "СписокАналитикиСтрок", Элемент.ВыделенныеСтроки);
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАналитикиСтрокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Структура")
		И (ПараметрыПеретаскивания.Значение.Источник = "СписокДоступнойАналитики"
			ИЛИ ПараметрыПеретаскивания.Значение.Источник = "СписокАналитикиШапки"
			ИЛИ ПараметрыПеретаскивания.Значение.Источник = "СписокАналитикиСтрок") Тогда
			
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
		
	Иначе
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАналитикиСтрокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	
	ИмяИсточника = ПараметрыПеретаскивания.Значение.Источник;
	ПереместитьЭлементыИзСпискаВСписок(ЭтаФорма[ИмяИсточника], СписокАналитикиСтрок, Элементы[ИмяИсточника], Элемент, Строка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	
	//ОтборВидовАналитики = Новый Структура("ВидАналитики");
	Для Каждого СтрокаАналитики Из НаборАналитики Цикл
		
		БылВСпискеШапки  = ((ЭтоРасход И СтрокаАналитики.ИспользоватьДляРасхода) ИЛИ (НЕ ЭтоРасход И СтрокаАналитики.ИспользоватьДляДохода))
							И СтрокаАналитики.РедактироватьВШапке;
		ЕстьВСпискеШапки = (СписокАналитикиШапки.НайтиПоЗначению(СтрокаАналитики.ВидАналитики) <> Неопределено);
		ЕстьВСпискеСтрок = (СписокАналитикиСтрок.НайтиПоЗначению(СтрокаАналитики.ВидАналитики) <> Неопределено);
		
		// Значение реквизита РедактироватьВШапке можно изменять, только если расположение аналитики фактически изменялось. Иначе настройки расхода влияют на настройки дохода и наоборот без видимых причин.
		Если ЕстьВСпискеШапки <> БылВСпискеШапки Тогда
			СтрокаАналитики.РедактироватьВШапке = ЕстьВСпискеШапки;
		КонецЕсли;
		
		Если ЭтоРасход Тогда
			СтрокаАналитики.ИспользоватьДляРасхода = ЕстьВСпискеШапки ИЛИ ЕстьВСпискеСтрок;
		Иначе
			СтрокаАналитики.ИспользоватьДляДохода  = ЕстьВСпискеШапки ИЛИ ЕстьВСпискеСтрок;
		КонецЕсли;
		
	КонецЦикла; 
	
	Закрыть(НаборАналитики);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьПоУмолчанию(Команда)
	
	ЗаписатьНастройкиПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьДоступныеАналитики(Команда)
	
	ЗаполнитьСписокДоступныхАналитикСервер(Ложь, Истина)
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ПереместитьЭлементыИзСпискаВСписок(СписокАналитикиШапки, СписокАналитикиСтрок, Элементы.СписокАналитикиШапки, Элементы.СписокАналитикиСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВнизВсеЭлементы(Команда)
	
	ПереместитьВсеЭлементыИзСпискаВСписок(СписокАналитикиШапки, СписокАналитикиСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ПереместитьЭлементыИзСпискаВСписок(СписокАналитикиСтрок, СписокАналитикиШапки, Элементы.СписокАналитикиСтрок, Элементы.СписокАналитикиШапки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверхВсеЭлементы(Команда)
	
	ПереместитьВсеЭлементыИзСпискаВСписок(СписокАналитикиСтрок, СписокАналитикиШапки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВШапку(Команда)
	
	ПереместитьЭлементыИзСпискаВСписок(СписокДоступнойАналитики, СписокАналитикиШапки, Элементы.СписокДоступнойАналитики, Элементы.СписокАналитикиШапки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВШапкуВсе(Команда)
	
	ПереместитьВсеЭлементыИзСпискаВСписок(СписокДоступнойАналитики, СписокАналитикиШапки);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзШапки(Команда)
	
	ПереместитьЭлементыИзСпискаВСписок(СписокАналитикиШапки, СписокДоступнойАналитики, Элементы.СписокАналитикиШапки, Элементы.СписокДоступнойАналитики);
	СписокДоступнойАналитики.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзШапкиВсе(Команда)
	
	ПереместитьВсеЭлементыИзСпискаВСписок(СписокАналитикиШапки, СписокДоступнойАналитики);
	СписокДоступнойАналитики.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВТаблицу(Команда)
	
	ПереместитьЭлементыИзСпискаВСписок(СписокДоступнойАналитики, СписокАналитикиСтрок, Элементы.СписокДоступнойАналитики, Элементы.СписокАналитикиСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВТаблицуВсе(Команда)
	
	ПереместитьВсеЭлементыИзСпискаВСписок(СписокДоступнойАналитики, СписокАналитикиСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзТаблицы(Команда)
	
	ПереместитьЭлементыИзСпискаВСписок(СписокАналитикиСтрок, СписокДоступнойАналитики, Элементы.СписокАналитикиСтрок, Элементы.СписокДоступнойАналитики);
	СписокДоступнойАналитики.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзТаблицыВсе(Команда)
	
	ПереместитьВсеЭлементыИзСпискаВСписок(СписокАналитикиСтрок, СписокДоступнойАналитики);
	СписокДоступнойАналитики.СортироватьПоПредставлению();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСписокДоступныхАналитикСервер(ПроверятьСпискиШапкиИСтрок = Ложь, ОбновитьКартинкиВСпискахШапкиИСтрок = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АналитикиШапки", СписокАналитикиШапки.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("АналитикиСтрок", СписокАналитикиСтрок.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ДляДохода", НЕ ЭтоРасход);
	Запрос.УстановитьПараметр("ДляРасхода", ЭтоРасход);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыАналитик.Ссылка КАК Значение,
	|	ВидыАналитик.Наименование КАК Представление,
	|	&ДляДохода
	|			И ВидыАналитик.РасширенныеНастройкиДляДохода
	|		ИЛИ &ДляРасхода
	|			И ВидыАналитик.РасширенныеНастройкиДляРасхода КАК ЗаполняетсяВсегда,
	|	&ДляДохода
	|			И ВидыАналитик.РедактироватьВШапкеДляДохода
	|		ИЛИ &ДляРасхода
	|			И ВидыАналитик.РедактироватьВШапкеДляРасхода КАК РедактироватьВШапке
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|ГДЕ
	|	НЕ ВидыАналитик.Ссылка В (&АналитикиШапки)
	|	И НЕ ВидыАналитик.Ссылка В (&АналитикиСтрок)
	|	И НЕ ВидыАналитик.ПометкаУдаления
	|	И (&ДляДохода
	|				И ВидыАналитик.АктуальнаДляДохода
	|			ИЛИ &ДляРасхода
	|				И ВидыАналитик.АктуальнаДляРасхода)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Представление";
	
	СписокДоступнойАналитики.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		КартинкаЭлемента = ?(Выборка.ЗаполняетсяВсегда, БиблиотекаКартинок.ПиктограммаЭлементСЗамком, БиблиотекаКартинок.ПиктограммаЭлемент);
		
		Если НЕ Выборка.ЗаполняетсяВсегда ИЛИ НЕ ПроверятьСпискиШапкиИСтрок Тогда
			СписокДоступнойАналитики.Добавить(Выборка.Значение, Выборка.Представление,, КартинкаЭлемента);
		Иначе
			Если Выборка.РедактироватьВШапке Тогда
				СписокАналитикиШапки.Добавить(Выборка.Значение, Выборка.Представление,, КартинкаЭлемента);
			Иначе
				СписокАналитикиСтрок.Добавить(Выборка.Значение, Выборка.Представление,, КартинкаЭлемента);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПроверятьСпискиШапкиИСтрок Тогда
		МассивСтрокДляУдаления = Новый Массив;
		Для каждого Строка Из СписокАналитикиШапки Цикл
			Если АналитикаНеЗаполняетсяНикогда(Строка.Значение, ЭтоРасход) Тогда
				МассивСтрокДляУдаления.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Для каждого Строка Из МассивСтрокДляУдаления Цикл
			СписокАналитикиШапки.Удалить(Строка);
		КонецЦикла;
		Для каждого Строка Из СписокАналитикиСтрок Цикл
			Если АналитикаНеЗаполняетсяНикогда(Строка.Значение, ЭтоРасход) Тогда
				МассивСтрокДляУдаления.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Для каждого Строка Из МассивСтрокДляУдаления Цикл
			СписокАналитикиСтрок.Удалить(Строка);
		КонецЦикла;
	КонецЕсли;
	
	Если ОбновитьКартинкиВСпискахШапкиИСтрок Тогда
		Для каждого Строка Из СписокАналитикиШапки Цикл
			ЗаполняетсяВсегда = АналитикаЗаполняетсяВсегда(Строка.Значение, ЭтоРасход);
			КартинкаЭлемента = ?(ЗаполняетсяВсегда, БиблиотекаКартинок.ПиктограммаЭлементСЗамком, БиблиотекаКартинок.ПиктограммаЭлемент);
			Если Строка.Картинка <> КартинкаЭлемента Тогда
				Строка.Картинка = КартинкаЭлемента;
			КонецЕсли;
		КонецЦикла;
		Для каждого Строка Из СписокАналитикиСтрок Цикл
			ЗаполняетсяВсегда = АналитикаЗаполняетсяВсегда(Строка.Значение, ЭтоРасход);
			КартинкаЭлемента = ?(ЗаполняетсяВсегда, БиблиотекаКартинок.ПиктограммаЭлементСЗамком, БиблиотекаКартинок.ПиктограммаЭлемент);
			Если Строка.Картинка <> КартинкаЭлемента Тогда
				Строка.Картинка = КартинкаЭлемента;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Обновим флаги расширенных настроек
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыАналитик.Ссылка КАК ВидАналитики,
	|	ВидыАналитик.РасширенныеНастройкиДляДохода,
	|	ВидыАналитик.РасширенныеНастройкиДляРасхода
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик";
	
	Отбор = Новый Структура("ВидАналитики");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Отбор.ВидАналитики = Выборка.ВидАналитики;
		СтрокиНабораАналитики = НаборАналитики.НайтиСтроки(Отбор);
		Если ЗначениеЗаполнено(СтрокиНабораАналитики) Тогда
			ЗаполнитьЗначенияСвойств(СтрокиНабораАналитики[0], Выборка, "РасширенныеНастройкиДляДохода, РасширенныеНастройкиДляРасхода");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиПоУмолчанию()
	
	Набор = РегистрыСведений.НастройкиАналитикиВДокументахПоУмолчанию.СоздатьНаборЗаписей();
	Набор.Отбор.ВидДокумента.Установить(ИмяВидаДокумента);
	Для каждого СтрокаВидаАналитики Из СписокАналитикиШапки Цикл
		ЗаписьНабора = Набор.Добавить();
		ЗаписьНабора.ВидДокумента = ИмяВидаДокумента;
		ЗаписьНабора.ВидАналитики = СтрокаВидаАналитики.Значение;
		ЗаписьНабора.РедактироватьВШапке = Истина;
	КонецЦикла;
	Для каждого СтрокаВидаАналитики Из СписокАналитикиСтрок Цикл
		ЗаписьНабора = Набор.Добавить();
		ЗаписьНабора.ВидДокумента = ИмяВидаДокумента;
		ЗаписьНабора.ВидАналитики = СтрокаВидаАналитики.Значение;
		ЗаписьНабора.РедактироватьВШапке = Ложь;
	КонецЦикла;
	
	Набор.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементыИзСпискаВСписок(СписокИсточник, СписокПриемник, ЭлементФормыИсточник, ЭлементФормыПриемник, ПозицияВставкиВПриемнике = Неопределено)
	
	СтрокаПриемник = Неопределено;
	
	Для Каждого ВыделеннаяСтрока Из ЭлементФормыИсточник.ВыделенныеСтроки Цикл
		
		СтрокаИсточник = СписокИсточник.НайтиПоИдентификатору(ВыделеннаяСтрока);
		//Если СтрокаИсточник.Картинка = БиблиотекаКартинок.ПиктограммаЭлементСЗамком И СписокПриемник = СписокДоступнойАналитики Тогда
		Если СтрокаИсточник.Картинка = КартинкаЭлементСЗамком И СписокПриемник = СписокДоступнойАналитики Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПозицияВставкиВПриемнике <> Неопределено Тогда
			ИндексТекущейСтроки = СписокПриемник.Индекс(СписокПриемник.НайтиПоИдентификатору(ПозицияВставкиВПриемнике));
			СтрокаПриемник = СписокПриемник.Вставить(ИндексТекущейСтроки, СтрокаИсточник.Значение, СтрокаИсточник.Представление,, СтрокаИсточник.Картинка);
		Иначе
			СтрокаПриемник = СписокПриемник.Добавить(СтрокаИсточник.Значение, СтрокаИсточник.Представление,, СтрокаИсточник.Картинка);
		КонецЕсли;
		
		СписокИсточник.Удалить(СтрокаИсточник);
		
	КонецЦикла; 
	
	Если СтрокаПриемник <> Неопределено Тогда
		ЭлементФормыПриемник.ТекущаяСтрока = СтрокаПриемник.ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВсеЭлементыИзСпискаВСписок(СписокИсточник, СписокПриемник)
	
	МассивСтрокДляУдаления = Новый Массив;
	
	Для Каждого СтрокаИсточник Из СписокИсточник Цикл
		//Если СтрокаИсточник.Картинка = БиблиотекаКартинок.ПиктограммаЭлементСЗамком И СписокПриемник = СписокДоступнойАналитики Тогда
		Если СтрокаИсточник.Картинка = КартинкаЭлементСЗамком И СписокПриемник = СписокДоступнойАналитики Тогда
			Продолжить;
		КонецЕсли;
		СтрокаПриемник = СписокПриемник.Добавить(СтрокаИсточник.Значение, СтрокаИсточник.Представление,, СтрокаИсточник.Картинка);
		МассивСтрокДляУдаления.Добавить(СтрокаИсточник);
	КонецЦикла; 
	
	Для каждого СтрокаИсточник Из МассивСтрокДляУдаления Цикл
		СписокИсточник.Удалить(СтрокаИсточник);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АналитикаЗаполняетсяВсегда(ВидАналитики, ЭтоРасход)

	Если ЭтоРасход Тогда
		ЗаполняетсяВсегда = НЕ ВидАналитики.ПометкаУдаления И ВидАналитики.АктуальнаДляРасхода И ВидАналитики.РасширенныеНастройкиДляРасхода;
	Иначе
		ЗаполняетсяВсегда = НЕ ВидАналитики.ПометкаУдаления И ВидАналитики.АктуальнаДляДохода И ВидАналитики.РасширенныеНастройкиДляДохода;
	КонецЕсли;
	
	Возврат ЗаполняетсяВсегда;

КонецФункции

&НаСервереБезКонтекста
Функция АналитикаНеЗаполняетсяНикогда(ВидАналитики, ЭтоРасход)

	Возврат ВидАналитики.ПометкаУдаления 
			ИЛИ ЭтоРасход    И НЕ ВидАналитики.АктуальнаДляРасхода 
			ИЛИ НЕ ЭтоРасход И НЕ ВидАналитики.АктуальнаДляДохода;

КонецФункции
