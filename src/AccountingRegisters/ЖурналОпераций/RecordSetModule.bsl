
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИтогиПроводок = Новый ТаблицаЗначений;
	ИтогиПроводок.Колонки.Добавить("Активность");
	ИтогиПроводок.Колонки.Добавить("МоментВремени");
	ИтогиПроводок.Колонки.Добавить("Валюта");
	ИтогиПроводок.Колонки.Добавить("РазделУчета");
	ИтогиПроводок.Колонки.Добавить("ОбъектУчета");
	ИтогиПроводок.Колонки.Добавить("ФинансоваяЦель");
	ИтогиПроводок.Колонки.Добавить("ВалютнаяСумма");
	
	НаборЗаписей = РегистрыБухгалтерии.ЖурналОпераций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	НаборЗаписей.Прочитать();
	
	// Запомним прежние проводки
	ЗаполнитьИтогиПроводок(ИтогиПроводок, НаборЗаписей, Истина);
	ДополнительныеСвойства.Вставить("ПрежниеИтогиПроводок", ИтогиПроводок);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, РежимЗаписи)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.Свойство("ПрежниеИтогиПроводок") Тогда
		ВызватьИсключение "Свойство ПрежниеИтогиПроводок не определено";
	КонецЕсли;
	
	ТаблицаИзменений = ДополнительныеСвойства.ПрежниеИтогиПроводок;
	
	// Дополним таблицу изменений новыми проводками
	ЗаполнитьИтогиПроводок(ТаблицаИзменений, ЭтотОбъект, Ложь);
	
	// Проверим границы последовательности
	ПоследовательностьМенеджер = Последовательности.ВводИзменениеОстатков;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РазделыУчета", ТаблицаИзменений.ВыгрузитьКолонку("РазделУчета"));
	Запрос.УстановитьПараметр("ОбъектыУчета", ТаблицаИзменений.ВыгрузитьКолонку("ОбъектУчета"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВводИзменениеОстатковГраницы.РазделУчета,
	|	ВводИзменениеОстатковГраницы.ОбъектУчета,
	|	ВводИзменениеОстатковГраницы.МоментВремени
	|ИЗ
	|	Последовательность.ВводИзменениеОстатков.Границы КАК ВводИзменениеОстатковГраницы
	|ГДЕ
	|	ВводИзменениеОстатковГраницы.РазделУчета В(&РазделыУчета)
	|	И ВводИзменениеОстатковГраницы.ОбъектУчета В(&ОбъектыУчета)";
	ГраницыПоследовательности = Запрос.Выполнить().Выгрузить();
	
	ОтборГраниц = Новый Структура("РазделУчета, ОбъектУчета");
	Для каждого Строка Из ТаблицаИзменений Цикл
		
		Если Строка.ВалютнаяСумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОтборГраниц.РазделУчета = Строка.РазделУчета;
		ОтборГраниц.ОбъектУчета = Строка.ОбъектУчета;
		ТекущаяГраница = ГраницыПоследовательности.НайтиСтроки(ОтборГраниц);
		
		// Если последовательность нарушена, сдвигаем границу назад
		Если ЗначениеЗаполнено(ТекущаяГраница) И ТекущаяГраница[0].МоментВремени.Сравнить(Строка.МоментВремени) = 1 Тогда
			ПоследовательностьМенеджер.УстановитьГраницу(Строка.МоментВремени, ОтборГраниц);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьИтогиПроводок(ИтогиПроводок, НаборЗаписей, ИнвертироватьЗнак, Замещать = Ложь)
	
	Множитель = ?(ИнвертироватьЗнак, -1, 1);
	СчетКапитал    = ПланыСчетов.РазделыУчета.Капитал;
	
	Если Замещать Тогда
		ИтогиПроводок.Очистить();
	КонецЕсли;
	
	ЗаписиНабора = НаборЗаписей.Выгрузить(, "Активность, Период, Регистратор, Валюта, СчетДт, СубконтоДт1, СубконтоДт2, СчетКт, СубконтоКт1, СубконтоКт2, ВалютнаяСумма");
	Для каждого Запись Из ЗаписиНабора Цикл
		
		Если Запись.СчетДт <> СчетКапитал Тогда
			НоваяСтрока = ИтогиПроводок.Добавить();
			НоваяСтрока.Активность     = Запись.Активность;
			НоваяСтрока.МоментВремени  = Новый МоментВремени(Запись.Период, Запись.Регистратор);
			НоваяСтрока.Валюта         = Запись.Валюта;
			НоваяСтрока.РазделУчета    = Запись.СчетДт;
			НоваяСтрока.ОбъектУчета    = Запись.СубконтоДт1;
			НоваяСтрока.ФинансоваяЦель = Запись.СубконтоДт2;
			НоваяСтрока.ВалютнаяСумма  = Множитель * Запись.ВалютнаяСумма;
		КонецЕсли;
		
		Если Запись.СчетКт <> СчетКапитал Тогда
			НоваяСтрока = ИтогиПроводок.Добавить();
			НоваяСтрока.Активность     = Запись.Активность;
			НоваяСтрока.МоментВремени  = Новый МоментВремени(Запись.Период, Запись.Регистратор);
			НоваяСтрока.Валюта         = Запись.Валюта;
			НоваяСтрока.РазделУчета    = Запись.СчетКт;
			НоваяСтрока.ОбъектУчета    = Запись.СубконтоКт1;
			НоваяСтрока.ФинансоваяЦель = Запись.СубконтоКт2;
			НоваяСтрока.ВалютнаяСумма  = Множитель * -Запись.ВалютнаяСумма;
		КонецЕсли;
		
	КонецЦикла; 
	
	ИтогиПроводок.Свернуть("Активность, МоментВремени, Валюта, РазделУчета, ОбъектУчета, ФинансоваяЦель", "ВалютнаяСумма");
	
КонецПроцедуры
