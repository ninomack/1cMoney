
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ОбслуживаниеСправочниковКлиент.ИнформироватьОДобавленииСтатьиБюджета();
КонецПроцедуры
 
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записан элемент справочника", Новый Структура("ИмяСправочника,Ссылка", "ФинансовыеЦели", ФинансоваяЦель.Ссылка));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыСервер.ОбработатьИЗаписатьДанныеМультимедиа(МедиаФайлы, ТекущийОбъект.Ссылка);
	#КонецОбласти 
	
	Если ЗначениеЗаполнено(ФинансоваяЦель.Ссылка) И ТаблицаКошельков.Итог("Отложить") <> 0 Тогда
		
		ВалютаУчета = Константы.ВалютаУчета.Получить();
		
		Для Каждого СтрокаКошелька Из ТаблицаКошельков Цикл
			
			Если СтрокаКошелька.Отложить = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументНакопления = Документы.Перемещение.СоздатьДокумент();
			ДокументНакопления.Дата                  = ТекущаяДатаСеанса();
			ДокументНакопления.СчетОткуда            = ПланыСчетов.РазделыУчета.Накопления;
			ДокументНакопления.СчетКуда              = ПланыСчетов.РазделыУчета.Накопления;
			ДокументНакопления.КошелекОткуда         = СтрокаКошелька.Кошелек;
			ДокументНакопления.КошелекКуда           = СтрокаКошелька.Кошелек;
			ДокументНакопления.ФинансоваяЦельОткуда  = Справочники.ФинансовыеЦели.ОбщиеНакопления;
			ДокументНакопления.ФинансоваяЦельКуда    = ФинансоваяЦель.Ссылка;
			ДокументНакопления.СуммаОперации         = СтрокаКошелька.Отложить;
			ДокументНакопления.ВалютаОперации        = СтрокаКошелька.Отложить;
			
			ДокументНакопления.Комментарий           = "Первоначальные накопления";
			
			ДокументНакопления.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	Элементы.ГруппаСтраницыПомощника.ТекущаяСтраница = Элементы.ГруппаФинансоваяЦель;
	УправлениеФормой(ЭтаФорма);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ОбработатьОповещениеДобавленияФайла(ЭтотОбъект, Параметр);
	ИначеЕсли (ПрикрепленныеФайлыКлиент.ЭтоИзменениеСпискаМультимедиа(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаКошельковПриИзменении(Элемент)
	
	ТекстИтогаНакоплений = ПолучитьТекстИтогов(ТаблицаКошельков);
	Элементы.ТекстИтогаНакоплений.Высота = СтрЧислоСтрок(ТекстИтогаНакоплений) + 1; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	ВалютаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "ФинансоваяЦель.Комментарий", Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКошельковОтложитьПриИзменении(Элемент)
	
	СтрокаКошелька = Элементы.ТаблицаКошельков.ТекущиеДанные;
	СтрокаКошелька.ОтложитьВВалютеЦели = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаКошелька.Отложить,
			СтрокаКошелька.Валюта, ФинансоваяЦель.Валюта, СтрокаКошелька.КурсКошелька, КурсЦели, 
			СтрокаКошелька.КратностьКошелька, КратностьЦели);
	
КонецПроцедуры


#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеТекущегоФайлаНажатие(Элемент, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаТекущийФайл(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлКнопкаНавигацииНажатие(Элемент)
	ПрикрепленныеФайлыКлиент.ФайлКнопкаНавигацииНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры

#КонецОбласти 



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВсе(Команда)
	
	Для каждого Строка Из ТаблицаКошельков Цикл
		Строка.Отложить = Строка.Остаток;
	КонецЦикла;
	ТекстИтогаНакоплений = ПолучитьТекстИтогов(ТаблицаКошельков);
	Элементы.ТекстИтогаНакоплений.Высота = СтрЧислоСтрок(ТекстИтогаНакоплений) + 1; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсе(Команда)
	
	Для каждого Строка Из ТаблицаКошельков Цикл
		Строка.Отложить = 0;
	КонецЦикла;
	ТекстИтогаНакоплений = ПолучитьТекстИтогов(ТаблицаКошельков);
	Элементы.ТекстИтогаНакоплений.Высота = СтрЧислоСтрок(ТекстИтогаНакоплений) + 1; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяСтраница(Команда)
	
	ПоказатьСтраницу(ЭтаФорма, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура СледующаяСтраница(Команда)
	
	ПоказатьСтраницу(ЭтаФорма, 1);
	
КонецПроцедуры



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	#КонецОбласти	
	
	// Подготовка редактируемых объектов
	Если Параметры.Копирование И ЗначениеЗаполнено(Параметры.ОбъектКопирования) Тогда
		ФинансоваяЦель.Наименование = "Копия: " + Параметры.ОбъектКопирования.Наименование;
		ФинансоваяЦель.Валюта = Параметры.ОбъектКопирования.Валюта;
		ФинансоваяЦель.Сумма  = Параметры.ОбъектКопирования.Сумма;
		ФинансоваяЦель.Срок   = Параметры.ОбъектКопирования.Срок;
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ФинансоваяЦель.Валюта);
		КурсЦели 	   = КурсИКратность.Курс;
		КратностьЦели  = КурсИКратность.Кратность;
	Иначе
		ФинансоваяЦель.Валюта = Константы.ВалютаУчета.Получить();
		КурсЦели = 1;
		КратностьЦели = 1;
	КонецЕсли; 
	ФинансоваяЦель.Активность = Истина;
	
	// Заполнение дополнительных колонок
	ЗаполнитьДобавленныеКолонки();
	
	// Подготовка реквизитов формы
	Если ТаблицаКошельков.Количество() > 0 Тогда
		СписокЗаголовковНавигатора.Добавить("Шаг 1 из 2: Параметры финансовой цели");
		СписокЗаголовковНавигатора.Добавить("Шаг 2 из 2: Перенос доступных накоплений на финансовую цель");
	Иначе
		СписокЗаголовковНавигатора.Добавить("Шаг 1 из 1: Параметры финансовой цели");
	КонецЕсли; 
	
	// Настройка внешнего вида
	УправлениеФормой(ЭтаФорма);
	ПоказатьСтраницу(ЭтаФорма, 0);
	
	// Общие настройки форм элементов справочников
	РаботаСФормамиСправочников.ФормаЭлементаПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонки()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	жОстатки.Субконто1 КАК Кошелек,
	|	жОстатки.Валюта,
	|	жОстатки.ВалютнаяСуммаОстаток КАК Остаток,
	|	КурсыКошельков.Курс КАК КурсКошелька,
	|	КурсыКошельков.Кратность КАК КратностьКошелька
	|ИЗ
	|	РегистрБухгалтерии.ЖурналОпераций.Остатки(, Счет = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления), , Субконто2 = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ОбщиеНакопления)) КАК жОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыКошельков
	|		ПО жОстатки.Валюта = КурсыКошельков.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	жОстатки.Субконто1.Наименование";
	
	ТаблицаКошельков.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УправлениеФормой(Форма)


КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ПоказатьСтраницу(Форма, Направление)

	Элементы = Форма.Элементы;
	СписокЗаголовков = Форма.СписокЗаголовковНавигатора;
	
	
	Страницы = Элементы.ГруппаСтраницыПомощника.ПодчиненныеЭлементы;
	ТекущийИндекс = Страницы.Индекс(Элементы.ГруппаСтраницыПомощника.ТекущаяСтраница);
	НовыйИндекс = ТекущийИндекс + Направление;
	Если НовыйИндекс < 0 Или НовыйИндекс > СписокЗаголовков.Количество() - 1 Тогда
		Возврат;
	КонецЕсли; 

	Элементы.ДекорацияЗаголовокНавигатора.Заголовок = СписокЗаголовков[НовыйИндекс];
	Элементы.ГруппаСтраницыПомощника.ТекущаяСтраница = Страницы[НовыйИндекс];
	Элементы.ПредыдущаяСтраница.Доступность = НовыйИндекс > 0;
	Элементы.СледующаяСтраница.Доступность = НовыйИндекс < СписокЗаголовков.Количество() - 1 И Форма.ФинансоваяЦель.Ссылка.Пустая();
	Элементы.СледующаяСтраница.КнопкаПоУмолчанию = Элементы.СледующаяСтраница.Доступность;
	Элементы.ЗаписатьИЗакрыть.КнопкаПоУмолчанию = НЕ Элементы.СледующаяСтраница.Доступность;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстИтогов(Знач ТаблицаКошельков)

	ТаблицаВалют = ТаблицаКошельков.Выгрузить();
	ТаблицаВалют.Свернуть("Валюта", "Отложить");
	Результат = "";
	Для Каждого СтрокаИтога Из ТаблицаВалют  Цикл
		Если СтрокаИтога.Отложить <> 0 Тогда
			Результат = Результат + ?(Результат = "", "", Символы.ПС)
				+ Формат(СтрокаИтога.Отложить, "ЧЦ=15; ЧДЦ=2") + " " + СтрокаИтога.Валюта;
		КонецЕсли; 
	КонецЦикла; 
	
	Результат = ?(Результат = "", "", "Отложено: ") + Результат;
	Возврат Результат;

КонецФункции

&НаСервере
Процедура ВалютаПриИзмененииСервер()

	КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ФинансоваяЦель.Валюта);
	КурсЦели 	   = КурсИКратность.Курс;
	КратностьЦели  = КурсИКратность.Кратность;
	
	Для Каждого СтрокаКошелька Из ТаблицаКошельков Цикл
		Если СтрокаКошелька.Отложить <> 0 Тогда
			СтрокаКошелька.ОтложитьВВалютеЦели = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаКошелька.Отложить,
					СтрокаКошелька.Валюта, ФинансоваяЦель.Валюта, СтрокаКошелька.КурсКошелька, КурсЦели, 
					СтрокаКошелька.КратностьКошелька, КратностьЦели);
		КонецЕсли; 
	КонецЦикла; 

	
	
КонецПроцедуры



#КонецОбласти

