////////////////////////////////////////////////////////////////////////////////
//Отчет.РегламентированныйОтчет3НДФЛ.Форма.ОбъектИмущественногоВычета2018кв1
//  Описание купленного или построенного объекта недвижимости
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Декларация3НДФЛВыбраннаяФорма = Параметры.Декларация3НДФЛВыбраннаяФорма;
	
	// Конвертация параметров формы в значения ДропРеквизитов формы
	Обработки.ПомощникЗаполнения3НДФЛ.ЗаполнитьДопРеквизитыФормыДокументаПомощника(ЭтотОбъект);
	
	// Чтение структуры документа
	СтрукураДокументаНаСервере = Обработки.ПомощникЗаполнения3НДФЛ.СтруктураДокументаСТаблицамиИзХранилищ(ДопРеквизитыФормы.СтруктураДокумента);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрукураДокументаНаСервере, ,);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДопРеквизитыФормы.СписокОшибок <> Неопределено Тогда
		// Если форма открывается из списка собщений помощника заполнения, в параметрах будет передан массив "СписокОшибок"
		ПоказатьСписокОшибок(ДопРеквизитыФормы.СписокОшибок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='Записать изменения перед закрытием этой формы?'");
		
		ДополнительныеПараметры = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Закрыть без записи'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить закрытие'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъектНедвижимостиПриИзменении(Элемент)
	
	Если ОбъектНедвижимости = 0 Тогда
		ОбъектНедвижимости = 2;
	КонецЕсли;
	
	Если ЭтоЗемельныйУчасток(ОбъектНедвижимости) Тогда
		СпособПриобретенияНедвижимости = "Покупка";
		ДатаАктаПередачиПрав = Неопределено;
	Иначе
		ДатаРегистрацииПраваНаЗемлю = Неопределено;
	КонецЕсли;
	
	УстановитьВидимостьПриИзмененииОбъектаНедвижимости(ЭтотОбъект);
	УстановитьТекстПодсказкиСуммаРасходов(ЭтотОбъект);
	УстановитьВидимостьДатПереходаПрава(ЭтотОбъект);
	УстановитьВидимостьДоли(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаСобственностиПриИзменении(Элемент)
	УстановитьВидимостьДоли(ЭтотОбъект);
	УстановитьВидимостьЗаявленияОРаспределенииВычета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаАктаПередачиПравПриИзменении(Элемент)
	НачалоПримененияВычета = ДатаАктаПередачиПрав;
	УстановитьВидимостьДоли(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаРегистрацииПраваСобственностиПриИзменении(Элемент)
	НачалоПримененияВычета = ДатаРегистрацииПраваСобственности;
	УстановитьВидимостьДоли(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КодНомераОбъектаПриИзменении(Элемент)
	УстановитьВидимостьКадастровогоНомераАдреса(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ЖильеПриобретеноНаВторичномРынкеПриИзменении(Элемент)
	УстановитьВидимостьДатПереходаПрава(ЭтотОбъект);
	УстановитьВидимостьДоли(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОформленоЗаявлениеОРаспределенииВычетаПриИзменении(Элемент)
	УстановитьВидимостьЗаявленияОРаспределенииВычета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВычетПоПроцентамПриИзменении(Элемент)
	УстановитьВидимостьВычетаПоПроцентам(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КредитОформленДо2014ГодаПриИзменении(Элемент)
	УстановитьВидимостьВычетовПоПроцентамИзПредыдущихДеклараций(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВычетПрименяетсяВпервыеПриИзменении(Элемент)
	УстановитьВидимостьВычетовПоПроцентамИзПредыдущихДеклараций(ЭтотОбъект);
КонецПроцедуры


#КонецОбласти



#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоЗемельныйУчасток(ОбъектНедвижимости)
	
	Возврат ОбъектНедвижимости >= 5;
	
КонецФункции




&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	УстановитьВидимостьПриИзмененииОбъектаНедвижимости(Форма);
	УстановитьВидимостьКадастровогоНомераАдреса(Форма);
	УстановитьВидимостьДатПереходаПрава(Форма);
	УстановитьВидимостьЗаявленияОРаспределенииВычета(Форма);
	
	УстановитьВидимостьДоли(Форма);
	
	Элементы.ГруппаЭтоСобственностьСупруга.Видимость = ЭтоИндивидуальнаяСобственность(Форма.ФормаСобственности);
	
	Элементы.ГруппаПроцентыПоИпотеке.Видимость = НЕ Форма.ВычетПоПроцентамНедоступен;
	
	УстановитьВидимостьВычетаПоПроцентам(Форма);
	УстановитьВидимостьВычетовПоПроцентамИзПредыдущихДеклараций(Форма);
	
	УстановитьТекстПодсказкиСуммаРасходов(Форма);
	
	УстановитьКлючСохраненияПоложенияОкнаФормы(Форма);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокОшибок(СписокОшибок)

	ОчиститьСообщения();
	Для каждого Ошибка Из СписокОшибок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст  = Ошибка.ОписаниеОшибки;
		Сообщение.Поле   = Ошибка.ИмяРеквизита;
		Сообщение.Сообщить(); 
		
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПриИзмененииОбъектаНедвижимости(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ЖильеПриобретеноНаВторичномРынке.Видимость = Форма.ОбъектНедвижимости <= 4;
	Элементы.ДатаРегистрацииПраваНаЗемлю.Видимость = Форма.ОбъектНедвижимости > 4;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЗаявленияОРаспределенииВычета(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоОбщаяДолеваяСобственность    = ЭтоОбщаяДолеваяСобственность(Форма.ФормаСобственности);
	ЭтоОбщаяСовместнаяСобственность = ЭтоОбщаяСовместнаяСобственность(Форма.ФормаСобственности);
	
	Элементы.ОформленоЗаявлениеОРаспределенииВычета.Видимость = (ЭтоОбщаяДолеваяСобственность ИЛИ ЭтоОбщаяСовместнаяСобственность);
	Элементы.ДатаЗаявленияОРаспределенииРасходов.Видимость =
		(ЭтоОбщаяДолеваяСобственность ИЛИ ЭтоОбщаяСовместнаяСобственность) И Форма.ОформленоЗаявлениеОРаспределенииВычета;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьКадастровогоНомераАдреса(Форма)
	
	Если Форма.КодНомераОбъекта = 0 Тогда
		Форма.КадастровыйНомер = "";
	Иначе
		Форма.АдресОбъектаНедвижимости = "";
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	Элементы.КадастровыйНомер.Видимость         = Форма.КодНомераОбъекта <> 0;
	Элементы.АдресОбъектаНедвижимости.Видимость = Форма.КодНомераОбъекта = 0;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоли(Форма)
	
	Элементы = Форма.Элементы;
	ЭтоОбщаяДолеваяСобственность = ЭтоОбщаяДолеваяСобственность(Форма.ФормаСобственности);
	
	Элементы.СредиСобственниковРебенок.Видимость = ЭтоОбщаяДолеваяСобственность;
	
	Если НЕ Форма.ЖильеПриобретеноНаВторичномРынке Тогда
		ГодПриобретения = Год(Форма.ДатаАктаПередачиПрав);
	Иначе
		ГодПриобретения = Год(Форма.ДатаРегистрацииПраваСобственности);
	КонецЕсли;
	
	Форма.ПоказыватьДоли = (ЭтоОбщаяДолеваяСобственность И ГодПриобретения > 1 И ГодПриобретения < 2014);
	
	Элементы.ГруппаДоля.Видимость = Форма.ПоказыватьДоли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьВычетаПоПроцентам(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.КредитОформленДо2014Года.Видимость = Форма.ИспользоватьВычетПоПроцентам;
	Элементы.СуммаПроцентовЗаВсеГоды.Видимость = Форма.ИспользоватьВычетПоПроцентам;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДатПереходаПрава(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ДатаАктаПередачиПрав.Видимость = НЕ Форма.ЖильеПриобретеноНаВторичномРынке;
	Элементы.ДатаРегистрацииПраваСобственности.Видимость = Форма.ЖильеПриобретеноНаВторичномРынке;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьВычетовПоПроцентамИзПредыдущихДеклараций(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.ГруппаНачалоПримененияВычета.Доступность = Не Форма.ВычетПрименяетсяВпервые;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКлючСохраненияПоложенияОкнаФормы(Форма)
	
	Ключ = "" + Форма.ОбъектНедвижимости + Форма.ФормаСобственности;
	
	Если Форма.ЖильеПриобретеноНаВторичномРынке Тогда
		Ключ = Ключ + "ВторичныйРынок";
	Иначе
		Ключ = Ключ + "Новостройка";
	КонецЕсли;
	
	Если Форма.ВычетПоПроцентамНедоступен Тогда
		Ключ = Ключ + "БезПроцентов";
	КонецЕсли;
	
	Если Форма.ИспользоватьВычетПоПроцентам Тогда
		Ключ = Ключ + "ПоказатьПроценты";
	КонецЕсли;
	
	Если НЕ Форма.ВычетПрименяетсяВпервые Тогда
		Ключ = Ключ + "ПоказатьОстатокНаНачало";
	КонецЕсли;
	
	Форма.КлючСохраненияПоложенияОкна = Ключ;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстПодсказкиСуммаРасходов(Форма)
	
	Элементы = Форма.Элементы;
	
	ТекстПодсказки = "";
	Если Форма.ОбъектНедвижимости <= 4 Тогда
		ТекстПодсказки = НСтр("ru = 'Сумма расходов на приобретение недвижимости без учета ее стоимости
		|и расходов на погашение процентов по кредитам.
		|
		|Включаются расходы на:
		| - приобретение отделочных материалов;
		| - работы, связанные с отделкой приобретенной недвижимости;
		| - разработку проектной и сметной документации на проведение отделочных работ.
		|
		|Указываются только документально подтвержденные расходы.'");
	Иначе
		ТекстПодсказки = НСтр("ru = 'Сумма расходов на строительство недвижимости без учета стоимости
		|земельного участка, недостроенного жилого дома и расходов на погашение
		|процентов по кредитам.
		|
		|Включаются расходы на:
		| - на разработку проектной и сметной документации;
		| - на приобретение строительных и отделочных материалов;
		| - на работы или услуги по строительству и отделке;
		| - на подведение коммуникаций.
		|
		|Указываются только документально подтвержденные расходы.'");
	КонецЕсли;
	
	Элементы.СуммаРасходовРасширеннаяПодсказка.Заголовок = ТекстПодсказки;
	
КонецПроцедуры

&НаСервере 
Функция СтруктураДанныхДекларации()
	
	СтруктураДанныхДекларации = НовыйСтруктураДанныхДекларации();
	
	ПустаяДата = Дата(1,1,1);
	
	СтруктураДанныхДекларации.КодНаименованияОбъектаНедвижимости = ?(ОбъектНедвижимости = 8, 4, ОбъектНедвижимости);
	СтруктураДанныхДекларации.ПризнакНалогоплательщикаОбъектаНедвижимости = ПризнакНалогоплательщика();
	СтруктураДанныхДекларации.ФормаСобственности = ФормаСобственности;
	
	СтруктураДанныхДекларации.КодНомераОбъектаНедвижимости = КодНомераОбъекта;
	//Если КодНомераОбъекта = 0 Тогда
		СтруктураДанныхДекларации.АдресОбъектаНедвижимости = АдресОбъектаНедвижимости;
	//Иначе
		СтруктураДанныхДекларации.КадастровыйНомерОбъектаНедвижимости = КадастровыйНомер;
	//КонецЕсли;
	
	Если ЖильеПриобретеноНаВторичномРынке Тогда
		СтруктураДанныхДекларации.ДатаРегистрацииПравСобственностиНаЖилье = ДатаРегистрацииПраваСобственности;
	Иначе
		СтруктураДанныхДекларации.ДатаАктаОПередачеОбъектаНедвижимости = ДатаАктаПередачиПрав;
	КонецЕсли;
	
	Если ОбъектНедвижимости > 4 Тогда
		СтруктураДанныхДекларации.ДатаРегистрацииПравСобственностиНаЗемлю = ДатаРегистрацииПраваНаЗемлю;
	КонецЕсли;
	
	Если ОформленоЗаявлениеОРаспределенииВычета Тогда
		СтруктураДанныхДекларации.ДатаЗаявленияОРаспределенииВычета = ДатаЗаявленияОРаспределенииРасходов;
	КонецЕсли;
	
	Если ПоказыватьДоли Тогда
		СтруктураДанныхДекларации.ДоляВПравеСобственностиЧислитель = ДоляЧислитель;
		СтруктураДанныхДекларации.ДоляВПравеСобственностиЗнаменатель = ДоляЗнаменатель;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НачалоПримененияВычета) Или ВычетПрименяетсяВпервые Тогда
		СтруктураДанныхДекларации.ГодНачалаИспользованияВычета = ДопРеквизитыФормы.ГодОтчета;
	Иначе
		СтруктураДанныхДекларации.ГодНачалаИспользованияВычета = Год(НачалоПримененияВычета);
	КонецЕсли;
	
	СтруктураДанныхДекларации.СуммаРасходовНаПриобретениеНедвижимости = Стоимость + СуммаРасходов;
	
	Если ИспользоватьВычетПоПроцентам Тогда
		СтруктураДанныхДекларации.СуммаПроцентовПоКредитуНаНедвижимость = СуммаПроцентовЗаВсеГоды;
	КонецЕсли;
	
	Если ИспользоватьВычетПоПроцентам И КредитОформленДо2014Года Тогда
		//СтруктураДанныхДекларации.СуммаПроцентовПредоставлено = СуммаПроцентовПредоставлено;
		СтруктураДанныхДекларации.ОстатокНаНачалоПроцентыПоКредитуНаНедвижимость = 0;
	КонецЕсли;
	
	СтруктураДанныхДекларации.ОбъектПриобретенДо2014Года = ОбъектПриобретенДо2014Года();
	СтруктураДанныхДекларации.КредитОформленДо2014Года = КредитОформленДо2014Года;
	
	Возврат СтруктураДанныхДекларации;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция НовыйСтруктураДанныхДекларации()
	
	СтруктураДанныхДекларации = Новый Структура;
	
	ПустаяДата = Дата(1,1,1);
	
	СтруктураДанныхДекларации.Вставить("КодНаименованияОбъектаНедвижимости", "0");
	СтруктураДанныхДекларации.Вставить("ПризнакНалогоплательщикаОбъектаНедвижимости", "0");
	СтруктураДанныхДекларации.Вставить("ФормаСобственности", "0");
	СтруктураДанныхДекларации.Вставить("НалогоплательщикПенсионер", "0");
	СтруктураДанныхДекларации.Вставить("КодНомераОбъектаНедвижимости", "0");
	СтруктураДанныхДекларации.Вставить("КадастровыйНомерОбъектаНедвижимости", "");
	СтруктураДанныхДекларации.Вставить("АдресОбъектаНедвижимости", "");
	СтруктураДанныхДекларации.Вставить("ДатаАктаОПередачеОбъектаНедвижимости", ПустаяДата);
	СтруктураДанныхДекларации.Вставить("ДатаРегистрацииПравСобственностиНаЖилье", ПустаяДата);
	СтруктураДанныхДекларации.Вставить("ДатаРегистрацииПравСобственностиНаЗемлю", ПустаяДата);
	СтруктураДанныхДекларации.Вставить("ДатаЗаявленияОРаспределенииВычета", ПустаяДата);
	СтруктураДанныхДекларации.Вставить("ДоляВПравеСобственностиЧислитель", 1);
	СтруктураДанныхДекларации.Вставить("ДоляВПравеСобственностиЗнаменатель", 1);
	СтруктураДанныхДекларации.Вставить("ГодНачалаИспользованияВычета", 0);
	СтруктураДанныхДекларации.Вставить("СуммаРасходовНаПриобретениеНедвижимости", 0);
	СтруктураДанныхДекларации.Вставить("СуммаПроцентовПоКредитуНаНедвижимость", 0);
	
	// Итоги листа Д1.
	СтруктураДанныхДекларации.Вставить("ОстатокНаНачалоРасходыНаПриобретениеНедвижимости", 0);
	СтруктураДанныхДекларации.Вставить("ОстатокНаНачалоПроцентыПоКредитуНаНедвижимость", 0);
	
	// Временные поля для расчета итогов по данному вычету.
	СтруктураДанныхДекларации.Вставить("ОбъектПриобретенДо2014Года", Ложь);
	СтруктураДанныхДекларации.Вставить("КредитОформленДо2014Года", Ложь);
	СтруктураДанныхДекларации.Вставить("СуммаПроцентовПредоставлено", 0);
	
	Возврат СтруктураДанныхДекларации;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МассивРеквизитовФормы()
	
	Массив = Новый Массив;
	Массив.Добавить("ОбъектНедвижимости");
	Массив.Добавить("ФормаСобственности");
	Массив.Добавить("ЖильеПриобретеноНаВторичномРынке");
	Массив.Добавить("СобственностьСупруга");
	Массив.Добавить("КодНомераОбъекта");
	Массив.Добавить("КадастровыйНомер");
	Массив.Добавить("АдресОбъектаНедвижимости");
	Массив.Добавить("ДатаАктаПередачиПрав");
	Массив.Добавить("ДатаРегистрацииПраваСобственности");
	Массив.Добавить("ДатаРегистрацииПраваНаЗемлю");
	Массив.Добавить("ДатаЗаявленияОРаспределенииРасходов");
	Массив.Добавить("ДоляЧислитель");
	Массив.Добавить("ДоляЗнаменатель");
	Массив.Добавить("НачалоПримененияВычета");
	Массив.Добавить("Стоимость");
	Массив.Добавить("СуммаРасходов");
	Массив.Добавить("СредиСобственниковРебенок");
	Массив.Добавить("ОформленоЗаявлениеОРаспределенииВычета");
	
	Массив.Добавить("ИспользоватьВычетПоПроцентам");
	Массив.Добавить("КредитОформленДо2014Года");
	Массив.Добавить("СуммаПроцентовЗаВсеГоды");
	Массив.Добавить("СуммаПроцентовПредоставлено");
	
	Массив.Добавить("ВычетПрименяетсяВпервые");
	Массив.Добавить("ОстатокНаНачалоГодаПроценты");
	Массив.Добавить("ОстатокНаНачалоГодаСтоимость");
	
	Возврат Массив;
	
КонецФункции

&НаСервере 
Функция ПризнакНалогоплательщика()
	
	КодыНалогоплательщика = КодыПризнакаНалогоплательщика(Декларация3НДФЛВыбраннаяФорма);
	
	Если ЭтоСобственностьРебенка(ФормаСобственности) Тогда
		Возврат КодыНалогоплательщика.Родитель;
	ИначеЕсли СобственностьСупруга Тогда
		Если ЭтоОбщаяДолеваяСобственность(ФормаСобственности) И СредиСобственниковРебенок Тогда
			Возврат КодыНалогоплательщика.СупругСобственникаСРебенком;
		Иначе
			Возврат КодыНалогоплательщика.СупругСобственника;
		КонецЕсли;
	Иначе
		Если ЭтоОбщаяДолеваяСобственность(ФормаСобственности) И СредиСобственниковРебенок Тогда
			Возврат КодыНалогоплательщика.СобственникСРебенком;
		Иначе
			Возврат КодыНалогоплательщика.Собственник;
		КонецЕсли;
	КонецЕсли;
		
КонецФункции

&НаСервереБезКонтекста
Функция КодыПризнакаНалогоплательщика(ВыбраннаяФорма)
	Возврат Отчеты.РегламентированныйОтчет3НДФЛ.КодыПризнакаНалогоплательщикаДляИмущественногоВычета(ВыбраннаяФорма);
КонецФункции

&НаСервере 
Функция ОбъектПриобретенДо2014Года()
	
	Если ЖильеПриобретеноНаВторичномРынке И ДатаРегистрацииПраваСобственности < Дата(2014, 1, 1) Тогда
		Возврат Истина;
	ИначеЕсли НЕ ЖильеПриобретеноНаВторичномРынке И ДатаАктаПередачиПрав < Дата(2014, 1, 1) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоИндивидуальнаяСобственность(ФормаСобственности)
	
	Возврат ФормаСобственности = 1;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоОбщаяДолеваяСобственность(ФормаСобственности)
	
	Возврат ФормаСобственности = 2;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоОбщаяСовместнаяСобственность(ФормаСобственности)
	
	Возврат ФормаСобственности = 3;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоСобственностьРебенка(ФормаСобственности)
	
	Возврат ФормаСобственности = 4;
	
КонецФункции


///////////////////////////////////////////////////////
// Проверка и запись документа

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьДокументКлиент();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	РезультатПроверки = РезультатПроверкиДокумента();
	
	Если РезультатПроверки.БезОшибок Тогда
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(РезультатПроверки.РезультатДляВозврата);
	Иначе
		
		ПоказатьСписокОшибок(РезультатПроверки.СписокОшибок);
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='В документе обнаружены ошибки. Записать документ в текущем состоянии?'");
		
		ДополнительныеПараметры = Новый Структура("РезультатПроверки", РезультатПроверки);
		Оповещение = Новый ОписаниеОповещения("ЗаписатьДокументКлиентЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать с ошибками'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Исправить ошибки'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Закрыть не записывая'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатДляЗаписи()

	СтруктураДокумента = ДопРеквизитыФормы.СтруктураДокумента;
	ЗаполнитьЗначенияСвойств(СтруктураДокумента, ЭтотОбъект, , );
	СтруктураДокумента.Вставить("СтруктураДанныхДекларации", СтруктураДанныхДекларации());
	
	Результат = Новый Структура;
	Результат.Вставить("ВидДокумента", ДопРеквизитыФормы.ВидДокумента);
	Результат.Вставить("СтавкаНалога", 13);
	Результат.Вставить("Представление", СтрШаблон("На приобретение или строительство жилья (%1, %2 руб.)", 
				Элементы.ОбъектНедвижимости.СписокВыбора.НайтиПоЗначению(ОбъектНедвижимости).Представление, Стоимость));
	Результат.Вставить("СтруктураДокумента", СтруктураДокумента);
	Результат.Вставить("СуммаДохода", 0);
	Результат.Вставить("СуммаВычета", СуммаПредполагаемогоВычета());

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РезультатПроверкиДокумента()

	Результат = Новый Структура();
	Результат.Вставить("РезультатДляВозврата", РезультатДляЗаписи());
	
	Результат.Вставить("СписокОшибок", Новый Массив);
	Результат.Вставить("БезОшибок", Обработки.ПомощникЗаполнения3НДФЛ.ДокументНеСодержитОшибок(
			ДопРеквизитыФормы.ВидДокумента, ДопРеквизитыФормы.ГодОтчета, Результат.РезультатДляВозврата.СтруктураДокумента, Результат.СписокОшибок, Неопределено));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ЗаписатьДокументКлиентЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(ДополнительныеПараметры.РезультатПроверки.РезультатДляВозврата);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультатВПомощник(Результат = Неопределено)

	Если Результат = Неопределено Тогда
		Результат = РезультатДляЗаписи();
	КонецЕсли;
	
	Закрыть(Результат);

КонецПроцедуры

&НаСервере
Функция СуммаПредполагаемогоВычета()

	Результат = Мин(2000000, Стоимость + СуммаРасходов);
	Если ИспользоватьВычетПоПроцентам Тогда
		Результат = Результат + ?(КредитОформленДо2014Года, СуммаПроцентовЗаВсеГоды, Мин(СуммаПроцентовЗаВсеГоды, 3000000));
	КонецЕсли;

	Возврат Результат;
	
КонецФункции
 

#КонецОбласти


