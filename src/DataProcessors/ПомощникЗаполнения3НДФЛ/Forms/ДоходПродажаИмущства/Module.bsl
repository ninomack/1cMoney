////////////////////////////////////////////////////////////////////////////////
//Отчет.РегламентированныйОтчет3НДФЛ.Форма.ДоходПродажаНедвижимости
//  Заполнение информации о выручке от продажи недвижимости
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Конвертация параметров формы в значения ДропРеквизитов формы
	Обработки.ПомощникЗаполнения3НДФЛ.ЗаполнитьДопРеквизитыФормыДокументаПомощника(ЭтотОбъект);
	Параметры.Свойство("Декларация3НДФЛВыбраннаяФорма", Декларация3НДФЛВыбраннаяФорма);
	
	// Чтение структуры документа
	СтрукураДокументаНаСервере = Обработки.ПомощникЗаполнения3НДФЛ.СтруктураДокументаСТаблицамиИзХранилищ(ДопРеквизитыФормы.СтруктураДокумента);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрукураДокументаНаСервере, ,);
	ВидВычета = ?(СтрукураДокументаНаСервере.РасходыПодтвержденыДокументами, "Расходы", "Норматив");
	
	Если ВидИмущества = "Автомобиль" Или ВидИмущества = "Прочее" Тогда
		
		Элементы.ВидИмущества.СписокВыбора.Очистить();
		Элементы.ВидИмущества.СписокВыбора.Добавить(ВидИмущества, ?(ВидИмущества = "Автомобиль", "Автотранспорт", "Прочее имущество"));
		Элементы.ВидИмущества.Доступность = Ложь;
		Заголовок = ОписаниеОперацииПоВидуИмущества(ВидИмущества);
		
		Элементы.ГруппаПриобретениеИмушества.Видимость = Ложь;
		ГодПриобретения = 2018;

	Иначе
		
		Элементы.ВидИмущества.Доступность = Истина;
		Заголовок = НСтр("ru='Продажа недвижимости'");
		
		КадастроваяСтоимостьИтого = КадастроваяСтоимость * ПонижающийКоэффициент;
		НалоговаяБазаИтого = Макс(КадастроваяСтоимостьИтого, СуммаДохода);
		
	КонецЕсли;
	
	Если СтрНайти(Декларация3НДФЛВыбраннаяФорма, "2018") = 0 Тогда
		Элементы.ВидКонтрагента.СписокВыбора.Добавить(0, "Неизвестен");
	Иначе
		Если ВидКонтрагента = 0 Тогда
			ВидКонтрагента = ?(СтрДлина(ИНН) = 10, 1, 2);
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	УстановитьКлючСохраненияПоложенияОкна(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДопРеквизитыФормы.СписокОшибок <> Неопределено Тогда
		// Если форма открывается из списка собщений помощника заполнения, в параметрах будет передан массив "СписокОшибок"
		ПоказатьСписокОшибок(ДопРеквизитыФормы.СписокОшибок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьКлючСохраненияПоложенияОкна(ЭтотОбъект);
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='Записать изменения перед закрытием этой формы?'");
		
		ДополнительныеПараметры = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Закрыть без записи'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить закрытие'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	Если ВидКонтрагента = 0 Тогда
		Наименование = "";
	КонецЕсли;
	Если ВидКонтрагента <> 1 Тогда
		ИНН   = "";
		КПП   = "";
		ОКТМО = "";
	КонецЕсли;
	УстановитьВидимостьПолейКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидИмуществаПриИзменении(Элемент)
	
	УстановитьСписокСпособовПриобретения(ЭтотОбъект);
	Если Элементы.СпособПриобретения.СписокВыбора.НайтиПоЗначению(СпособПриобретения) = Неопределено Тогда
		СпособПриобретения = "Покупка";
	КонецЕсли;
	Если ВидИмущества = "Стройка" Тогда
		ВидВычета = "Расходы";
	Иначе
		ВидВычета = "Норматив";
	КонецЕсли;
	ОбновитьПодсказкуМинимальногоСрока(ЭтотОбъект);
	УстановитьВидимостьДоли(ЭтотОбъект);
	УстановитьВидВычета(ЭтотОбъект);
	ОбновитьИнформациюОВычете(ЭтотОбъект);
	УстановитьКлючСохраненияПоложенияОкна(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ГодПриобретенияПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ГодПриобретения) Тогда
		ГодПриобретения = 2019 - МинимальныйСрок;
	КонецЕсли;
	
	ОбновитьПодсказкуМинимальногоСрока(ЭтотОбъект);
	УстановитьВидимостьИнформацияИзКадастра(ЭтотОбъект);
	ОбновитьИнформациюОВычете(ЭтотОбъект);
	УстановитьВидВычета(ЭтотОбъект);
	
	Если ГодПриобретения >= 2016 Тогда
		УстановитьТекстНалоговаяБаза(ЭтотОбъект);
	КонецЕсли;
	УстановитьКлючСохраненияПоложенияОкна(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПриобретенияПриИзменении(Элемент)
	
	Если СпособПриобретения = "" Тогда
		СпособПриобретения = "Покупка";
	КонецЕсли;
	
	Если СпособПриобретения <> "Покупка" И ВидВычета <> "Норматив" Тогда
		ВидВычета   = "Норматив";
		СуммаВычета = 0;
	КонецЕсли;
	
	ОбновитьПодсказкуМинимальногоСрока(ЭтотОбъект);
	ОбновитьИнформациюОВычете(ЭтотОбъект);
	УстановитьВидВычета(ЭтотОбъект);
	
	Если ГодПриобретения >= 2016 Тогда
		УстановитьТекстНалоговаяБаза(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоляЧислительПриИзменении(Элемент)
	Если ДоляЧислитель = 0 Тогда
		ДоляЧислитель = 1;
	КонецЕсли;
	ОбновитьИнформациюОВычете(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДоляЗнаменательПриИзменении(Элемент)
	Если ДоляЗнаменатель = 0 Тогда
		ДоляЗнаменатель = 2;
	КонецЕсли;
	ОбновитьИнформациюОВычете(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПроданаТолькоЭтаДоляПриИзменении(Элемент)
	ОбновитьИнформациюОВычете(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КадастроваяСтоимостьПриИзменении(Элемент)
	
	УстановитьТекстНалоговаяБаза(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПонижающийКоэффициентПриИзменении(Элемент)
	
	УстановитьТекстНалоговаяБаза(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДоходаПриИзменении(Элемент)
	
	Если ГодПриобретения >= 2016 Тогда
		УстановитьТекстНалоговаяБаза(ЭтотОбъект);
	КонецЕсли;
	Если ВидВычета = "Расходы" Тогда
		СуммаВычета = Мин(СуммаДохода, СуммаВычета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидВычетаПриИзменении(Элемент)
	
	Если ВидВычета = "Норматив" Тогда
		СуммаВычета = 0;
	КонецЕсли;
	
	УстановитьВидВычета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВычетаПриИзменении(Элемент)
	
	СуммаВычета = Мин(СуммаДохода, СуммаВычета);
	
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКлючСохраненияПоложенияОкна(Форма)
	
	НедвижимостьПолученаВСобственностьПосле01012016 = Форма.ГодПриобретения >= 2016
		И (Форма.ВидИмущества = "Жилая" ИЛИ Форма.ВидИмущества = "Доля" ИЛИ Форма.ВидИмущества = "ПрочаяНедвижимость");
	ИмяКлюча = Форма.ВидИмущества + ?(НедвижимостьПолученаВСобственностьПосле01012016, ".После2016", ".До2016")
			+ ?(ЗначениеЗаполнено(Форма.ГодПриобретения) И ЗначениеЗаполнено(Форма.МинимальныйСрок) И 2018 - Форма.ГодПриобретения > Форма.МинимальныйСрок, ".СрокПревышен", ".БезСрока");
			
	Форма.КлючСохраненияПоложенияОкна = ИмяКлюча;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РазмерИмущественногоВычета(Знач ВидИмущества, ДоляЧислитель, ДоляЗнаменатель)
	
	Если ВидИмущества = "Жилая" ИЛИ ВидИмущества = "Доля" Тогда
		
		РазмерИмущественногоВычета = 1000000;
		Если ВидИмущества = "Доля" Тогда
			РазмерИмущественногоВычета = РазмерИмущественногоВычета * ДоляЧислитель / ДоляЗнаменатель;
		КонецЕсли;
		
	ИначеЕсли ВидИмущества = "Автомобиль" ИЛИ ВидИмущества = "ПрочаяНедвижимость" ИЛИ ВидИмущества = "Прочее" Тогда
		РазмерИмущественногоВычета = 250000;
	ИначеЕсли ВидИмущества = "Стройка" Тогда
		РазмерИмущественногоВычета = 0;
	Иначе
		РазмерИмущественногоВычета = 250000;
	КонецЕсли;
	
	Возврат РазмерИмущественногоВычета;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	УстановитьСписокСпособовПриобретения(Форма);
	ОбновитьПодсказкуМинимальногоСрока(Форма);
	УстановитьВидимостьИнформацияИзКадастра(Форма);
	УстановитьВидимостьДоли(Форма);
	УстановитьВидВычета(Форма);
	ОбновитьИнформациюОВычете(Форма);
	УстановитьТекстНалоговаяБаза(Форма);
	УстановитьВидимостьПолейКонтрагента(Форма);
	
	// Установим представление имущественного вычета.
	СуммаИмущественногоВычета = РазмерИмущественногоВычета(Форма.ВидИмущества, Форма.ДоляЧислитель, Форма.ДоляЗнаменатель);
	Если Форма.ВидИмущества = "Доля" И НЕ Форма.ПроданаТолькоЭтаДоля И Форма.ДоляЗнаменатель <> 0 Тогда
		СуммаИмущественногоВычета = Окр(СуммаИмущественногоВычета * Форма.ДоляЧислитель / Форма.ДоляЗнаменатель, 2);
	КонецЕсли;
	Элементы.ВидВычета.СписокВыбора[0].Представление = СтрШаблон(НСтр("ru='%1 рублей'"), СуммаИмущественногоВычета);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСписокСпособовПриобретения(Форма)

	Форма.Элементы.СпособПриобретения.СписокВыбора.Очистить();
	Форма.Элементы.СпособПриобретения.СписокВыбора.Добавить("Покупка", НСтр("ru='Покупка'"));
	Если Форма.ВидИмущества = "Жилая" ИЛИ Форма.ВидИмущества = "Доля" ИЛИ Форма.ВидИмущества = "ПрочаяНедвижимость" Тогда
		Форма.Элементы.СпособПриобретения.СписокВыбора.Добавить("Приватизация", НСтр("ru='Приватизация недвижимости'"));
		Форма.Элементы.СпособПриобретения.СписокВыбора.Добавить("ПожизненноеСодержание", НСтр("ru='По договору пожизненного содержания иждивенца'"));
	КонецЕсли;
	Форма.Элементы.СпособПриобретения.СписокВыбора.Добавить("Наследование", НСтр("ru='Наследование или дарение от близких родственников'"));

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодсказкуМинимальногоСрока(Форма)

	Элементы = Форма.Элементы;
	
	Форма.МинимальныйСрок = 0;
	Если Форма.ВидИмущества = "Жилая" ИЛИ Форма.ВидИмущества = "Доля" ИЛИ Форма.ВидИмущества = "ПрочаяНедвижимость" Тогда
		Форма.МинимальныйСрок = ?(Форма.СпособПриобретения = "Покупка", 5, 3);
	ИначеЕсли Форма.ВидИмущества = "Стройка" Тогда 
		Форма.МинимальныйСрок = 0;
	Иначе
		Форма.МинимальныйСрок = 3;
	КонецЕсли;
	
	Элементы.ПодсказкаМинимальныйСрокВладенияНедвижимость.Видимость = Ложь;
	Элементы.ПодсказкаМинимальныйСрокВладенияСтройка.Видимость = Ложь;
	Элементы.ПодсказкаМинимальныйСрокВладенияАвтомобиль.Видимость = Ложь;
	Элементы.ПодсказкаМинимальныйСрокВладенияПрочееИмущество.Видимость = Ложь;
	Элементы.ПодсказкаМинимальныйСрокВладенияДоляУставногоКапитала.Видимость = Ложь;
	
	Если (Форма.ВидИмущества = "Жилая" ИЛИ Форма.ВидИмущества = "Доля" ИЛИ Форма.ВидИмущества = "ПрочаяНедвижимость") Тогда
		Элементы.ПодсказкаМинимальныйСрокВладенияНедвижимость.Видимость = Истина;
	ИначеЕсли Форма.ВидИмущества = "Стройка" Тогда
		Элементы.ПодсказкаМинимальныйСрокВладенияСтройка.Видимость = Истина;
	ИначеЕсли Форма.ВидИмущества = "Автомобиль" Тогда
		Элементы.ПодсказкаМинимальныйСрокВладенияАвтомобиль.Видимость = Истина;
	ИначеЕсли Форма.ВидИмущества = "ДоляУставногоКапитала" Тогда
		Элементы.ПодсказкаМинимальныйСрокВладенияДоляУставногоКапитала.Видимость = Истина;
	Иначе
		Элементы.ПодсказкаМинимальныйСрокВладенияПрочееИмущество.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьИнформацияИзКадастра(Форма)
	
	Элементы = Форма.Элементы;
	НедвижимостьПолученаВСобственностьПосле01012016 = Форма.ГодПриобретения >= 2016
		И (Форма.ВидИмущества = "Жилая" ИЛИ Форма.ВидИмущества = "Доля" ИЛИ Форма.ВидИмущества = "ПрочаяНедвижимость");
	
	Элементы.ДекорацияИнформацияИзКадастра.Видимость   = НедвижимостьПолученаВСобственностьПосле01012016;
	Элементы.КадастровыйНомер.Видимость                = НедвижимостьПолученаВСобственностьПосле01012016;
	Элементы.ПонижающийКоэффициент.Видимость           = НедвижимостьПолученаВСобственностьПосле01012016;
	Элементы.КадастроваяСтоимость.Видимость            = НедвижимостьПолученаВСобственностьПосле01012016;
	Элементы.ТекстКадастроваяСтоимостьИтого.Видимость  = НедвижимостьПолученаВСобственностьПосле01012016;
	Элементы.ТекстРасчетНалоговойБазы.Видимость        = НедвижимостьПолученаВСобственностьПосле01012016;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстНалоговаяБаза(Форма)
	
	Элементы = Форма.Элементы;
	
	КадастроваяСтоимостьИтого = Форма.КадастроваяСтоимость * Форма.ПонижающийКоэффициент;
	НалоговаяБазаИтого = Макс(КадастроваяСтоимостьИтого, Форма.СуммаДохода);
	Если Форма.СуммаДохода = 0 Тогда
		Форма.ТекстРасчетНалоговойБазы = НСтр("ru='Налоговая база не определена.
			|Укажите сумму продажи недвижимости по договору купли-продажи.'");
		ТекстЗаголовкаГруппы = НСтр("ru='Налоговая база не определена'");
	ИначеЕсли КадастроваяСтоимостьИтого = 0 Тогда
		Форма.ТекстРасчетНалоговойБазы = СтрШаблон(НСтр("ru='Налоговая база составляет %1
			|и определяется по сумме продажи недвижимости по договору купли-продажи.'"),
				СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(НалоговаяБазаИтого, "рубль, рубля, рублей"));
		ТекстЗаголовкаГруппы = СтрШаблон(НСтр("ru='Налоговая база: %1'"),
			СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(НалоговаяБазаИтого, "рубль, рубля, рублей"));
	Иначе
		ШаблонПодсказки = НСтр("ru='Налоговая база составляет %1 и определяется по большей из двух сумм:
			|- %2 - стоимость продажи по договору купли-продажи;
			|- %3 - кадастровая стоимость, умноженная на понижающий коэффициент.'");
		Форма.ТекстРасчетНалоговойБазы = СтрШаблон(ШаблонПодсказки,
			СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(НалоговаяБазаИтого, "рубль, рубля, рублей"),
			СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(Форма.СуммаДохода, "рубль, рубля, рублей"),
			СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КадастроваяСтоимостьИтого, "рубль, рубля, рублей"));
		ТекстЗаголовкаГруппы = СтрШаблон(НСтр("ru='Налоговая база: %1'"),
			СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(НалоговаяБазаИтого, "рубль, рубля, рублей"));
	КонецЕсли;
		
	Элементы.ГруппаНалоговаяБаза.ЗаголовокСвернутогоОтображения = ТекстЗаголовкаГруппы;
	
	Если КадастроваяСтоимостьИтого = 0 Тогда
		Форма.ТекстКадастроваяСтоимостьИтого = НСтр("ru='Кадастровая стоимость не указана.'")
	Иначе
		Форма.ТекстКадастроваяСтоимостьИтого = СтрШаблон(НСтр("ru='Кадастровая стоимость, умноженная на понижающий коэффициент %1.'"),
			СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КадастроваяСтоимостьИтого, "рубль, рубля, рублей"));
	КонецЕсли;
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидВычета(Форма)
	
	Элементы = Форма.Элементы;
	
	СрокПревышен = ЗначениеЗаполнено(Форма.ГодПриобретения) И ЗначениеЗаполнено(Форма.МинимальныйСрок) И 2018 - Форма.ГодПриобретения > Форма.МинимальныйСрок;
	
	Элементы.СуммаДохода.Видимость = Не СрокПревышен;
	Элементы.ВидВычета.Видимость   = НЕ СрокПревышен И НЕ Форма.ВидИмущества = "Стройка";
	Элементы.ВидВычета.Доступность = Форма.СпособПриобретения = "Покупка";
	Элементы.СуммаВычета.Видимость = НЕ (Форма.ВидВычета = "Норматив" И НЕ Форма.ВидИмущества = "Стройка");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИнформациюОВычете(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.ТекстДополнительныйИмущественныйВычет.Видимость = Ложь;
	
	Если ЗначениеЗаполнено(Форма.ГодПриобретения) И ЗначениеЗаполнено(Форма.МинимальныйСрок) И 2018 - Форма.ГодПриобретения > Форма.МинимальныйСрок Тогда
		
		Форма.ТекстИмущественныйВычет = 
			НСтр("ru='Доход от продажи имущества, находившегося в собственности боле установленного срока, налогом не облагается.'");
		Возврат;
		
	КонецЕсли;
	
	// Имущественный вычет.
	ТекстДополнительныйИмущественныйВычет = "";
	Если Форма.ВидИмущества = "Стройка" Тогда
		
		Форма.ТекстИмущественныйВычет = 
			НСтр("ru='Доход от продажи уменьшается на подтвержденную документами сумму расходов
			|по приобретению и строительству недвижимости.'");
		
	Иначе
		
		СуммаИмущественногоВычета = РазмерИмущественногоВычета(Форма.ВидИмущества, Форма.ДоляЧислитель, Форма.ДоляЗнаменатель);
		
		Если Форма.ВидИмущества = "Доля" И НЕ Форма.ПроданаТолькоЭтаДоля И Форма.ДоляЗнаменатель <> 0 И Форма.ДоляЧислитель < Форма.ДоляЗнаменатель Тогда
			
			СуммаИмущественногоВычета = Окр(СуммаИмущественногоВычета * Форма.ДоляЧислитель / Форма.ДоляЗнаменатель, 2);
			Форма.ТекстДополнительныйИмущественныйВычет = СтрШаблон(НСтр("ru='Имущественный вычет рассчитывается по доле от %1 рублей.'"), СуммаИмущественногоВычета);
			Элементы.ТекстДополнительныйИмущественныйВычет.Видимость = Истина;
			
		КонецЕсли;
		
		ВычетСтрокой = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(СуммаИмущественногоВычета, "рубль, рубля, рублей");
		Форма.ТекстИмущественныйВычет = СтрШаблон(НСтр("ru='Доход от продажи можно уменьшить на имущественный вычет %1*
			|или на сумму расходов по приобретению, подтвержденных документами.'"), ВычетСтрокой);
			
		Форма.ТекстДополнительныйИмущественныйВычет = СтрШаблон(НСтр("ru='* сумма %1 - это общий размер вычета от продажи всех объектов аналогичного имущества'"), ВычетСтрокой);
		Элементы.ТекстДополнительныйИмущественныйВычет.Видимость = Истина;
		Элементы.ВидВычета.СписокВыбора[0].Представление = СтрШаблон(НСтр("ru='%1 рублей'"), СуммаИмущественногоВычета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоли(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоДоля = (Форма.ВидИмущества = "Доля");
	Элементы.ДоляЧислитель.Видимость            = ЭтоДоля;
	Элементы.ДекорацияДоляЗнаменатель.Видимость = ЭтоДоля;
	Элементы.ДоляЗнаменатель.Видимость          = ЭтоДоля;
	Элементы.ПроданаТолькоЭтаДоля.Видимость     = ЭтоДоля;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокОшибок(СписокОшибок)

	ОчиститьСообщения();
	Для каждого Ошибка Из СписокОшибок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст  = Ошибка.ОписаниеОшибки;
		Сообщение.Поле   = Ошибка.ИмяРеквизита;
		Сообщение.Сообщить(); 
		
	КонецЦикла;

КонецПроцедуры



///////////////////////////////////////////////////////
// Проверка и запись документа

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьДокументКлиент();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	РезультатПроверки = РезультатПроверкиДокумента();
	
	Если РезультатПроверки.БезОшибок Тогда
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(РезультатПроверки.РезультатДляВозврата);
	Иначе
		
		ПоказатьСписокОшибок(РезультатПроверки.СписокОшибок);
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='В документе обнаружены ошибки. Записать документ в текущем состоянии?'");
		
		ДополнительныеПараметры = Новый Структура("РезультатПроверки", РезультатПроверки);
		Оповещение = Новый ОписаниеОповещения("ЗаписатьДокументКлиентЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать с ошибками'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Исправить ошибки'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Закрыть не записывая'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатДляЗаписи()

	СтруктураДокумента = ДопРеквизитыФормы.СтруктураДокумента;
	ЗаполнитьЗначенияСвойств(СтруктураДокумента, ЭтотОбъект, , );
	СтруктураДокумента.РасходыПодтвержденыДокументами = ВидВычета = "Расходы";
	Если ВидКонтрагента = 0 Тогда
		СтруктураДокумента.Наименование = ОписаниеОперацииПоВидуИмущества(ВидИмущества);
	КонецЕсли;
	
	СтруктураДокумента.НедвижимостьПриобретенаПосле01012016 = ГодПриобретения >= 2016;
	КадастроваяСтоимостьИтого = КадастроваяСтоимость * ПонижающийКоэффициент;
	Если СтруктураДокумента.НедвижимостьПриобретенаПосле01012016 Тогда
		ДоходОпределенПоСуммеДоговора = (Макс(СуммаДохода, КадастроваяСтоимостьИтого) = СуммаДохода);
	Иначе
		ДоходОпределенПоСуммеДоговора = Истина;
	КонецЕсли;
	
	Если ВидИмущества = "Автомобиль" Или ВидИмущества = "Прочее" Тогда
		СтруктураДокумента.Вставить("КадастроваяСтоимость",      0);
		СтруктураДокумента.Вставить("КадастроваяСтоимостьИтого", 0);
		СтруктураДокумента.Вставить("НалоговаяБазаИтого",        0);
	Иначе
		НалоговаяБазаИтого = Макс(КадастроваяСтоимостьИтого, СуммаДохода);
		СтруктураДокумента.Вставить("КадастроваяСтоимость", КадастроваяСтоимость);
		СтруктураДокумента.Вставить("КадастроваяСтоимостьИтого", КадастроваяСтоимостьИтого);
		СтруктураДокумента.Вставить("НалоговаяБазаИтого",        НалоговаяБазаИтого);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ВидДокумента",       ДопРеквизитыФормы.ВидДокумента);
	Результат.Вставить("СтавкаНалога",       13);
	Результат.Вставить("Представление",      ОписаниеОперацииПоВидуИмущества(ВидИмущества));
	Результат.Вставить("СтруктураДокумента", СтруктураДокумента);
	Результат.Вставить("СуммаДохода",        СуммаДохода);
	Результат.Вставить("ГодПриобретения",    ГодПриобретения);
	Результат.Вставить("КодВидаДохода",      КодВидаДоходаПоВидуПроданногоИмущества(ДоходОпределенПоСуммеДоговора));
	
	Если ВидВычета = "Норматив" И ВидИмущества <> "Стройка" Тогда
		Результат.Вставить("СуммаВычета", РазмерИмущественногоВычета(ВидИмущества, ДоляЧислитель, ДоляЗнаменатель));
	Иначе
		Результат.Вставить("СуммаВычета", СуммаВычета);
	КонецЕсли;
	СтруктураДокумента.СуммаВычета = Результат.СуммаВычета;

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КодВидаДоходаПоВидуПроданногоИмущества(ДоходОпределенПоСуммеДоговора)
	
	КодыВидовДоходовРФ = Отчеты.РегламентированныйОтчет3НДФЛ.КодыВидовДоходовРФ(Декларация3НДФЛВыбраннаяФорма);
	
	Если (ВидИмущества = "Жилая" Или ВидИмущества = "Доля") И ДоходОпределенПоСуммеДоговора Тогда
		
		КодВидаДоходаРФ = КодыВидовДоходовРФ.ПродажаНедвижимости;
		
	ИначеЕсли (ВидИмущества = "Жилая" Или ВидИмущества = "Доля") И Не ДоходОпределенПоСуммеДоговора Тогда
		
		КодВидаДоходаРФ = КодыВидовДоходовРФ.ПродажаНедвижимостиПоКадастровойСтоимости;
		
	ИначеЕсли ВидИмущества = "ПрочаяНедвижимость" И ДоходОпределенПоСуммеДоговора Тогда
		
		КодВидаДоходаРФ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			КодыВидовДоходовРФ, "ПродажаНежилойНедвижимости",
			КодыВидовДоходовРФ.ПродажаНедвижимости);
		
	ИначеЕсли ВидИмущества = "ПрочаяНедвижимость" И Не ДоходОпределенПоСуммеДоговора Тогда
		
		КодВидаДоходаРФ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			КодыВидовДоходовРФ,
			"ПродажаНежилойНедвижимостиПоКадастровойСтоимости",
			КодыВидовДоходовРФ.ПродажаНедвижимостиПоКадастровойСтоимости);
		
	ИначеЕсли ВидИмущества = "ДолевоеСтроительство" Или ВидИмущества = "ДоляУставногоКапитала" Тогда
		
		КодВидаДоходаРФ = КодыВидовДоходовРФ.ИнойДоходОтИсточникаРФ;
		
	ИначеЕсли ВидИмущества = "Автомобиль" Тогда
		
		КодВидаДоходаРФ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			КодыВидовДоходовРФ,
			"ПродажаТранспортныхСредств",
			КодыВидовДоходовРФ.ПродажаИмущества);
		
	Иначе
		КодВидаДоходаРФ = КодыВидовДоходовРФ.ПродажаИмущества;
	КонецЕсли;
	
	Возврат КодВидаДоходаРФ;
	
КонецФункции


&НаСервере
Функция РезультатПроверкиДокумента()

	Результат = Новый Структура();
	Результат.Вставить("РезультатДляВозврата", РезультатДляЗаписи());
	
	Результат.Вставить("СписокОшибок", Новый Массив);
	Результат.Вставить("БезОшибок", Обработки.ПомощникЗаполнения3НДФЛ.ДокументНеСодержитОшибок(
			ДопРеквизитыФормы.ВидДокумента, ДопРеквизитыФормы.ГодОтчета, Результат.РезультатДляВозврата.СтруктураДокумента, Результат.СписокОшибок, Неопределено));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ЗаписатьДокументКлиентЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(ДополнительныеПараметры.РезультатПроверки.РезультатДляВозврата);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультатВПомощник(Результат = Неопределено)

	Если Результат = Неопределено Тогда
		Результат = РезультатДляЗаписи();
	КонецЕсли;
	
	Закрыть(Результат);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПолейКонтрагента(Форма)

	Форма.Элементы.ГруппаИННКПП.Видимость = Форма.ВидКонтрагента = 1;
	Форма.Элементы.ГруппаНаименованиеОКТМО.Видимость = Форма.ВидКонтрагента >= 1;

КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеОперацииПоВидуИмущества(ВидИмущества)
	
	Если ВидИмущества = "Жилая" Тогда
		Возврат НСтр("ru = 'Продажа жилой недвижимости'");
	ИначеЕсли ВидИмущества = "Доля" Тогда
		Возврат НСтр("ru = 'Продажа доли в недвижимости'");
	ИначеЕсли ВидИмущества = "Автомобиль" Тогда
		Возврат НСтр("ru = 'Продажа автомобиля'");
	ИначеЕсли ВидИмущества = "ПрочаяНедвижимость" Тогда
		Возврат НСтр("ru = 'Продажа прочей недвижимости'");
	ИначеЕсли ВидИмущества = "ДолевоеСтроительство" Или ВидИмущества = "Стройка" Тогда
		Возврат НСтр("ru = 'Уступка прав при долевом строительстве'");
	ИначеЕсли ВидИмущества = "ДоляУставногоКапитала" Тогда
		Возврат НСтр("ru = 'Продажа доли в уставном капитале'");
	Иначе
		Возврат НСтр("ru = 'Продажа прочего имущества'");
	КонецЕсли;
	
КонецФункции



#КонецОбласти


