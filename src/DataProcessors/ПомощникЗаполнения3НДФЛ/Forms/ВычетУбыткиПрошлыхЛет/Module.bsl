////////////////////////////////////////////////////////////////////////////////
//Отчет.РегламентированныйОтчет3НДФЛ.Форма.ВычетИИС
//  Указание вычета по индивидуальному инвестиционному счету
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Конвертация параметров формы в значения ДропРеквизитов формы
	Обработки.ПомощникЗаполнения3НДФЛ.ЗаполнитьДопРеквизитыФормыДокументаПомощника(ЭтотОбъект);
	Параметры.Свойство("Декларация3НДФЛВыбраннаяФорма", Декларация3НДФЛВыбраннаяФорма);
	
	Если СтрНайти(Декларация3НДФЛВыбраннаяФорма, "2018") > 0 Тогда
		Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы.СтраницаСписокЛет;
		Элементы.ПодсказкаКОстаткам.Заголовок = ЗаголовокПодсказкиКОстаткам(Период, ГодУбытка);
	Иначе
		Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы.СтраницаСуммы;
		Элементы.ПодсказкаКОстаткам.Видимость = Ложь;
	КонецЕсли;
	
	// Чтение структуры документа
	СтрукураДокументаНаСервере = Обработки.ПомощникЗаполнения3НДФЛ.СтруктураДокументаСТаблицамиИзХранилищ(ДопРеквизитыФормы.СтруктураДокумента);
	Если СтрукураДокументаНаСервере.Свойство("ТабличнаяЧасть") И ЗначениеЗаполнено(СтрукураДокументаНаСервере.ТабличнаяЧасть) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрукураДокументаНаСервере, ,"ТабличнаяЧасть");
		ТабличнаяЧасть.Загрузить(СтрукураДокументаНаСервере.ТабличнаяЧасть);
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрукураДокументаНаСервере);
	КонецЕсли;
	
	Если ГодУбытка = 0 Тогда
		ГодУбытка = ГодУбыткаПоУмолчанию(Период, ИИС);
	КонецЕсли;
	
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДопРеквизитыФормы.СписокОшибок <> Неопределено Тогда
		// Если форма открывается из списка собщений помощника заполнения, в параметрах будет передан массив "СписокОшибок"
		ПоказатьСписокОшибок(ДопРеквизитыФормы.СписокОшибок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='Записать изменения перед закрытием этой формы?'");
		
		ДополнительныеПараметры = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Закрыть без записи'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить закрытие'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИИСПриИзменении(Элемент)
	ПерезаполнитьТаблицуУбытковСервер();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	Элемент.ТекущиеДанные.УбытокПоЦеннымБумагам = 0;
	Элемент.ТекущиеДанные.УбытокПоФинансовымИнстументам = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокОшибок(СписокОшибок)

	ОчиститьСообщения();
	Для каждого Ошибка Из СписокОшибок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст  = Ошибка.ОписаниеОшибки;
		Сообщение.Поле   = Ошибка.ИмяРеквизита;
		Сообщение.Сообщить(); 
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьТаблицуУбытковСервер()

	ПерезаполнитьТаблицуУбытков(ЭтотОбъект);

КонецПроцедуры
 
&НаСервереБезКонтекста
Процедура ПерезаполнитьТаблицуУбытков(Форма)

	КопияТаблицы = Форма.ТабличнаяЧасть.Выгрузить();
	Форма.ТабличнаяЧасть.Очистить();
	
	СтруктураДокумента = Обработки.ПомощникЗаполнения3НДФЛ.НоваяСтруктураДокументаДоходаВычета(
						Форма.ДопРеквизитыФормы.ВидДокумента, Форма.ДопРеквизитыФормы.мВыбраннаяФорма, Форма.ИИС, Ложь);
	Форма.ТабличнаяЧасть.Загрузить(СтруктураДокумента.ТабличнаяЧасть);
	
	Для каждого СтрокаТЧ Из Форма.ТабличнаяЧасть Цикл
		СтрокаКопии = КопияТаблицы.Найти(СтрокаТЧ.Год, "Год");
		Если СтрокаКопии <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаКопии, "УбытокПоЦеннымБумагам,УбытокПоФинансовымИнстументам");
		КонецЕсли;
	КонецЦикла;
	 

КонецПроцедуры
 

///////////////////////////////////////////////////////
// Проверка и запись документа

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьДокументКлиент();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	РезультатПроверки = РезультатПроверкиДокумента();
	
	Если РезультатПроверки.БезОшибок Тогда
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(РезультатПроверки.РезультатДляВозврата);
	Иначе
		
		ПоказатьСписокОшибок(РезультатПроверки.СписокОшибок);
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='В документе обнаружены ошибки. Записать документ в текущем состоянии?'");
		
		ДополнительныеПараметры = Новый Структура("РезультатПроверки", РезультатПроверки);
		Оповещение = Новый ОписаниеОповещения("ЗаписатьДокументКлиентЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать с ошибками'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Исправить ошибки'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Закрыть не записывая'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатДляЗаписи()

	Если ОстатокУбыткаЦБ <> 0 Или ОстатокУбыткаПФИ <> 0 Тогда
		СуммаВычета = ОстатокУбыткаЦБ + ОстатокУбыткаПФИ;
	Иначе
		СуммаВычета = ТабличнаяЧасть.Итог("УбытокПоЦеннымБумагам") + ТабличнаяЧасть.Итог("УбытокПоФинансовымИнстументам");
	КонецЕсли;
	
	СтруктураДокумента = ДопРеквизитыФормы.СтруктураДокумента;
	ЗаполнитьЗначенияСвойств(СтруктураДокумента, ЭтотОбъект, , "ТабличнаяЧасть");
	СтруктураДокумента.Вставить("ТабличнаяЧасть", Новый ХранилищеЗначения(ТабличнаяЧасть.Выгрузить()));
	
	Результат = Новый Структура;
	Результат.Вставить("ВидДокумента", ДопРеквизитыФормы.ВидДокумента);
	Результат.Вставить("СтавкаНалога", 13);
	Результат.Вставить("Представление", СтрШаблон("Убытки прошлых лет (%1)", ?(ИИС, "ИИС", "брок.счет")));
	Результат.Вставить("СтруктураДокумента", СтруктураДокумента);
	Результат.Вставить("СуммаДохода", 0);
	Результат.Вставить("СуммаВычета", СуммаВычета);

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РезультатПроверкиДокумента()

	Результат = Новый Структура();
	Результат.Вставить("РезультатДляВозврата", РезультатДляЗаписи());
	
	Результат.Вставить("СписокОшибок", Новый Массив);
	Результат.Вставить("БезОшибок", Обработки.ПомощникЗаполнения3НДФЛ.ДокументНеСодержитОшибок(
			ДопРеквизитыФормы.ВидДокумента, ДопРеквизитыФормы.ГодОтчета, Результат.РезультатДляВозврата.СтруктураДокумента, Результат.СписокОшибок, Неопределено));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ЗаписатьДокументКлиентЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(ДополнительныеПараметры.РезультатПроверки.РезультатДляВозврата);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультатВПомощник(Результат = Неопределено)

	Если Результат = Неопределено Тогда
		Результат = РезультатДляЗаписи();
	КонецЕсли;
	
	Закрыть(Результат);

КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция ГодУбыткаПоУмолчанию(ОтчетныйПериод, ВидИнвестиционногоСчета)
	
	ГодУбыткаПоУмолчанию = Год(ОтчетныйПериод) - 1;
	
	Возврат Макс(ГодУбыткаПоУмолчанию, ПервыйГодКогдаМожноЗачестьУбытки(ОтчетныйПериод, ВидИнвестиционногоСчета));
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПервыйГодКогдаМожноЗачестьУбытки(ОтчетныйПериод, ВидИнвестиционногоСчета)
	
	ГодОтчетногоПериода = Год(ОтчетныйПериод);
	
	// Можно зачесть убытки за последние 10 лет, но не ранее ГодНачалаДействияВычета.
	Возврат Макс(ГодНачалаДействияВычета(ВидИнвестиционногоСчета), ГодОтчетногоПериода - 10);
	
КонецФункции

&НаСервереБезКонтекста
Функция ГодНачалаДействияВычета(ВидИнвестиционногоСчета)
	
	Возврат Отчеты.РегламентированныйОтчет3НДФЛ.ГодНачалаДействияВычетаУбыткиПрошлыхЛетПоЦеннымБумагам(ВидИнвестиционногоСчета);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокПодсказкиКОстаткам(ОтчетныйПериод, ГодУбытка)
	
	ПредыдущийГод = Год(ОтчетныйПериод) - 1;
	ПервыйОтчетныйГодПослеУбытка = ГодУбытка + 1;
	
	КоличествоДеклараций = ПредыдущийГод - ПервыйОтчетныйГодПослеУбытка + 1;
	
	Если КоличествоДеклараций = 1 Тогда
		ТекстПодсказки = СтрШаблон(
			НСтр("ru = 'Сумма убытка, не учтенная в декларации за %1 год:'"),
			Формат(ПредыдущийГод, "ЧГ=0"));
	Иначе
		ТекстПодсказки = СтрШаблон(
			НСтр("ru = 'Сумма убытка, не учтенная в декларациях за %1-%2 годы:'"),
			Формат(ПервыйОтчетныйГодПослеУбытка, "ЧГ=0"),
			Формат(ПредыдущийГод, "ЧГ=0"));
	КонецЕсли;
	
	Возврат ТекстПодсказки;
	
КонецФункции



#КонецОбласти


