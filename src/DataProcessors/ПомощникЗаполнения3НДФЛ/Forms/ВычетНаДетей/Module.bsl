////////////////////////////////////////////////////////////////////////////////
//Отчет.РегламентированныйОтчет3НДФЛ.Форма.ВычетНаДетей
//  Указание стандартного вычета на детей
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Конвертация параметров формы в значения ДропРеквизитов формы
	Обработки.ПомощникЗаполнения3НДФЛ.ЗаполнитьДопРеквизитыФормыДокументаПомощника(ЭтотОбъект);
	
	// Чтение структуры документа
	СтрукураДокументаНаСервере = Обработки.ПомощникЗаполнения3НДФЛ.СтруктураДокументаСТаблицамиИзХранилищ(ДопРеквизитыФормы.СтруктураДокумента);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрукураДокументаНаСервере, ,"ТабличнаяЧасть");
	ТабличнаяЧасть.Загрузить(СтрукураДокументаНаСервере.ТабличнаяЧасть);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДопРеквизитыФормы.СписокОшибок <> Неопределено Тогда
		// Если форма открывается из списка собщений помощника заполнения, в параметрах будет передан массив "СписокОшибок"
		ПоказатьСписокОшибок(ДопРеквизитыФормы.СписокОшибок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='Записать изменения перед закрытием этой формы?'");
		
		ДополнительныеПараметры = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Закрыть без записи'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить закрытие'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПостоянныйВТечениеГодаПриИзменении(Элемент)
	
	Если СемейноеПоложениеНеИзменялось Тогда
		
		Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			Если СтрокаТЧ.СуммаВычета > 0 Тогда
				РазмерВычета = СтрокаТЧ.СуммаВычета;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			СтрокаТЧ.СуммаВычета = РазмерВычета;
		КонецЦикла;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВсегоДетейПриИзменении(Элемент)
	Если ВсегоДетей < Несовершеннолетних Тогда
		Несовершеннолетних = ВсегоДетей;
	КонецЕсли;
	Если РодныеДетиИнвалиды + ПриемныеДетиИнвалиды > Несовершеннолетних Тогда
		РодныеДетиИнвалиды   = Несовершеннолетних;
		ПриемныеДетиИнвалиды = 0;
	КонецЕсли;
	ИзменитьЗначениеКолонкиТаблицы(ТабличнаяЧасть[0], "ВсегоДетей", ВсегоДетей);
	УстановитьЗаголовокГруппы(Элементы.ГруппаДетиИнвалиды, РодныеДетиИнвалиды + ПриемныеДетиИнвалиды);
КонецПроцедуры

&НаКлиенте
Процедура НесовершеннолетнихПриИзменении(Элемент)
	Если ВсегоДетей < Несовершеннолетних Тогда
		ВсегоДетей = Несовершеннолетних;
	КонецЕсли;
	Если РодныеДетиИнвалиды + ПриемныеДетиИнвалиды > Несовершеннолетних Тогда
		РодныеДетиИнвалиды   = Несовершеннолетних;
		ПриемныеДетиИнвалиды = 0;
	КонецЕсли;
	ИзменитьЗначениеКолонкиТаблицы(ТабличнаяЧасть[0], "Несовершеннолетних", Несовершеннолетних);
	УстановитьЗаголовокГруппы(Элементы.ГруппаДетиИнвалиды, РодныеДетиИнвалиды + ПриемныеДетиИнвалиды);
КонецПроцедуры

&НаКлиенте
Процедура РодныеДетиИнвалидыПриИзменении(Элемент)
	
	Если РодныеДетиИнвалиды + ПриемныеДетиИнвалиды > Несовершеннолетних Тогда
		Несовершеннолетних = РодныеДетиИнвалиды + ПриемныеДетиИнвалиды;
	КонецЕсли;
	Если ВсегоДетей < Несовершеннолетних Тогда
		ВсегоДетей = Несовершеннолетних;
	КонецЕсли;
	ИзменитьЗначениеКолонкиТаблицы(ТабличнаяЧасть[0], "РодныеДетиИнвалиды", РодныеДетиИнвалиды);
	УстановитьЗаголовокГруппы(Элементы.ГруппаДетиИнвалиды, РодныеДетиИнвалиды + ПриемныеДетиИнвалиды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемныеДетиИнвалидыПриИзменении(Элемент)
	Если РодныеДетиИнвалиды + ПриемныеДетиИнвалиды > Несовершеннолетних Тогда
		Несовершеннолетних = РодныеДетиИнвалиды + ПриемныеДетиИнвалиды;
	КонецЕсли;
	Если ВсегоДетей < Несовершеннолетних Тогда
		ВсегоДетей = Несовершеннолетних;
	КонецЕсли;
	ИзменитьЗначениеКолонкиТаблицы(ТабличнаяЧасть[0], "ПриемныеДетиИнвалиды", ПриемныеДетиИнвалиды);
	УстановитьЗаголовокГруппы(Элементы.ГруппаДетиИнвалиды, РодныеДетиИнвалиды + ПриемныеДетиИнвалиды);
КонецПроцедуры

&НаКлиенте
Процедура ПрименяетсяДвойнойВычетПриИзменении(Элемент)
	ИзменитьЗначениеКолонкиТаблицы(ТабличнаяЧасть[0], "ПрименяетсяДвойнойВычет", ПрименяетсяДвойнойВычет);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	НомерМесяца = Элемент.ТекущиеДанные.НомерМесяца;
	Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
		
		Если СтрокаТЧ.НомерМесяца < НомерМесяца Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент.ТекущиеДанные.СуммаВычета = 0;
		Элемент.ТекущиеДанные.ВсегоДетей = 0;
		Элемент.ТекущиеДанные.Несовершеннолетних = 0;
		Элемент.ТекущиеДанные.РодныеДетиИнвалиды = 0;
		Элемент.ТекущиеДанные.ПриемныеДетиИнвалиды = 0;
		Элемент.ТекущиеДанные.ПрименяетсяДвойнойВычет = 0;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВсегоДетейПриИзменении(Элемент)
	ИмяКолонки = "ВсегоДетей";
	ИзменитьЗначениеКолонкиТаблицы(Элементы.ТабличнаяЧасть.ТекущиеДанные, ИмяКолонки, Элементы.ТабличнаяЧасть.ТекущиеДанные[ИмяКолонки]);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНесовершеннолетнихПриИзменении(Элемент)
	ИмяКолонки = "Несовершеннолетних";
	ИзменитьЗначениеКолонкиТаблицы(Элементы.ТабличнаяЧасть.ТекущиеДанные, ИмяКолонки, Элементы.ТабличнаяЧасть.ТекущиеДанные[ИмяКолонки]);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьРодныеДетиИнвалидыПриИзменении(Элемент)
	ИмяКолонки = "РодныеДетиИнвалиды";
	ИзменитьЗначениеКолонкиТаблицы(Элементы.ТабличнаяЧасть.ТекущиеДанные, ИмяКолонки, Элементы.ТабличнаяЧасть.ТекущиеДанные[ИмяКолонки]);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриемныеДетиИнвалидыПриИзменении(Элемент)
	ИмяКолонки = "ПриемныеДетиИнвалиды";
	ИзменитьЗначениеКолонкиТаблицы(Элементы.ТабличнаяЧасть.ТекущиеДанные, ИмяКолонки, Элементы.ТабличнаяЧасть.ТекущиеДанные[ИмяКолонки]);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПрименяетсяДвойнойВычетПриИзменении(Элемент)
	ИмяКолонки = "ПрименяетсяДвойнойВычет";
	ИзменитьЗначениеКолонкиТаблицы(Элементы.ТабличнаяЧасть.ТекущиеДанные, ИмяКолонки, Элементы.ТабличнаяЧасть.ТекущиеДанные[ИмяКолонки]);
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.ГруппаПостоянныйСоставСемьи.Видимость   = Форма.СемейноеПоложениеНеИзменялось;
	Элементы.ТабличнаяЧасть.Видимость = Не Форма.СемейноеПоложениеНеИзменялось;
	УстановитьЗаголовокГруппы(Форма.Элементы.ГруппаДетиИнвалиды, Форма.РодныеДетиИнвалиды + Форма.ПриемныеДетиИнвалиды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокОшибок(СписокОшибок)

	ОчиститьСообщения();
	Для каждого Ошибка Из СписокОшибок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст  = Ошибка.ОписаниеОшибки;
		Сообщение.Поле   = Ошибка.ИмяРеквизита;
		Сообщение.Сообщить(); 
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияТаблицы(СтрокаЭталон, ИмяКолонки)
	
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		Если СтрокаТаблицы.НомерМесяца > СтрокаЭталон.НомерМесяца Тогда
			СтрокаТаблицы[ИмяКолонки] = СтрокаЭталон[ИмяКолонки];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеКолонкиТаблицы(СтрокаТаблицы, ИмяКолонки, НовоеЗначение)

	ИзменяемыеКолонки = Новый Массив;
	ИзменяемыеКолонки.Добавить(ИмяКолонки);
	
	СтрокаТаблицы[ИмяКолонки] = НовоеЗначение;
	Если СтрокаТаблицы.Несовершеннолетних < (СтрокаТаблицы.ПриемныеДетиИнвалиды + СтрокаТаблицы.РодныеДетиИнвалиды) Тогда
		СтрокаТаблицы.Несовершеннолетних = СтрокаТаблицы.ПриемныеДетиИнвалиды + СтрокаТаблицы.РодныеДетиИнвалиды;
		ИзменяемыеКолонки.Добавить("Несовершеннолетних");
	КонецЕсли;
	Если СтрокаТаблицы.ВсегоДетей < СтрокаТаблицы.Несовершеннолетних Тогда
		СтрокаТаблицы.ВсегоДетей = СтрокаТаблицы.Несовершеннолетних;
		ИзменяемыеКолонки.Добавить("ВсегоДетей");
	КонецЕсли;
	
	Для каждого ИзмененнаяКолонка Из ИзменяемыеКолонки Цикл
		ЗаполнитьЗначенияТаблицы(СтрокаТаблицы, ИзмененнаяКолонка);
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокГруппы(ЭлементГруппы, КоличествоДетей)
	
	Если КоличествоДетей = 0 Тогда
		ЭлементГруппы.ЗаголовокСвернутогоОтображения = НСтр("ru='Из них детей-инвалидов'");
	Иначе
		ЭлементГруппы.ЗаголовокСвернутогоОтображения = СтрШаблон(НСтр("ru='Из них детей-инвалидов: %1'"), КоличествоДетей);
	КонецЕсли;
	
КонецПроцедуры


#Область РасчетСуммыВычетов

&НаСервере
Функция РассчитатьСуммыВычета()
	
	ИтогВычета = Новый Структура("СтандартныйВычет, ДвойнойВычет, ВычетНаИнвалидов, ДвойнойВычетНаИнвалидов, Всего", 0, 0, 0, 0, 0);
	
	РазмерыВычетов = РазмерыВычетов();
	
	КоличествоИтераций = Мин(ТабличнаяЧасть.Количество(), КоличествоМесяцев) - 1;
	Для Индекс = 0 По КоличествоИтераций Цикл
		СтрокаТаблицы = ТабличнаяЧасть[Индекс];
		
		СтандартныйВычет = СтандартныйВычетПоКоличествуДетей(СтрокаТаблицы, РазмерыВычетов);
		ВычетНаИнвалидов = СтрокаТаблицы.РодныеДетиИнвалиды * РазмерыВычетов.РоднойИнвалид
			+ СтрокаТаблицы.ПриемныеДетиИнвалиды * РазмерыВычетов.ПриемныйИнвалид;
		
		Если СтрокаТаблицы.ПрименяетсяДвойнойВычет Тогда
			ИтогВычета.ДвойнойВычет = ИтогВычета.ДвойнойВычет + (СтандартныйВычет * 2);
			ИтогВычета.ДвойнойВычетНаИнвалидов = ИтогВычета.ДвойнойВычетНаИнвалидов + (ВычетНаИнвалидов * 2);
		Иначе
			ИтогВычета.СтандартныйВычет = ИтогВычета.СтандартныйВычет + СтандартныйВычет;
			ИтогВычета.ВычетНаИнвалидов = ИтогВычета.ВычетНаИнвалидов + ВычетНаИнвалидов;
		КонецЕсли;
	КонецЦикла;
	
	ИтогВычета.Всего = ИтогВычета.СтандартныйВычет + ИтогВычета.ДвойнойВычет
		+ ИтогВычета.ВычетНаИнвалидов + ИтогВычета.ДвойнойВычетНаИнвалидов;
	
	Возврат ИтогВычета;
	
КонецФункции

&НаСервере
Функция РазмерыВычетов()
	
	РазмерыВычетов = Новый Структура;
	РазмерыВычетов.Вставить("ПервыйРебенок", 1400);
	РазмерыВычетов.Вставить("ВторойРебенок", 1400);
	РазмерыВычетов.Вставить("ТретийРебенок", 3000);
	РазмерыВычетов.Вставить("РоднойИнвалид", 12000);
	РазмерыВычетов.Вставить("ПриемныйИнвалид", 6000);
	
	Возврат РазмерыВычетов;
	
КонецФункции

&НаСервере
Функция СтандартныйВычетПоКоличествуДетей(СтрокаДети, РазмерыВычетов)
	
	Если СтрокаДети.ВсегоДетей < 3 Тогда
		ДетейДо3 = СтрокаДети.Несовершеннолетних;
	Иначе
		ДетейДо3 = Макс(2 - (СтрокаДети.ВсегоДетей - СтрокаДети.Несовершеннолетних), 0);
	КонецЕсли;
	
	ВычетНаПервого = ?(ДетейДо3 > 0, РазмерыВычетов.ПервыйРебенок, 0);
	ВычетНаВторого = ?(ДетейДо3 > 1, РазмерыВычетов.ВторойРебенок, 0);
	
	ДетейПосле3 = СтрокаДети.Несовершеннолетних - ДетейДо3;
	
	Возврат ВычетНаПервого + ВычетНаВторого + (ДетейПосле3 * РазмерыВычетов.ТретийРебенок);
	
КонецФункции

#КонецОбласти




///////////////////////////////////////////////////////
// Проверка и запись документа

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьДокументКлиент();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	РезультатПроверки = РезультатПроверкиДокумента();
	
	Если РезультатПроверки.БезОшибок Тогда
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(РезультатПроверки.РезультатДляВозврата);
	Иначе
		
		ПоказатьСписокОшибок(РезультатПроверки.СписокОшибок);
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='В документе обнаружены ошибки. Записать документ в текущем состоянии?'");
		
		ДополнительныеПараметры = Новый Структура("РезультатПроверки", РезультатПроверки);
		Оповещение = Новый ОписаниеОповещения("ЗаписатьДокументКлиентЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать с ошибками'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Исправить ошибки'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Закрыть не записывая'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатДляЗаписи()

	СтруктураДокумента = ДопРеквизитыФормы.СтруктураДокумента;
	ЗаполнитьЗначенияСвойств(СтруктураДокумента, ЭтотОбъект, , "ТабличнаяЧасть");
	СтруктураДокумента.Вставить("ТабличнаяЧасть", Новый ХранилищеЗначения(ТабличнаяЧасть.Выгрузить()));
	
	Итоги = РассчитатьСуммыВычета();
	ЗаполнитьЗначенияСвойств(СтруктураДокумента, Итоги, ,);
	СтруктураДокумента.СуммаВычета = Итоги.Всего;
	
	Результат = Новый Структура;
	Результат.Вставить("ВидДокумента", ДопРеквизитыФормы.ВидДокумента);
	Результат.Вставить("СтавкаНалога", 13);
	Результат.Вставить("Представление", СтрШаблон("Стандартный вычет на детей"));
	Результат.Вставить("СтруктураДокумента", СтруктураДокумента);
	Результат.Вставить("СуммаДохода", 0);
	Результат.Вставить("СуммаВычета", СтруктураДокумента.СуммаВычета);

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РезультатПроверкиДокумента()

	Результат = Новый Структура();
	Результат.Вставить("РезультатДляВозврата", РезультатДляЗаписи());
	
	Результат.Вставить("СписокОшибок", Новый Массив);
	Результат.Вставить("БезОшибок", Обработки.ПомощникЗаполнения3НДФЛ.ДокументНеСодержитОшибок(
			ДопРеквизитыФормы.ВидДокумента, ДопРеквизитыФормы.ГодОтчета, Результат.РезультатДляВозврата.СтруктураДокумента, Результат.СписокОшибок, Неопределено));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ЗаписатьДокументКлиентЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(ДополнительныеПараметры.РезультатПроверки.РезультатДляВозврата);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультатВПомощник(Результат = Неопределено)

	Если Результат = Неопределено Тогда
		Результат = РезультатДляЗаписи();
	КонецЕсли;
	
	Закрыть(Результат);

КонецПроцедуры



#КонецОбласти


