////////////////////////////////////////////////////////////////////////////////
//Отчет.РегламентированныйОтчет3НДФЛ.Форма.ДоходОднойСуммойБезВычетов
//  Заполнение информации о подарках или сдаче в аренду
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Конвертация параметров формы в значения ДропРеквизитов формы
	Обработки.ПомощникЗаполнения3НДФЛ.ЗаполнитьДопРеквизитыФормыДокументаПомощника(ЭтотОбъект);
	Параметры.Свойство("Декларация3НДФЛВыбраннаяФорма", Декларация3НДФЛВыбраннаяФорма);
	
	// Чтение структуры документа
	СтрукураДокументаНаСервере = Обработки.ПомощникЗаполнения3НДФЛ.СтруктураДокументаСТаблицамиИзХранилищ(ДопРеквизитыФормы.СтруктураДокумента);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрукураДокументаНаСервере, ,);
	
	КодыВидовДоходовРФ = Отчеты.РегламентированныйОтчет3НДФЛ.КодыВидовДоходовРФ(Параметры.Декларация3НДФЛВыбраннаяФорма);
	
	Если СтрНайти(Декларация3НДФЛВыбраннаяФорма, "2018") = 0 Тогда
		Элементы.ВидКонтрагента.СписокВыбора.Добавить(0, "Неизвестен");
	Иначе
		Если ВидКонтрагента = 0 Тогда
			ВидКонтрагента = ?(СтрДлина(ИНН) = 10, 1, 2);
		КонецЕсли;
	КонецЕсли;
	
	Если ВидДохода = "Подарок" Тогда
		
		Элементы.ТекстПриглашения.Заголовок = НСтр("ru='Укажите недвижимость, транспортное средство, акции, доли, паи, подаренные физическим лицом 
		|и любой подарок от юридического лица.
		|Подарки от близких родственников и членов семьи указывать не нужно.'"); 
		Заголовок = НСтр("ru='Подарок от юридического или физического лица'");
		Элементы.СуммаДохода.Заголовок = НСтр("ru='Стоимость подарка'"); 
		Элементы.ВидКонтрагента.Заголовок = НСтр("ru='Даритель'"); 
		
	ИначеЕсли ВидДохода = "Аренда" Тогда
		
		Элементы.ТекстПриглашения.Заголовок = НСтр("ru='Укажите доход, полученный от сдачи в аренду квартиры или другого имущества.
		|Этот доход нужно декларировать только если он не является предпринимательской деятельностью.'"); 
		Заголовок = НСтр("ru='Сдача имушества в аренду'");
		Элементы.СуммаДохода.Заголовок = НСтр("ru='Сумма аренды'"); 
		Элементы.ВидКонтрагента.Заголовок = НСтр("ru='Арендатор'"); 
		
	Иначе
		ВызватьИсключение НСтр("ru='Неизвесный вид дохода'");
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДопРеквизитыФормы.СписокОшибок <> Неопределено Тогда
		// Если форма открывается из списка собщений помощника заполнения, в параметрах будет передан массив "СписокОшибок"
		ПоказатьСписокОшибок(ДопРеквизитыФормы.СписокОшибок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='Записать изменения перед закрытием этой формы?'");
		
		ДополнительныеПараметры = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Закрыть без записи'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить закрытие'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	Если ВидКонтрагента = 0 Тогда
		Наименование = "";
	КонецЕсли;
	Если ВидКонтрагента <> 1 Тогда
		ИНН   = "";
		КПП   = "";
		ОКТМО = "";
	КонецЕсли;
	
	УстановитьВидимостьПолейКонтрагента(ЭтотОбъект);
	
КонецПроцедуры



#КонецОбласти



#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	УстановитьВидимостьПолейКонтрагента(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокОшибок(СписокОшибок)

	ОчиститьСообщения();
	Для каждого Ошибка Из СписокОшибок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст  = Ошибка.ОписаниеОшибки;
		Сообщение.Поле   = Ошибка.ИмяРеквизита;
		Сообщение.Сообщить(); 
		
	КонецЦикла;

КонецПроцедуры



///////////////////////////////////////////////////////
// Проверка и запись документа

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьДокументКлиент();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	РезультатПроверки = РезультатПроверкиДокумента();
	
	Если РезультатПроверки.БезОшибок Тогда
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(РезультатПроверки.РезультатДляВозврата);
	Иначе
		
		ПоказатьСписокОшибок(РезультатПроверки.СписокОшибок);
		
		#Область ПоказатьВопрос
		ТекстВопроса = НСтр("ru='В документе обнаружены ошибки. Записать документ в текущем состоянии?'");
		
		ДополнительныеПараметры = Новый Структура("РезультатПроверки", РезультатПроверки);
		Оповещение = Новый ОписаниеОповещения("ЗаписатьДокументКлиентЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Записать с ошибками'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет,    НСтр("ru='Исправить ошибки'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Закрыть не записывая'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Да, Заголовок);
		#КонецОбласти
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РезультатДляЗаписи()

	СтруктураДокумента = ДопРеквизитыФормы.СтруктураДокумента;
	ЗаполнитьЗначенияСвойств(СтруктураДокумента, ЭтотОбъект, , );
	
	Результат = Новый Структура;
	Результат.Вставить("ВидДокумента", ДопРеквизитыФормы.ВидДокумента);
	Результат.Вставить("СтавкаНалога", 13);
	Если ВидДохода = "Подарок" Тогда
		СтруктураДокумента.Вставить("КодВидаДохода", КодыВидовДоходовРФ.Подарок);
		Результат.Вставить("Представление", СтрШаблон("Подарок (%1)", Наименование));
		Если ВидКонтрагента = 0 Тогда
			СтруктураДокумента.Наименование = "Подарок";
		КонецЕсли;
	Иначе
		Результат.Вставить("Представление", СтрШаблон("Аренда имущества (%1)", Наименование));
		СтруктураДокумента.Вставить("КодВидаДохода", 
					?(ВидДохода = "Аренда", 
						КодыВидовДоходовРФ.СдачаИмуществаВАренду, 
						КодыВидовДоходовРФ.ИнойДоходОтИсточникаРФ));
		Если ВидКонтрагента = 0 Тогда
			СтруктураДокумента.Наименование = "Аренда имущества";
		КонецЕсли;
	КонецЕсли;
	Результат.Вставить("СтруктураДокумента", СтруктураДокумента);
	Результат.Вставить("СуммаДохода", СуммаДохода);
	Результат.Вставить("СуммаВычета", 0);

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РезультатПроверкиДокумента()

	Результат = Новый Структура();
	Результат.Вставить("РезультатДляВозврата", РезультатДляЗаписи());
	
	Результат.Вставить("СписокОшибок", Новый Массив);
	Результат.Вставить("БезОшибок", Обработки.ПомощникЗаполнения3НДФЛ.ДокументНеСодержитОшибок(
			ДопРеквизитыФормы.ВидДокумента, ДопРеквизитыФормы.ГодОтчета, Результат.РезультатДляВозврата.СтруктураДокумента, Результат.СписокОшибок, Неопределено));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ЗаписатьДокументКлиентЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Модифицированность = Ложь;
		ВернутьРезультатВПомощник(ДополнительныеПараметры.РезультатПроверки.РезультатДляВозврата);
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультатВПомощник(Результат = Неопределено)

	Если Результат = Неопределено Тогда
		Результат = РезультатДляЗаписи();
	КонецЕсли;
	
	Закрыть(Результат);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПолейКонтрагента(Форма)

	Форма.Элементы.ГруппаИННКПП.Видимость = Форма.ВидКонтрагента = 1;
	Форма.Элементы.ГруппаНаименованиеОКТМО.Видимость = Форма.ВидКонтрагента >= 1;

КонецПроцедуры



#КонецОбласти


