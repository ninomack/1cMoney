
&НаСервере
Процедура ПрочитатьДвиженияДокумента()

	ДвиженияДоход.Очистить();
	ДвиженияРасход.Очистить();
	ДвиженияПеревод.Очистить();
	ДвиженияНакоплений.Очистить();
	
	МДДокумента = Операция.Метаданные();
	ЕстьУчет       = МДДокумента.Движения.Содержит(Метаданные.РегистрыБухгалтерии.ЖурналОпераций);
	ЕстьНакопления = МДДокумента.Движения.Содержит(Метаданные.РегистрыНакопления.ИспользованиеСуммФинансовыхЦелей);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА КАК ИспользоватьДляУчетаВыданныхДолгов,
	|	ЛОЖЬ КАК ИспользоватьДляУчетаВзятыхДолгов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ВыданныйЗаем) КАК ВидДолга
	|ПОМЕСТИТЬ ВидыДолгов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДолгов.ПолученныйКредит)
	|
	|;
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	Документы.Дата,
	|	Документы.Проведен,
	|	Документы.ПометкаУдаления,
	|	Документы.ЭтоШаблон,
	|	Документы.ОписаниеОперации
	|ИЗ
	|	Документ." + МДДокумента.Имя + " КАК Документы
	|ГДЕ
	|	Документы.Ссылка = &Операция
	|";
	
	Запрос.УстановитьПараметр("Операция", Операция);
	Если ЕстьУчет Тогда
		Запрос.Текст = Запрос.Текст + 
		"
		|;
		|ВЫБРАТЬ
		|	жДвиженияССубконто.Период КАК Период,
		|	жДвиженияССубконто.Регистратор,
		|	жДвиженияССубконто.НомерСтроки КАК НомерСтроки,
		|	жДвиженияССубконто.Активность,
		|	жДвиженияССубконто.СчетДт,
		|	жДвиженияССубконто.СубконтоДт1,
		|	ЕСТЬNULL(жДвиженияССубконто.СубконтоДт1.ИспользоватьДляНакоплений, ЛОЖЬ) КАК ИспользоватьДляНакопленийДт,
		|	ЕСТЬNULL(жДвиженияССубконто.СубконтоДт1.ТипСчета, ЕСТЬNULL(ВидыДолговДт.ВидДолга, НЕОПРЕДЕЛЕНО)) КАК ТипАналитикиДт,
		|	жДвиженияССубконто.ВидСубконтоДт1,
		|	жДвиженияССубконто.СубконтоДт2,
		|	жДвиженияССубконто.ВидСубконтоДт2,
		|	жДвиженияССубконто.СчетКт,
		|	жДвиженияССубконто.СубконтоКт1,
		|	ЕСТЬNULL(жДвиженияССубконто.СубконтоКт1.ИспользоватьДляНакоплений, ЛОЖЬ) КАК ИспользоватьДляНакопленийКт,
		|	ЕСТЬNULL(жДвиженияССубконто.СубконтоКт1.ТипСчета, ЕСТЬNULL(ВидыДолговКт.ВидДолга, НЕОПРЕДЕЛЕНО)) КАК ТипАналитикиКт,
		|	жДвиженияССубконто.ВидСубконтоКт1,
		|	жДвиженияССубконто.СубконтоКт2,
		|	жДвиженияССубконто.ВидСубконтоКт2,
		|	жДвиженияССубконто.Валюта,
		|	жДвиженияССубконто.ВалютнаяСумма,
		|	жДвиженияССубконто.Содержание,
		|	ВЫБОР
		|		КОГДА жДвиженияССубконто.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Капитал)
		|			ТОГДА ""Расход""
		|		КОГДА жДвиженияССубконто.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Капитал)
		|			ТОГДА ""Доход""
		|		ИНАЧЕ ""Перемещение""
		|	КОНЕЦ КАК ТипПроводки
		|ИЗ
		|	РегистрБухгалтерии.ЖурналОпераций.ДвиженияССубконто(, , Регистратор = &Операция, (Регистратор, НомерСтроки), ) КАК жДвиженияССубконто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыДолгов КАК ВидыДолговДт
		|		ПО (жДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.Долги)
		|			И жДвиженияССубконто.СубконтоДт1.ИспользоватьДляУчетаВыданныхДолгов = ВидыДолговДт.ИспользоватьДляУчетаВыданныхДолгов
		|			И жДвиженияССубконто.СубконтоДт1.ИспользоватьДляУчетаВзятыхДолгов = ВидыДолговДт.ИспользоватьДляУчетаВзятыхДолгов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыДолгов КАК ВидыДолговКт
		|		ПО (жДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.Долги)
		|			И жДвиженияССубконто.СубконтоКт1.ИспользоватьДляУчетаВыданныхДолгов = ВидыДолговКт.ИспользоватьДляУчетаВыданныхДолгов
		|			И жДвиженияССубконто.СубконтоКт1.ИспользоватьДляУчетаВзятыхДолгов = ВидыДолговКт.ИспользоватьДляУчетаВзятыхДолгов
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТипПроводки,
		|	Период,
		|	НомерСтроки";
		
	КонецЕсли; 
	
	Если ЕстьНакопления Тогда
		Запрос.Текст = Запрос.Текст + 
		"
		|;
		|ВЫБРАТЬ
		|	ИспользованиеСуммФинансовыхЦелей.Период,
		|	ИспользованиеСуммФинансовыхЦелей.Регистратор,
		|	ИспользованиеСуммФинансовыхЦелей.НомерСтроки,
		|	ИспользованиеСуммФинансовыхЦелей.Активность,
		|	ИспользованиеСуммФинансовыхЦелей.ФинансоваяЦель,
		|	ИспользованиеСуммФинансовыхЦелей.Валюта,
		|	ИспользованиеСуммФинансовыхЦелей.ИспользованоНакоплений,
		|	ИспользованиеСуммФинансовыхЦелей.ИспользованоСвободныхСредств
		|ИЗ
		|	РегистрНакопления.ИспользованиеСуммФинансовыхЦелей КАК ИспользованиеСуммФинансовыхЦелей
		|ГДЕ
		|	ИспользованиеСуммФинансовыхЦелей.Регистратор = &операция";
	КонецЕсли; 
	
	Результаты  = Запрос.ВыполнитьПакет();
	
	НомерПакета = 1;
	СтрокаОперации = Результаты[НомерПакета].Выгрузить()[0];
	НомерПакета = НомерПакета + 1;
	ПредставлениеОперации = ?(ЗначениеЗаполнено(МДДокумента.ПредставлениеОбъекта), МДДокумента.ПредставлениеОбъекта, МДДокумента.Синоним);
	ПредставлениеОперации = ПредставлениеОперации + " от " + Формат(СтрокаОперации.Дата, "ДФ='дд.ММ.гггг, ЧЧ:мм'");
	Если СтрокаОперации.ПометкаУдаления Тогда
		Заголовок = ПредставлениеОперации + НСтр("ru = ' (помечено на удаление)'") ;
	ИначеЕсли СтрокаОперации.Проведен Тогда
		Заголовок = ПредставлениеОперации + НСтр("ru = ' (учтено)'") ;
	ИначеЕсли СтрокаОперации.ЭтоШаблон Тогда
		Заголовок = ПредставлениеОперации + НСтр("ru = ' (шаблон операции)'") ;
	Иначе
		Заголовок = ПредставлениеОперации + НСтр("ru = ' (не учтено)'") ;
	КонецЕсли; 
	ОписаниеОперации = СтрокаОперации.ОписаниеОперации;
	
	Если ЕстьУчет Тогда
		
		ТаблицаПроводок = Результаты[НомерПакета].Выгрузить();
		ДвиженияДоход.Загрузить(ТаблицаПроводок.Скопировать(Новый Структура("ТипПроводки", "Доход")));
		ДвиженияРасход.Загрузить(ТаблицаПроводок.Скопировать(Новый Структура("ТипПроводки", "Расход")));
		ДвиженияПеревод.Загрузить(ТаблицаПроводок.Скопировать(Новый Структура("ТипПроводки", "Перемещение")));
		
		Для Каждого СтрокаДвижения Из ДвиженияДоход Цикл
			СтрокаДвижения.КартинкаСчета = РаботаСФормамиДокументовПовтИсп.ПолучитьИконкуПоСчету(СтрокаДвижения.СчетДт, 
				СтрокаДвижения.ТипАналитикиДт, СтрокаДвижения.ИспользоватьДляНакопленийДт);
		КонецЦикла; 
		Для Каждого СтрокаДвижения Из ДвиженияРасход Цикл
			СтрокаДвижения.КартинкаСчета = РаботаСФормамиДокументовПовтИсп.ПолучитьИконкуПоСчету(СтрокаДвижения.СчетКт, 
				СтрокаДвижения.ТипАналитикиКт, СтрокаДвижения.ИспользоватьДляНакопленийКт);
		КонецЦикла; 
		Для Каждого СтрокаДвижения Из ДвиженияПеревод Цикл
			СтрокаДвижения.КартинкаСчетаДт = РаботаСФормамиДокументовПовтИсп.ПолучитьИконкуПоСчету(СтрокаДвижения.СчетДт, 
				СтрокаДвижения.ТипАналитикиДт, СтрокаДвижения.ИспользоватьДляНакопленийДт);
			СтрокаДвижения.КартинкаСчетаКт = РаботаСФормамиДокументовПовтИсп.ПолучитьИконкуПоСчету(СтрокаДвижения.СчетКт, 
				СтрокаДвижения.ТипАналитикиКт, СтрокаДвижения.ИспользоватьДляНакопленийКт);
		КонецЦикла; 
		
		НомерПакета = НомерПакета + 1;
		
	КонецЕсли;
	
	Если ЕстьНакопления Тогда
		
		ДвиженияНакоплений.Загрузить(Результаты[НомерПакета].Выгрузить());
		
		НомерПакета = НомерПакета + 1;
		
	КонецЕсли; 

	Элементы.ГруппаСтраницаДоход.Видимость = ДвиженияДоход.Количество() > 0;
	Элементы.ГруппаСтраницаДоход.Заголовок = НСтр("ru = 'Доход'") + " (" + ДвиженияДоход.Количество() + ")";
	
	Элементы.ГруппаСтраницаРасход.Видимость = ДвиженияРасход.Количество() > 0;
	Элементы.ГруппаСтраницаРасход.Заголовок = НСтр("ru = 'Расход'") + " (" + ДвиженияРасход.Количество() + ")";
	
	Элементы.ГруппаСтраницаПеревод.Видимость = ДвиженияПеревод.Количество() > 0;
	Элементы.ГруппаСтраницаПеревод.Заголовок = НСтр("ru = 'Перемещение'") + " (" + ДвиженияПеревод.Количество() + ")";
	
	Элементы.ГруппаСтраницаНакопления.Видимость = ДвиженияНакоплений.Количество() > 0;
	Элементы.ГруппаСтраницаНакопления.Заголовок = НСтр("ru = 'Накопления'") + " (" + ДвиженияНакоплений.Количество() + ")";
	
	Если Элементы.ГруппаСтраницаДоход.Видимость
		ИЛИ Элементы.ГруппаСтраницаРасход.Видимость
		ИЛИ Элементы.ГруппаСтраницаПеревод.Видимость
		ИЛИ Элементы.ГруппаСтраницаНакопления.Видимость Тогда
		Элементы.ГруппаСтраницаНетДвижений.Видимость = Ложь;
	Иначе
		Элементы.ГруппаСтраницаНетДвижений.Видимость = Истина;
		Элементы.ДекорацияНетДвижений.Заголовок = "Операция " + ПредставлениеОперации + " не отражена в учете.";
	КонецЕсли; 
	
	Для Каждого Страница Из Элементы.ГруппаСтраницыФормы.ПодчиненныеЭлементы Цикл
		Если Страница.Видимость Тогда
			Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Страница;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры
 

&НаКлиенте
Процедура Обновить(Команда)
	
	ПрочитатьДвиженияДокумента();
	
КонецПроцедуры




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Операция", Операция) ИЛИ НЕ ЗначениеЗаполнено(Операция) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	ПрочитатьДвиженияДокумента();
	
КонецПроцедуры

