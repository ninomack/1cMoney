////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Подготовка реквизитов формы
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	#КонецОбласти	
	
	// Подготовка редактируемых объектов
	Если Параметры.Свойство("Копирование") И Параметры.Копирование И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		СправочникОбъект.Наименование = "Копия: " + Параметры.ЗначениеКопирования.Наименование;
		СправочникОбъект.Валюта = Параметры.ЗначениеКопирования.Валюта;
	Иначе
		СправочникОбъект.Валюта = Константы.ВалютаУчета.Получить();
	КонецЕсли; 
	СправочникОбъект.Активность = Истина;
	ДатаОстатка = КонецМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -1));
	
	// Настройка внешнего вида
	УправлениеФормой(ЭтаФорма);
	
	// Общие настройки форм элементов справочников
	РаботаСФормамиСправочников.ФормаЭлементаПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.ВалютаПояснение  = НСтр("ru = 'Валюту и назначение для накоплений можно изменить, пока по кошельку нет движения денег'") ;
	
	ЭтоБанковскаяКарта = (Форма.СправочникОбъект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаДебетовая")
							ИЛИ Форма.СправочникОбъект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаКредитная")
							ИЛИ Форма.СправочникОбъект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаУниверсальная"));
	Если ЭтоБанковскаяКарта ИЛИ Форма.СправочникОбъект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскийСчет") Тогда
		Форма.ТекстПодсказкиПоОстатку = НСтр("ru = 'Положительный остаток - деньги в наличии, отрицательный - долг банку'") ;
	Иначе
		Форма.ТекстПодсказкиПоОстатку = "";
	КонецЕсли; 
							
	ЕстьКредитныйЛимит = (Форма.СправочникОбъект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаКредитная")
							ИЛИ Форма.СправочникОбъект.ТипСчета = ПредопределенноеЗначение("Перечисление.ТипыСчетов.БанковскаяКартаУниверсальная"));
	
	Форма.Элементы.ГруппаКредитныйЛимитВалюта.Видимость = ЭтоБанковскаяКарта;
	Форма.Элементы.ГруппаКредитныйЛимитВалюта.Доступность = ЕстьКредитныйЛимит;
	Если Форма.СправочникОбъект.ИспользоватьДляНакоплений Тогда
		Форма.Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок = 
			НСтр("ru = 'Кошелек предназначен для накопления денег, которые можно использовать на разные финансовые цели'");
	Иначе
		Форма.Элементы.ПереключательНазначения.РасширеннаяПодсказка.Заголовок = 
			НСтр("ru = 'Кошелек предназначен для оплаты текущих расходов и не используется в накоплениях'");
	КонецЕсли; 
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТипСчетаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательНазначенияПриИзменении(Элемент)
	
	СправочникОбъект.ИспользоватьДляНакоплений = ЗначениеНазначения;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "СправочникОбъект.Комментарий", Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура РодительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеТекущегоФайлаНажатие(Элемент, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаТекущийФайл(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлКнопкаНавигацииНажатие(Элемент)
	ПрикрепленныеФайлыКлиент.ФайлКнопкаНавигацииНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры

#КонецОбласти 


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыСервер.ОбработатьИЗаписатьДанныеМультимедиа(МедиаФайлы, ТекущийОбъект.Ссылка);
	#КонецОбласти 
	
	Если НачальныйОстаток <> 0  Тогда
		ДокументОбъект = Документы.ВводИзменениеОстатка.СоздатьДокумент();
		ДатаОстатка = ?(ЗначениеЗаполнено(ДатаОстатка), ДатаОстатка, НачалоМесяца(ТекущаяДатаСеанса()));
		ДокументОбъект.Дата                 = ДатаОстатка;
		ДокументОбъект.РазделУчета          = ПланыСчетов.РазделыУчета.Деньги;
		ДокументОбъект.ОбъектУчета          = ТекущийОбъект.Ссылка;
		ДокументОбъект.ВалютаОперации       = ТекущийОбъект.Валюта;
		ДокументОбъект.СуммаНовогоОстатка   = НачальныйОстаток;
		ДокументОбъект.Комментарий          = "Ввод начального остатка";
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записан элемент справочника", Новый Структура("ИмяСправочника,Ссылка, ВладелецФормы", 
		"КошелькиИсчета", СправочникОбъект.Ссылка, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	Если НачальныйОстаток <> 0  Тогда
		Оповестить("Записана операция", Новый Структура("Дата, ВидДокумента, Ссылка, ЭтоШаблон, ВладелецФормы", 
				ДатаОстатка, "ВводИзменениеОстатка", Неопределено, ложь, Неопределено));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записан элемент справочника" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ИмяСправочника = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ИмяСправочника", ИмяСправочника) И ИмяСправочника = "КошелькиИСчета"
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			СправочникОбъект.Родитель = Параметр.Ссылка;
			ТекущийЭлемент  = Элементы.Родитель;
		КонецЕсли; 
	КонецЕсли;
		
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ОбработатьОповещениеДобавленияФайла(ЭтотОбъект, Параметр);
	ИначеЕсли (ПрикрепленныеФайлыКлиент.ЭтоИзменениеСпискаМультимедиа(ЭтотОбъект, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеТекущегоФайла(ЭтотОбъект);
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры

