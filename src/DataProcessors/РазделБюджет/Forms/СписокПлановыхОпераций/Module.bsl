////////////////////////////////////////////////////////////////////////////////
//Обработка.РазделБюджет.Форма.СписокПлановыхОпераций
//  Просмотр/изменение операций, запланированных на бюджетный период по конкретной бюджетной статье
//  
//Параметры формы:
//  НачалоПериода	- Дата, начало бюджетного периода
//	ОкончаниеПериода - Дата, окончание бюджетного периода
//	НачалоКалендарногоПериода - Дата, начало календарного периода (с бюджетным может не совпадать)
//	ВариантБюджета - СправочникСсылка.ВариантыБюджета
//	РазделБюджета - Пустая строка или СправочникСсылка.ФинансовыеЦели
//	ГрафаБюджета - СправочникСсылка.ГрафаБюджета - используется для уточнение бюджетной статьи. Например, долг может бытьиспользоваться как в доходах, так и в расходах
//	СтатьяБюджета - ОпределяемыеТипы.СтатьяБюджета - статья, по которой отбираются плановые операции
//  
////////////////////////////////////////////////////////////////////////////////

&НаКлиенте 
Перем ЗакрытиеОбработано;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "НачалоПериода,СтатьяБюджета,НачалоКалендарногоПериода,ОкончаниеПериода,ВариантБюджета,РазделБюджета,ГрафаБюджета");
	Заголовок = Строка(СтатьяБюджета);
	ТекстЗаголовка = НСтр("ru='Плановые операции: %1'"); 
	ТекстЗаголовка = СтрШаблон(ТекстЗаголовка, Параметры.Заголовок);
	Заголовок = ТекстЗаголовка;
	ОбновитьСписокШаблонов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если СтрНайти("ВыполненОбменДанными,Изменено расписание,Записана операция,
				|Выполнена синхронизация,Изменилась дата плановой операции,", ИмяСобытия + ",") > 0 Тогда
		ОбновитьСписокШаблонов();
		Если СписокШаблонов.Количество() = 0 и Открыта() Тогда
			Закрыть(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Или Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЗакрытиеОбработано) Тогда
		Отказ = Истина;
		ЗакрытиеОбработано = Истина;
		Закрыть(СуммаПлановыхОпераций);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_СписокШаблонов

&НаКлиенте
Процедура СписокШаблоновВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФормуОперации(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОперацию(Команда)
	ОткрытьФормуОперации(Элементы.СписокШаблонов.ТекущаяСтрока);
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПропуститьВосстановить(Команда)
	
	ПараметрыФормы = СтруктураПараметровПоВыделеннойСтроке();
	Если ЗначениеЗаполнено(ПараметрыФормы.ШаблонОперации) Тогда
		
		ПропуститьПлановуюОперациюСервер(ПараметрыФормы);
		Если СписокШаблонов.Количество() = 0 И Открыта() Тогда
			Закрыть(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокШаблонов()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата",           НачалоКалендарногоПериода);
	Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДатаПросмотра",  НачалоКалендарногоПериода);
	
	Запрос.УстановитьПараметр("Дата1",                       НачалоПериода);
	Запрос.УстановитьПараметр("Дата2",                       ОкончаниеПериода);
	Запрос.УстановитьПараметр("СтатьяБюджета",               ?(СтатьяБюджета = Неопределено, "", СтатьяБюджета));
	Запрос.УстановитьПараметр("ГрафаБюджета",                ГрафаБюджета);
	Запрос.УстановитьПараметр("ВариантБюджета",              ВариантБюджета);
	Запрос.УстановитьПараметр("РазделБюджета",               РазделБюджета);
	Запрос.УстановитьПараметр("ВалютаУчета",                 Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаВарианта",              ВариантБюджета.Валюта);
	
	СтруктураЗапросов = Новый Структура;
	// Ключи всех статей бюджета
	ДополнитьТекстЗапросаКлючамиБюджетныхСтатей(Запрос.Текст, СтруктураЗапросов);
	// Список шаблонов с датами операций
	ДополнитьТекстЗапросаСпискомПлановыхОпераций(Запрос.Текст, СтруктураЗапросов);
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	СписокШаблонов.Загрузить(ПакетРезультатов[СтруктураЗапросов.ВыборкаПоказателиБюджета].Выгрузить());
	
	СуммаПлановыхОпераций = СписокШаблонов.Итог("СуммаПлановыхОпераций");

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОперации(ИДСтроки)

	СтрокаСписка = СписокШаблонов.НайтиПоИдентификатору(ИДСтроки);
	Если СтрокаСписка = Неопределено Или не ЗначениеЗаполнено(СтрокаСписка.Шаблон) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = СтруктураПараметровПоВыделеннойСтроке();
	
	Оповещение = Новый ОписаниеОповещения("ВыборШаблонаЗавершение", ЭтотОбъект, СтрокаСписка.Шаблон);
	
	Если ЗначениеЗаполнено(ПараметрыФормы.ПлановаяОперация) Тогда
		
		// Открываем существующую операцию
		ПоказатьЗначение(Оповещение, ПараметрыФормы.ПлановаяОперация);
		
	Иначе
		
		// создаем новую операцию
		ПараметрыФормыНовогоДокумента = Новый Структура;
		ПараметрыФормыНовогоДокумента.Вставить("ЗначениеКопирования", ПараметрыФормы.ШаблонОперации);
		СтруктураЗаполнения = Новый Структура("ЭтоШаблон,Дата,СуммаДолга,СуммаПроцентов,СуммаКомиссии", 
			Ложь, ПараметрыФормы.АктуальнаяДата, ПараметрыФормы.СуммаДолга, ПараметрыФормы.СуммаПроцентов,
			ПараметрыФормы.СуммаКомиссии);
		ПараметрыФормыНовогоДокумента.Вставить("ЗначенияЗаполнения", СтруктураЗаполнения);
		ПараметрыФормыНовогоДокумента.Вставить("ВладелецРасписания", ПараметрыФормы.ШаблонОперации);
		ПараметрыФормыНовогоДокумента.Вставить("ПлановаяДата",       ПараметрыФормы.ПлановаяДата);
		ПараметрыФормыНовогоДокумента.Вставить("АктуальнаяДата",     ПараметрыФормы.АктуальнаяДата);
		
		ИмяФормыДокумента = ПолучитьИмяВидаДокумента(ПараметрыФормы.ШаблонОперации); 
		ОткрытьФорму("Документ." + ИмяФормыДокумента + ".ФормаОбъекта", ПараметрыФормыНовогоДокумента, ЭтаФорма, Истина, , , Оповещение);
		
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборШаблонаЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ОбновитьСписокШаблонов();

КонецПроцедуры

&НаКлиенте
Функция СтруктураПараметровПоВыделеннойСтроке()

	Результат = Новый Структура("ШаблонОперации,ПлановаяОперация,АктуальнаяДата,ПлановаяДата, СуммаДолга, СуммаКомиссии,СуммаПроцентов");
	СтрокаТаблицы = Элементы.СписокШаблонов.ТекущиеДанные;
	Если СтрокаТаблицы <> Неопределено Тогда
		Результат.ШаблонОперации     = СтрокаТаблицы.Шаблон;
		Результат.ПлановаяОперация   = СтрокаТаблицы.Операция;
		Результат.АктуальнаяДата     = СтрокаТаблицы.ДатаПлановойОперации;
		Результат.ПлановаяДата       = СтрокаТаблицы.ПлановаяДата;
		Результат.СуммаПроцентов     = СтрокаТаблицы.СуммаПроцентов;
		Результат.СуммаКомиссии      = СтрокаТаблицы.СуммаКомиссии;
		Результат.СуммаДолга         = СтрокаТаблицы.СуммаДолга;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ПолучитьИмяВидаДокумента(Знач СсылкаНаДокумент)

	ТипСсылки = ТипЗнч(СсылкаНаДокумент);
	Если ТипСсылки = Тип("ДокументСсылка.ВводИзменениеОстатка") Тогда
		Возврат "ВводИзменениеОстатка";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.МыВзялиВДолг") Тогда
		Возврат "МыВзялиВДолг";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.МыДалиВДолг") Тогда
		Возврат "МыДалиВДолг";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.НамВернулиДолг") Тогда
		Возврат "НамВернулиДолг";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ОбменВалюты") Тогда
		Возврат "ОбменВалюты";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.Расход") Тогда
		Возврат "Расход";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.Перемещение") Тогда
		Возврат "Перемещение";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.Доход") Тогда
		Возврат "Доход";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.МыВернулиДолг") Тогда
		Возврат "МыВернулиДолг";
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.УниверсальнаяОперация") Тогда
		Возврат "УниверсальнаяОперация";
	Иначе
		Возврат "";
	КонецЕсли; 

КонецФункции

&НаСервере
Процедура ПропуститьПлановуюОперациюСервер(СтруктураОперации)

	НачатьТранзакцию();
	
	Попытка
	
		ЗаписьДаты = РегистрыСведений.ДатыРасписаний.СоздатьМенеджерЗаписи();
		ЗаписьДаты.ВладелецРасписания = СтруктураОперации.ШаблонОперации;
		ЗаписьДаты.ПлановаяДата = СтруктураОперации.ПлановаяДата;
		ЗаписьДаты.Прочитать();
		Если ЗначениеЗаполнено(ЗаписьДаты.ПлановаяОперация) Тогда
			ОбъектОперации = ЗаписьДаты.ПлановаяОперация.ПолучитьОбъект();
			ОбъектПроведен = ОбъектОперации.Проведен;
		Иначе
			ОбъектОперации = Неопределено;
			ОбъектПроведен = Ложь;
		КонецЕсли; 

		ЗаписьДаты.Пропустить   = НЕ ЗаписьДаты.Пропустить;
		ЗаписьДаты.Записать(Истина);
		
		// Проверяем актуальность расписания
		ЗаписьРасписания = РегистрыСведений.Расписания.СоздатьМенеджерЗаписи();
		ЗаписьРасписания.ВладелецРасписания = СтруктураОперации.ШаблонОперации;
		ЗаписьРасписания.Прочитать();
		Если ЗаписьРасписания.Выбран() И ЗаписьРасписания.Периодичность = Перечисления.СпособыПовторовСобытий.ВУказанныеДаты Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ВладелецРасписания", СтруктураОперации.ШаблонОперации);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МАКСИМУМ(ДатыРасписаний.АктуальнаяДата) КАК АктуальнаяДата
			|ИЗ
			|	РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
			|ГДЕ
			|	ДатыРасписаний.ВладелецРасписания = &ВладелецРасписания
			|	И ДатыРасписаний.Пропустить = ЛОЖЬ";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.АктуальнаяДата) И Выборка.АктуальнаяДата <> ЗаписьРасписания.ДатаОкончанияРасписания Тогда
				ЗаписьРасписания.КоличествоПовторов = 0;
				ЗаписьРасписания.ДатаОкончанияРасписания = Выборка.АктуальнаяДата;
				ЗаписьРасписания.Записать(Истина);
			КонецЕсли; 
		КонецЕсли; 
		
		
		Если ОбъектОперации <> Неопределено Тогда
			Если ЗаписьДаты.Пропустить Тогда
				РежимЗаписи = ?(ОбъектОперации.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись);
			Иначе
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
			ОбъектОперации.Записать(РежимЗаписи);
			ОбъектПроведен = ОбъектОперации.Проведен;
		КонецЕсли; 

		ПлановыеОперации.СформироватьОборотыШаблонаДокументов(СтруктураОперации.ШаблонОперации);
	
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не удалось пропустить операцию'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
			+ ":" + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщение.Сообщить(); 
		ОтменитьТранзакцию();
		Возврат;
		
	КонецПопытки; 
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли; 
	
	ОбновитьСписокШаблонов();

КонецПроцедуры

// Дополняет текст запроса формированием временной таблицы всех элементов справочников, которые могут быть использованы в качестве статей бюджета. 
//	Каждая "статья бюджета" во временной таблице дополняется:
//		* полным ключом статьи (ключ доходов начинается с "10.", ключ расходов с "20.")
//		* текущими настройками пользователя для выбранных варианта/раздела бюджета (видимость статьи в бюджете и ее порядок в общем списке статей)
//		* наличием плановых сумм по статье, что позволяет в предыдущих периодах видеть план/факт по статьям, ставшим неактуальными
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&МинимальнаяКалендарнаяДата - Дата - календарное начало самого первого бюджетного периода. Например, 
//					если бюджетный период "МЕСЯЦ" начинается с 10.05, его календарным началом будет 01.05.хххх 00:00:00
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//
// Параметры
//	ТекстЗапроса     - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура или Неопределено - структура, в которую добавляются имена и индексы результатов пакетного запроса
//
&НаСервере
Процедура ДополнитьТекстЗапросаКлючамиБюджетныхСтатей(ТекстЗапроса, СтруктураЗапроса)

	Если СтруктураЗапроса = Неопределено Тогда
		СтруктураЗапроса = Новый Структура;
	КонецЕсли;
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("АктивныеСтатьиПериода", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица """ + "АктивныеСтатьиПериода"" ";
	
	#Область ТекстЗапроса
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ
	|	АктивныеСтатьи.ВариантБюджета КАК ВариантБюджета,
	|	АктивныеСтатьи.РазделБюджета КАК РазделБюджета,
	|	АктивныеСтатьи.ТипПоказателя КАК ТипПоказателя,
	|	АктивныеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	АктивныеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	АктивныеСтатьи.Сумма КАК Сумма,
	|	АктивныеСтатьи.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|	ЕСТЬNULL(ПоказателиБюджета.Порядок, АктивныеСтатьи.Порядок) КАК Порядок
	|ПОМЕСТИТЬ АктивныеСтатьиПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоказателиБюджета.ВариантБюджета КАК ВариантБюджета,
	|		МАКСИМУМ(ПоказателиБюджета.НачалоПериода) КАК НачалоПериода,
	|		ПоказателиБюджета.РазделБюджета КАК РазделБюджета,
	|		ПоказателиБюджета.ТипПоказателя КАК ТипПоказателя,
	|		ПоказателиБюджета.ГрафаБюджета КАК ГрафаБюджета,
	|		ПоказателиБюджета.СтатьяБюджета КАК СтатьяБюджета,
	|		СУММА(ПоказателиБюджета.Сумма) КАК Сумма,
	|		ПоказателиБюджета.ГрафаБюджета.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		МАКСИМУМ(ПоказателиБюджета.Порядок) КАК Порядок
	|	ИЗ
	|		РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|	ГДЕ
	|		ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|		И (&РазделБюджета = """"
	|				ИЛИ ПоказателиБюджета.РазделБюджета = &РазделБюджета)
	|		И ПоказателиБюджета.НачалоПериода МЕЖДУ &МинимальнаяКалендарнаяДатаПросмотра И &Дата2
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоказателиБюджета.ВариантБюджета,
	|		ПоказателиБюджета.РазделБюджета,
	|		ПоказателиБюджета.ТипПоказателя,
	|		ПоказателиБюджета.ГрафаБюджета,
	|		ПоказателиБюджета.СтатьяБюджета,
	|		ПоказателиБюджета.ГрафаБюджета.ОтношениеКНакоплениям) КАК АктивныеСтатьи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|		ПО (АктивныеСтатьи.ВариантБюджета = ПоказателиБюджета.ВариантБюджета
	|				И АктивныеСтатьи.НачалоПериода = ПоказателиБюджета.НачалоПериода
	|				И АктивныеСтатьи.РазделБюджета = ПоказателиБюджета.РазделБюджета
	|				И АктивныеСтатьи.ГрафаБюджета = ПоказателиБюджета.ГрафаБюджета
	|				И АктивныеСтатьи.СтатьяБюджета = ПоказателиБюджета.СтатьяБюджета)
	|	";
	
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", 
				"//" + КомментарийЗапроса + "//////////////////////////////////////////////////////////////////////////////" + Символы.ПС, 
				ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("КлючиСтатей", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица """ + "КлючиСтатей"" ";
	
	// Запрос заполняет временную таблицу всеми возможными статьями бюджета и их полными ключами.
	//	В дальнейшем эта таблица может использоваться для группировки оборотов по любому элементу любого справочника 
	//	в те бюджетные статьи, для которых настроена видимость в бюджете.
	#Область ТекстЗапроса
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ
	|	ВсеСтатьи.ТипПоказателя,
	|	ВсеСтатьи.ОтношениеКНакоплениям,
	|	ВсеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	ВсеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	ВсеСтатьи.АктивностьСтатьи,
	|	ВсеСтатьи.Наименование,
	|	ВсеСтатьи.РодительскаяСтатья,
	|	ВЫБОР
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""10.99.""
	|			ТОГДА ""99999.10.""
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""20.99.""
	|			ТОГДА ""99999.20.""
	|		ИНАЧЕ ВсеСтатьи.КлючСтатьи
	|	КОНЕЦ КАК КлючСтатьи,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &РазделБюджета = """"
	|					ИЛИ &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|				ТОГДА ВсеСтатьи.ВидимостьПоУмолчаниюДляСвободныхДенег
	|			ИНАЧЕ ВсеСтатьи.ВидимостьПоУмолчаниюДляНакоплений
	|		КОНЕЦ) КАК ВидимостьПоУмолчанию,
	|	МАКСИМУМ(НЕ АктивныеСтатьи.СтатьяБюджета ЕСТЬ NULL) КАК Видимость,
	|	МАКСИМУМ(ЕСТЬNULL(АктивныеСтатьи.Сумма, 0) <> 0) КАК ПоСтатьеЕстьСуммы,
	|	ВсеСтатьи.ПорядокПоУмолчанию,
	|	МАКСИМУМ(ЕСТЬNULL(АктивныеСтатьи.Порядок, ВсеСтатьи.ПорядокПоУмолчанию + 99)) КАК Порядок
	|ПОМЕСТИТЬ КлючиСтатей
	|ИЗ
	|	(
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя КАК ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка КАК ГрафаБюджета,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета, ГрафыБюджета.Ссылка) КАК СтатьяБюджета,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета.Активность, ИСТИНА) КАК АктивностьСтатьи,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета.Наименование, ГрафыБюджета.Наименование) КАК Наименование,
	|		ВЫБОР
	|			КОГДА КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете = НЕОПРЕДЕЛЕНО
	|				ТОГДА ГрафыБюджета.Ссылка
	|			ИНАЧЕ КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете
	|		КОНЕЦ КАК РодительскаяСтатья,
	|		ГрафыБюджета.Код + ЕСТЬNULL(КлючиБюджетныхСтатей.Ключ, """") КАК КлючСтатьи,
	|		ВЫБОР
	|			КОГДА ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита))
	|					И КлючиБюджетныхСтатей.СтатьяБюджета ССЫЛКА Справочник.Долги
	|				ТОГДА ЛОЖЬ
	|			КОГДА КлючиБюджетныхСтатей.СтатьяБюджета В (ЗНАЧЕНИЕ(Справочник.СтатьиДоходов.ПрочиеДоходы), ЗНАЧЕНИЕ(Справочник.СтатьиРасходов.ПрочиеРасходы))
	|				ТОГДА ЛОЖЬ
	|			КОГДА ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета, ГрафыБюджета.Ссылка) В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы))
	|					ИЛИ КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете = НЕОПРЕДЕЛЕНО
	|						И КлючиБюджетныхСтатей.СтатьяБюджета.Активность
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВидимостьПоУмолчаниюДляСвободныхДенег,
	|		ЛОЖЬ КАК ВидимостьПоУмолчаниюДляНакоплений,
	|		ГрафыБюджета.ПорядокПоУмолчанию КАК ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиСтатей КАК КлючиБюджетныхСтатей
	|			ПО ГрафыБюджета.ТипСтатьи = КлючиБюджетныхСтатей.ТипСтатьи
	|				И (НЕ КлючиБюджетныхСтатей.ТипСтатьи В (""Кошельки"", ""Имущество""))
	|				И (НЕ КлючиБюджетныхСтатей.ИсключатьИзБюджета)
	|				И (ВЫБОР 
	|					КОГДА ГрафыБюджета.Ссылка = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита) 
	|						ТОГДА НЕ ВЫРАЗИТЬ(КлючиБюджетныхСтатей.СтатьяБюджета КАК Справочник.Долги).ИспользоватьДляУчетаВыданныхДолгов
	|					КОГДА ГрафыБюджета.Ссылка = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы) 
	|						ТОГДА НЕ ВЫРАЗИТЬ(КлючиБюджетныхСтатей.СтатьяБюджета КАК Справочник.Долги).ИспользоватьДляУчетаВзятыхДолгов
	|					Иначе Истина
	|				КОНЕЦ)
	|	ГДЕ
	|		НЕ ГрафыБюджета.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка,
	|		ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка),
	|		ИСТИНА,
	|		""Свободные деньги"",
	|		ГрафыБюджета.Ссылка,
	|		ГрафыБюджета.Код + ""0."",
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ГрафыБюджета.ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|	ГДЕ
	|		ГрафыБюджета.ОтношениеКНакоплениям > 0
	|		И НЕ ГрафыБюджета.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка,
	|		ГрафыБюджета.Ссылка,
	|		ИСТИНА,
	|		ГрафыБюджета.Наименование,
	|		ГрафыБюджета.Родитель,
	|		ГрафыБюджета.Код,
	|		ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)),
	|		ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)),
	|		ГрафыБюджета.ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|	ГДЕ
	|		НЕ ГрафыБюджета.ПометкаУдаления
	|		
	|		) КАК ВсеСтатьи
	|		
	|		Левое соединение АктивныеСтатьиПериода КАК АктивныеСтатьи
	|		ПО (АктивныеСтатьи.ОтношениеКНакоплениям = ВсеСтатьи.ОтношениеКНакоплениям
	|				И АктивныеСтатьи.ГрафаБюджета = ВсеСтатьи.ГрафаБюджета
	|				И АктивныеСтатьи.СтатьяБюджета = ВсеСтатьи.СтатьяБюджета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеСтатьи.ТипПоказателя,
	|	ВсеСтатьи.ОтношениеКНакоплениям,
	|	ВсеСтатьи.ГрафаБюджета,
	|	ВсеСтатьи.СтатьяБюджета,
	|	ВсеСтатьи.АктивностьСтатьи,
	|	ВсеСтатьи.Наименование,
	|	ВсеСтатьи.РодительскаяСтатья,
	|	ВЫБОР
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""10.99.""
	|			ТОГДА ""99999.10.""
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""20.99.""
	|			ТОГДА ""99999.20.""
	|		ИНАЧЕ ВсеСтатьи.КлючСтатьи
	|	КОНЕЦ,
	|	ВсеСтатьи.ПорядокПоУмолчанию
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтатьи,
	|	ГрафаБюджета,
	|	СтатьяБюджета";
	
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", 
				"//" + КомментарийЗапроса + "//////////////////////////////////////////////////////////////////////////////" + Символы.ПС, 
				ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
	
	
КонецПроцедуры

// Дополняет запрос выборкой показатедей план/факт и списком плановых операций
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&ДатаОстатков - Дата - наименьшая из 2-х дат: начало рассматриваемого в бюджете периода или текущая дата
//	&Дата1 - Дата - начальная дата самого первого бюджетного периода (задана с учетом смещения от календарного начала)
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//	&ВалютаУчета - СправочникСсылка.Валюты - значение одноименной константы
//	&ВалютаВарианта - СправочникСсылка.Валюты - валюта выбранного варианта бюджета
//	&СчетОстатков - ПланСчетовСсылка.РазделыУчета - счет, по которому требуется получить остатки денег (свободные, накопления или общий итог)
//
//Временные таблицы, которые должны быть в тексте запроса до выполнения данного запроса: 
//		"ТаблицаПериодов" - пронумерованные периоды бюджета в пределах заданного пользователем календарного периода (см. ДополнитьЗапросТаблицейПериодов())
//		"КлючиСтатей"  - бюджетные статьи с уникальными ключами и настройками пользователя (см. ДополнитьТекстЗапросаКлючамиБюджетныхСтатей())
//		"ПоследниеКурсы"  - СрезПослдених регистра "КурсыВалют" на дату "Дата2" (создание таблицы см. в процедуре ДополнитьЗапросОборотамиПланФакт())
//
// Параметры
//	ТекстЗапроса - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура - структура, в которую добавляются имена и индексы результатов пакетного запроса.
//
&НаСервере
Процедура ДополнитьТекстЗапросаСпискомПлановыхОпераций(ТекстЗапроса, СтруктураЗапроса)
	
	// Дополняем текст запросом последних курсов валют
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ПоследниеКурсы", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ПоследниеКурсы"" ";
	
	#Область ТекстЗапроса
	// Для корректного пересчета оборотов в валюту варианта требуется, чтобы курсы всех валют, кроме валюты учета, были указанны на 
	//	каждый день (даже если они повторяются). В случае, если курс валюиты на какой-либо из дней не будет найден, для пересчета
	//	будет использоваться последний курс на указанную в параметрах "Дата2".
	// Сохраняем последние курсы во временную таблицу
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КурсыВалютСрезПоследних.Валюта,
	|	ВЫБОР
	|		КОГДА КурсыВалютСрезПоследних.Курс = 0
	|			ТОГДА 1
	|		ИНАЧЕ КурсыВалютСрезПоследних.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА КурсыВалютСрезПоследних.Кратность = 0
	|			ТОГДА 1
	|		ИНАЧЕ КурсыВалютСрезПоследних.Кратность
	|	КОНЕЦ КАК Кратность
	|ПОМЕСТИТЬ ПоследниеКурсы
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата2, БазоваяВалюта = &ВалютаУчета) КАК КурсыВалютСрезПоследних";
	#КонецОбласти
	
	// Дополняем текст запросом оборотов плановых и фактических операций
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ОборотыОпераций", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ОборотыОпераций"" ";
	
	#Область ТекстЗапроса
	// Создаем временную таблицу оборотов плановых и фактических операций.
	//	Обороты получем из таблиц итогов регистров накоплений по дням - чтобы получить курсы валют на каждый день
	//	Началом периода получения итогов по плановым операциям устанавливаем "ДатаОстатков" - чтобы получить обороты от текущей даты 
	//				(даты, на которую получаем текущие остатки) до даты начала рассматриваемого периода. Эти обороты будут 
	//				использоваться в расчете остатков на начало рассматриваемого периода.
	//				Отсекать обороты рассматриваемого периода от неактуальным нужно по значению поля "АктуальныйОборот"
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПланОперации.Период, ДЕНЬ) КАК День,
	|	ПланОперации.Регистратор КАК Шаблон,
	|	ДатыРасписаний.ПлановаяОперация КАК Операция,
	|	ДатыРасписаний.ПлановаяДата КАК ПлановаяДата,
	|	ДатыРасписаний.СуммаДолга КАК СуммаДолга,
	|	ДатыРасписаний.СуммаПроцентов КАК СуммаПроцентов,
	|	ДатыРасписаний.СуммаКомиссии КАК СуммаКомиссии,
	|	ДатыРасписаний.АктуальнаяДата КАК ДатаПлановойОперации,
	|	ПланОперации.ТипПоказателя КАК ТипПоказателя,
	|	ВЫБОР
	|		КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.ГрафыБюджета
	|			ТОГДА ПланОперации.СтатьяБюджета.ОтношениеКНакоплениям
	|		КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.ФинансовыеЦели
	|			ТОГДА ВЫБОР
	|					КОГДА ПланОперации.РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|						ТОГДА -1
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтношениеКНакоплениям,
	|	ВЫБОР
	|		КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.Имущество
	|			ТОГДА ВЫБОР
	|					КОГДА ПланОперации.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыручкаЗаИмущество)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПокупкаИмущества)
	|				КОНЕЦ
	|		КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.Долги
	|				И ПланОперации.СтатьяБюджета.ИспользоватьДляУчетаВзятыхДолгов
	|				И ПланОперации.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита)
	|		КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.Долги
	|				И ПланОперации.СтатьяБюджета.ИспользоватьДляУчетаВыданныхДолгов
	|				И ПланОперации.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Списание)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы)
	|		КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.КошелькиИСчета
	|				И ПланОперации.СтатьяБюджета.ТипСчета <> ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.БанковскаяКартаКредитная)
	|			ТОГДА ВЫБОР
	|					КОГДА ПланОперации.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ИспользованиеКредитнойКарты)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПереводНаКредитнуюКарту)
	|				КОНЕЦ
	|		КОГДА ПланОперации.СтатьяБюджета В (Значение(Справочник.ГрафыБюджета.ФинЦельВозвратИзНакопления), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ФинЦельПереводВНакопление))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|		ИНАЧЕ ПланОперации.СтатьяБюджета
	|	КОНЕЦ КАК СтатьяОперации,
	|	ПланОперации.Валюта КАК Валюта,
	|	ПланОперации.Сумма КАК СуммаПлановыхОпераций,
	|	0 КАК СуммаФакт
	|ПОМЕСТИТЬ ОборотыОпераций
	|ИЗ
	|	РегистрНакопления.ОборотыПлановыхОпераций КАК ПланОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
	|		ПО ПланОперации.Регистратор = ДатыРасписаний.ВладелецРасписания
	|			И ПланОперации.ПлановаяДата = ДатыРасписаний.ПлановаяДата
	|			И ДатыРасписаний.АктуальнаяДата МЕЖДУ &Дата1 И &Дата2
	|ГДЕ
	|	ПланОперации.Активность
	|	И ПланОперации.Период МЕЖДУ &Дата1 И &Дата2
	|	И (&РазделБюджета = """"
	|			ИЛИ ПланОперации.РазделБюджета = &РазделБюджета)
	|			И (НЕ ПланОперации.СтатьяБюджета ССЫЛКА Справочник.КошелькиИСчета
	|					ИЛИ ВЫРАЗИТЬ(ПланОперации.СтатьяБюджета КАК Справочник.КошелькиИСчета).ТипСчета =  ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.БанковскаяКартаКредитная))
	|";
	
	#КонецОбласти
	
	
	// Дополняем текст запросом пересчета сумм операций и дополняем суммы операций суммами бюджета
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВесьБюджет", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " таблица ""ВесьБюджет"" ";
	
	#Область ТекстЗапроса
	// Пересчитываем обороты из таблицы "ОборотыОпераций" в валюту бюджета и дополняем результат показателями самого бюджета
	// Дополнительно получаем для каждой статьи ее ключ, а результат сворачиваем по номерам периодов
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	ОборотыОпераций.Шаблон КАК Шаблон,
	|	ОборотыОпераций.Операция КАК Операция,
	|	ОборотыОпераций.ТипПоказателя КАК ТипПоказателя,
	|	ОборотыОпераций.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|	ОборотыОпераций.СтатьяОперации КАК СтатьяОперации,
	|	ВЫБОР
	|		КОГДА ОборотыОпераций.Валюта = &ВалютаВарианта
	|			ТОГДА ОборотыОпераций.СуммаПлановыхОпераций
	|		ИНАЧЕ ВЫРАЗИТЬ(ОборотыОпераций.СуммаПлановыхОпераций * ЕСТЬNULL(КурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(КурсыВалютыОтчета.Кратность, ЕСТЬNULL(ПоследниеКурсыОтчета.Кратность, 0)) / ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютыОтчета.Курс, ЕСТЬNULL(ПоследниеКурсыОтчета.Курс, 1)) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|						ТОГДА 1
	|					ИНАЧЕ ЕСТЬNULL(КурсыВалютыОтчета.Курс, ЕСТЬNULL(ПоследниеКурсыОтчета.Курс, 1)) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|				КОНЕЦ КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПлановыхОпераций,
	|	ЕСТЬNULL(ВсеСтатьиВарианта.КлючСтатьи, """") КАК КлючСтатьи,
	|	ЕСТЬNULL(ВсеСтатьиВарианта.ГрафаБюджета, НЕОПРЕДЕЛЕНО) КАК ГрафаБюджета,
	|	ОборотыОпераций.СуммаДолга КАК СуммаДолга,
	|	ОборотыОпераций.СуммаПроцентов КАК СуммаПроцентов,
	|	ОборотыОпераций.СуммаКомиссии КАК СуммаКомиссии,
	|	ОборотыОпераций.ПлановаяДата КАК ПлановаяДата,
	|	ОборотыОпераций.ДатаПлановойОперации
	|ПОМЕСТИТЬ ВесьБюджет
	|ИЗ
	|	ОборотыОпераций КАК ОборотыОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК ВсеСтатьиВарианта
	|		ПО ОборотыОпераций.ТипПоказателя = ВсеСтатьиВарианта.ТипПоказателя
	|			И ОборотыОпераций.ОтношениеКНакоплениям = ВсеСтатьиВарианта.ОтношениеКНакоплениям
	|			И ОборотыОпераций.СтатьяОперации = ВсеСтатьиВарианта.СтатьяБюджета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ОборотыОпераций.День = КурсыВалют.Период
	|			И ОборотыОпераций.Валюта = КурсыВалют.Валюта
	|			И (КурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыОтчета
	|		ПО (КурсыВалют.Период = КурсыВалютыОтчета.Период)
	|			И (КурсыВалютыОтчета.Валюта = &ВалютаВарианта)
	|			И (КурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсы
	|		ПО ОборотыОпераций.Валюта = ПоследниеКурсы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсыОтчета
	|		ПО (ПоследниеКурсыОтчета.Валюта = &ВалютаВарианта)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипПоказателя,
	|	ОтношениеКНакоплениям,
	|	СтатьяОперации,
	|	КлючСтатьи";
	
	#КонецОбласти
	
	
	// Дополняем текст запросом выбора оборотов по актуальным статьям бюджета
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВыборкаПоказателиБюджета", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка показателей по актуальным статьям бюджета ";
	
	#Область ТекстЗапроса
	// Для каждой статьи из таблицы "ВесьБюджет" находим ближайшую родительскую статью в таблице "АктуальныеСтатьи"
	// Сопоставление осуществляется через "КлючСтатьи".
	//	Все обороты, для которых не найдется соответствия в актуальных статьях автоматически будут сгруппированы в "Прочих доходах" и "Прочих расходах",
	//	т.к. именно у этих бюджетных статей наименьшие ключи: "10." и "20." соответственно
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	ВесьБюджет.Шаблон КАК Шаблон,
	|	ВесьБюджет.Операция КАК Операция,
	|	ЕСТЬNULL(АктуальныеСтатьи.ТипПоказателя, НЕОПРЕДЕЛЕНО) КАК ТипПоказателя,
	|	ЕСТЬNULL(АктуальныеСтатьи.ОтношениеКНакоплениям, 0) КАК ОтношениеКНакоплениям,
	|	СУММА(ВесьБюджет.СуммаПлановыхОпераций) КАК СуммаПлановыхОпераций,
	|	ВесьБюджет.ПлановаяДата КАК ПлановаяДата,
	|	ВесьБюджет.СуммаДолга КАК СуммаДолга,
	|	ВесьБюджет.СуммаПроцентов КАК СуммаПроцентов,
	|	ВесьБюджет.СуммаКомиссии КАК СуммаКомиссии,
	|	ВесьБюджет.ДатаПлановойОперации
	|ИЗ
	|	ВесьБюджет КАК ВесьБюджет
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВесьБюджет.ГрафаБюджета КАК ГрафаБюджета,
	|			ВесьБюджет.СтатьяОперации КАК ТекущаяСтатья,
	|			МАКСИМУМ(ЕСТЬNULL(СтатьиБюджета.КлючСтатьи, ВЫБОР
	|						КОГДА ВесьБюджет.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|							ТОГДА ""99999.10.""
	|						ИНАЧЕ ""99999.20.""
	|					КОНЕЦ)) КАК КлючАктуальнойСтатьи
	|		ИЗ
	|			ВесьБюджет КАК ВесьБюджет
	|				ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК СтатьиБюджета
	|				ПО ВесьБюджет.ГрафаБюджета = СтатьиБюджета.ГрафаБюджета
	|					И (ВесьБюджет.КлючСтатьи МЕЖДУ СтатьиБюджета.КлючСтатьи И СтатьиБюджета.КлючСтатьи + ""яяя"")
	|					И (СтатьиБюджета.Видимость
	|						ИЛИ СтатьиБюджета.ПоСтатьеЕстьСуммы)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВесьБюджет.ГрафаБюджета,
	|			ВесьБюджет.СтатьяОперации) КАК КлючиАктуальныхСтатей
	|			ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК АктуальныеСтатьи
	|			ПО КлючиАктуальныхСтатей.КлючАктуальнойСтатьи = АктуальныеСтатьи.КлючСтатьи
	|		ПО ВесьБюджет.ГрафаБюджета = КлючиАктуальныхСтатей.ГрафаБюджета
	|			И ВесьБюджет.СтатьяОперации = КлючиАктуальныхСтатей.ТекущаяСтатья
	|ГДЕ
	|	(АктуальныеСтатьи.Видимость
	|			ИЛИ АктуальныеСтатьи.ПоСтатьеЕстьСуммы)
	|	И (&СтатьяБюджета = """"
	|			ИЛИ АктуальныеСтатьи.СтатьяБюджета = &СтатьяБюджета)
	|	И (&ГрафаБюджета = """"
	|			ИЛИ АктуальныеСтатьи.ГрафаБюджета = &ГрафаБюджета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВесьБюджет.Шаблон,
	|	ВесьБюджет.Операция,
	|	ЕСТЬNULL(АктуальныеСтатьи.ТипПоказателя, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(АктуальныеСтатьи.ОтношениеКНакоплениям, 0),
	|	ВесьБюджет.СуммаДолга,
	|	ВесьБюджет.СуммаПроцентов,
	|	ВесьБюджет.СуммаКомиссии,
	|	ВесьБюджет.ПлановаяДата,
	|	ВесьБюджет.ДатаПлановойОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипПоказателя,
	|	ВесьБюджет.ДатаПлановойОперации";
	
	#КонецОбласти
	
КонецПроцедуры


#КонецОбласти







