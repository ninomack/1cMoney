////////////////////////////////////////////////////////////////////////////////
//Обработка.РазделБюджет.Форма.РедакторПоказателя
//  Раскрывает состав показателя бюджета и позволяет отредактировать комментарий и сумму по бюджету
//  
//Параметры формы:
//  ПарметрыСтроки, СтатьяБюджета,ГрафаБюджета,НачалоКалендарногоПериода,
// 	НачалоПериода,ОкончаниеПериода,ВариантБюджета,РазделБюджета,ТипПоказателя,СуммаФакт
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветФонаПредупреждения = ЦветаСтиля.СобытиеОтказ;
	
	ПараметрыЯчейки  = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Параметры.ПараметрыЯчейки);
	ПараметрыПериода = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Параметры.ПараметрыПериода);
	ВариантБюджета   = Параметры.ВариантБюджета;
	РазделБюджета    = Параметры.РазделБюджета;
	Комментарий      = ПараметрыЯчейки.Комментарий;
	
	Заголовок = ПараметрыЯчейки.ПредставлениеСтатьи + " (" + ПараметрыПериода.ПредставлениеПериода + ")";
	
	Если ПараметрыЯчейки.ТипПоказателя = Перечисления.ТипыБюджетныхПоказателей.Поступление Тогда
		Элементы.ДекорацияВТомЧисле.Заголовок = НСтр("ru='Запланировано получить:'");
	Иначе
		Элементы.ДекорацияВТомЧисле.Заголовок = НСтр("ru='Запланировано потратить:'");
	КонецЕсли;
	
	СуммаПоказателя       = ПараметрыЯчейки.СуммаПлан;
	СуммаПлановыхОпераций = ПараметрыЯчейки.СуммаПлановыхОперацийПоСамойСтатье;
	СуммаПоБюджету        = ПараметрыЯчейки.СуммаПоБюджетуПоСамойСтатье;
	ПланПодчиненныхСтатей = ПараметрыЯчейки.СуммаПланПоПодстатьям;
	
	Элементы.СуммаПоБюджету.ТолькоПросмотр = РазделБюджета = "";
	Элементы.КопироватьНаСледующиеПериоды.ТолькоПросмотр = Элементы.СуммаПоБюджету.ТолькоПросмотр;
	Элементы.СуммаПоказателя.ТолькоПросмотр = Элементы.СуммаПоБюджету.ТолькоПросмотр;
	Элементы.ФормаОк.Доступность = Не Элементы.СуммаПоБюджету.ТолькоПросмотр;
	
	ОбновитьНадписи(ЭтотОбъект);
	
	ОбщегоНазначенияДеньги.СброситьРазмерИПоложениеФормы(ЭтотОбъект);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаПоБюджетуПриИзменении(Элемент)
	
	Если ПланПодчиненныхСтатей <> 0 и СуммаПоБюджету + СуммаПлановыхОпераций + ПланПодчиненныхСтатей < ПланПодчиненныхСтатей Тогда
		ТекстПредупреждения = НСтр("ru='Сумма по статье не может быть меньше суммы подчиненных ей статей!'");
		ПоказатьПредупреждение(, ТекстПредупреждения, , Заголовок);
		СуммаПоБюджету = 0;
	КонецЕсли;
	
	СуммаПоказателя = ПланПодчиненныхСтатей + СуммаПлановыхОпераций + СуммаПоБюджету;
	ОбновитьНадписи(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПоказателяПриИзменении(Элемент)
	
	ПриИзмененииСуммаПоказателяКлиент();
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Если РазделБюджета <> "" Тогда
		Если КопироватьНаСледующиеПериоды Тогда
			Состояние(НСтр("ru='Копирование суммы на будущие периоды...'"));
		КонецЕсли;
		ЗаписатьИзмененияПоказателейСервер();
		Закрыть(Истина);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьСписокПлановыхОпераций(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НачалоКалендарногоПериода",  ПараметрыПериода.НачалоКалендарногоПериода);
	ПараметрыФормы.Вставить("НачалоПериода",              ПараметрыПериода.НачалоПериода);
	ПараметрыФормы.Вставить("ОкончаниеПериода",           ПараметрыПериода.ОкончаниеПериода);
	ПараметрыФормы.Вставить("СтатьяБюджета",              ПараметрыЯчейки.СтатьяБюджета);
	ПараметрыФормы.Вставить("ВариантБюджета",             ВариантБюджета);
	ПараметрыФормы.Вставить("РазделБюджета",              РазделБюджета);
	ПараметрыФормы.Вставить("СтатьяБюджета",              ПараметрыЯчейки.СтатьяБюджета);
	ПараметрыФормы.Вставить("ГрафаБюджета",               ПараметрыЯчейки.ГрафаБюджета);
	ПараметрыФормы.Вставить("Заголовок",                  Заголовок);
	
	Оповещение = Новый ОписаниеОповещения("СписокПлановыхОперацийЗавершение", ЭтотОбъект);
	ОткрытьФорму(ПолучитьПолноеИмяФормы("СписокПлановыхОпераций"), ПараметрыФормы, , , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНадписи(Форма)

	ТекстНадписи = "";
	
	Если Форма.СуммаПлановыхОпераций <> 0 И Форма.СуммаПоказателя < Форма.СуммаПлановыхОпераций Тогда
		ТекстНадписи = НСтр("ru='Сумма по статье меньше сумм плановых операций!'");
	КонецЕсли;
	Если Форма.Элементы.Декорация1.Заголовок <> ТекстНадписи Тогда
		Форма.Элементы.Декорация1.Заголовок = ТекстНадписи;
		Форма.Элементы.Декорация1.ЦветФона = ?(ЗначениеЗаполнено(ТекстНадписи), Форма.ЦветФонаПредупреждения, Новый Цвет);
	КонецЕсли;
	
	ТекстСпискаОпераций = ?(Форма.СуммаПлановыхОпераций = 0, "", НСтр("ru='(список операций)'")); 
	
	Если Форма.Элементы.ОткрытьСписокШаблонов.Заголовок <> ТекстСпискаОпераций Тогда
		Форма.Элементы.ОткрытьСписокШаблонов.Заголовок = ТекстСпискаОпераций;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьПолноеИмяФормы(ИмяФормы)

	Возврат СтрЗаменить(ЭтотОбъект.ИмяФормы, "РедакторПоказателя", ИмяФормы);

КонецФункции

&НаКлиенте
Процедура СписокПлановыхОперацийЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Число") Тогда
		
		Разница = Результат - СуммаПлановыхОпераций;
		СуммаПлановыхОпераций = Результат;
		СуммаПоказателя = СуммаПоказателя + Разница;
		ПриИзмененииСуммаПоказателяКлиент();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСуммаПоказателяКлиент()

	СуммаПоБюджету = СуммаПоказателя - ПланПодчиненныхСтатей - СуммаПлановыхОпераций;
	Если ПланПодчиненныхСтатей <> 0 и СуммаПоБюджету + СуммаПлановыхОпераций + ПланПодчиненныхСтатей < ПланПодчиненныхСтатей Тогда
		ТекстПредупреждения = НСтр("ru='Сумма по статье не может быть меньше суммы, запланированной по подчиненным статьям!'");
		ПоказатьПредупреждение(, ТекстПредупреждения, , Заголовок);
		СуммаПоказателя = ПланПодчиненныхСтатей + СуммаПлановыхОпераций;
	КонецЕсли;
	
	СуммаПоБюджету = СуммаПоказателя - ПланПодчиненныхСтатей - СуммаПлановыхОпераций;
	ОбновитьНадписи(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияПоказателейСервер()

	Если РазделБюджета = "" Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПеремещениеПоРазделам = ЭтоПеремещениеПоРазделамБюджета(ПараметрыЯчейки.ГрафаБюджета);
	Если Не ЗначениеЗаполнено(ПараметрыЯчейки.СтатьяБюджета) И ЭтоПеремещениеПоРазделам Тогда
		СтатьяБюджета = Справочники.ФинансовыеЦели.ПустаяСсылка();
	Иначе
		СтатьяБюджета = ПараметрыЯчейки.СтатьяБюджета;
	КонецЕсли;
	
	Запись = РегистрыСведений.ПоказателиБюджета.СоздатьМенеджерЗаписи();
	Запись.ВариантБюджета = ВариантБюджета;
	Запись.РазделБюджета  = РазделБюджета;
	Запись.НачалоПериода  = ПараметрыПериода.НачалоКалендарногоПериода;
	Запись.ТипПоказателя  = ПараметрыЯчейки.ТипПоказателя;
	Запись.ГрафаБюджета   = ПараметрыЯчейки.ГрафаБюджета;
	Запись.СтатьяБюджета  = СтатьяБюджета;
	Запись.Сумма          = СуммаПоБюджету;
	Запись.Порядок        = ПараметрыЯчейки.Порядок;
	Запись.Комментарий    = Комментарий;
	
	Запись.Записать(Истина);
	
	Если ЭтоПеремещениеПоРазделам Тогда
		// Для перемещений между разделами бюджета автоматически добавляется зеркальная запись
		БюджетированиеСервер.ДобавитьСвязаннуюЗаписьПоРазделуБюджета(Запись);
	КонецЕсли;
	
	Если Не КопироватьНаСледующиеПериоды Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВариантБюджета", ВариантБюджета);
	Запрос.УстановитьПараметр("РазделБюджета",  РазделБюджета);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыПериода.НачалоКалендарногоПериода);
	Запрос.УстановитьПараметр("ГрафаБюджета", ПараметрыЯчейки.ГрафаБюджета);
	Запрос.УстановитьПараметр("ТипПоказателя", ПараметрыЯчейки.ТипПоказателя);
	Запрос.УстановитьПараметр("СтатьяБюджета", ПараметрыЯчейки.СтатьяБюджета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиБюджета.*
	|ИЗ
	|	РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|ГДЕ
	|	ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|	И ПоказателиБюджета.РазделБюджета = &РазделБюджета
	|	И ПоказателиБюджета.ТипПоказателя = &ТипПоказателя
	|	И ПоказателиБюджета.ГрафаБюджета = &ГрафаБюджета
	|	И ПоказателиБюджета.СтатьяБюджета = &СтатьяБюджета
	|	И ПоказателиБюджета.НачалоПериода > &НачалоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВариантБюджета,
	|	НачалоПериода";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = РегистрыСведений.ПоказателиБюджета.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Сумма = СуммаПоБюджету;
		Запись.Записать(Истина);
		
		Если ЭтоПеремещениеПоРазделам Тогда
			// Для перемещений между разделами бюджета автоматически добавляется зеркальная запись
			БюджетированиеСервер.ДобавитьСвязаннуюЗаписьПоРазделуБюджета(Запись);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоПеремещениеПоРазделамБюджета(ГрафаБюджета)

	Возврат ГрафаБюджета = Справочники.ГрафыБюджета.СвободныеДеньгиВозвратИзНакопления
		Или ГрафаБюджета = Справочники.ГрафыБюджета.СвободныеДеньгиПереводВНакопление
		Или ГрафаБюджета = Справочники.ГрафыБюджета.ФинЦельВозвратИзНакопления
		Или ГрафаБюджета = Справочники.ГрафыБюджета.ФинЦельПереводВНакопление;

КонецФункции


#КонецОбласти








