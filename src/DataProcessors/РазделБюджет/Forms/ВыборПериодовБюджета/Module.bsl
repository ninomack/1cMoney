////////////////////////////////////////////////////////////////////////////////
//Обработка.ИмяОбработки.Форма.ИмяФормы
//  _Назначение_
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ПериодПланирования, ВариантБюджета, МаксимальноеКоличествоПериодов");
	Если Не ЗначениеЗаполнено(ВариантБюджета) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если МаксимальноеКоличествоПериодов = 0 Тогда
		МаксимальноеКоличествоПериодов = 24;
	КонецЕсли;
	Если ПериодПланирования = Неопределено Тогда
		ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, ТекущаяДатаКлиентСервер(), );
	КонецЕсли;
	
	НомерМесяца = ВариантБюджета.НомерМесяца;
	ЧислоМесяца = ВариантБюджета.ЧислоМесяца;
	
	ОбновитьПредельныеУсловия(ЭтотОбъект);
	
	Если ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Неделя Тогда
		
	ИначеЕсли ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Месяц Тогда
		
		Элементы.МесяцНачало.СписокВыбора.Очистить();
		Элементы.МесяцОкончание.СписокВыбора.Очистить();
		
		СтрокаФормата = "ДФ='д ММММ'";
		Сдвиг = ?(ВариантБюджета.ЧислоМесяца = 1, 0, -1);
		НачПериода  = Дата(2018, 1, ВариантБюджета.ЧислоМесяца);
		//КонПериода  = ДобавитьМесяц(НачПериода, 1) - 1;
		Если ВариантБюджета.ЧислоМесяца = 1 Тогда
			КонПериода  = КонецМесяца(НачПериода);
		Иначе
			КонПериода  = Мин(КонецМесяца(НачПериода), Дата(2018, Месяц(НачПериода), ВариантБюджета.ЧислоМесяца - 1));
		КонецЕсли;
		
		Для Счетчик = 1 По 12 Цикл
			
			Элементы.МесяцНачало.СписокВыбора.Добавить(Счетчик, Формат(НачПериода, СтрокаФормата));
			Элементы.МесяцОкончание.СписокВыбора.Добавить(Счетчик, Формат(КонПериода, СтрокаФормата));
			
			НачПериода  = ДобавитьМесяц(НачПериода, 1);
			Если ВариантБюджета.ЧислоМесяца = 1 Тогда
				КонПериода  = КонецМесяца(НачПериода);
			Иначе
				КонПериода  = Мин(КонецМесяца(НачПериода), Дата(2018, Месяц(НачПериода), ВариантБюджета.ЧислоМесяца - 1));
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Квартал Тогда
		
		Элементы.КварталНачало.СписокВыбора.Очистить();
		Элементы.КварталОкончание.СписокВыбора.Очистить();
		
		СтрокаФормата = "ДФ='д ММММ'";
		НачПериода  = Дата(2018, ВариантБюджета.НомерМесяца, ВариантБюджета.ЧислоМесяца);
		КонПериода  = ДобавитьМесяц(НачПериода, 3) - 1;
		
		Для Счетчик = 1 По 4 Цикл
			
			Если ВариантБюджета.НомерМесяца > 1 Или ВариантБюджета.ЧислоМесяца > 1 Тогда
				ПредставлениеНачала = НСтр("ru='%1-й кв. (с %2)'");
				ПредставлениеНачала = СтрШаблон(ПредставлениеНачала, Строка(Счетчик), 
							Формат(НачПериода, "ДФ='д МММ'"));
				ПредставлениеОкончания = НСтр("ru='%1-й кв. (по %2)'");
				ПредставлениеОкончания = СтрШаблон(ПредставлениеОкончания, Строка(Счетчик), 
							Формат(КонПериода, "ДФ='д МММ'"));
			Иначе
				ПредставлениеНачала = НСтр("ru='%1-й кв.'");
				ПредставлениеНачала = СтрШаблон(ПредставлениеНачала, Строка(Счетчик));
				ПредставлениеОкончания = НСтр("ru='%1-й кв.'");
				ПредставлениеОкончания = СтрШаблон(ПредставлениеОкончания, Строка(Счетчик));
			КонецЕсли;
			
			Элементы.КварталНачало.СписокВыбора.Добавить(Счетчик, ПредставлениеНачала);
			Элементы.КварталОкончание.СписокВыбора.Добавить(Счетчик, ПредставлениеОкончания);
			
			НачПериода  = ДобавитьМесяц(НачПериода, 3);
			КонПериода  = ДобавитьМесяц(НачПериода, 3) - 1;
			
		КонецЦикла;
		
	ИначеЕсли ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Год Тогда
		
		СтрокаФормата = "ДФ='д ММММ'";
		ТестДата = Дата(2018, НомерМесяца, ЧислоМесяца);
		Элементы.НачалоГода.Заголовок = Формат(ТестДата, СтрокаФормата);
		Элементы.КонецГода.Заголовок = Формат(ДобавитьМесяц(ТестДата, 12) -1, СтрокаФормата);
		
	КонецЕсли;
	
	
	ИзменитьОтображенияПериода(ЭтотОбъект);
	
	Элементы.ГруппаСтраницФормы.ТекущаяСтраница = Элементы["Страница" + ПериодПланирования.ВидПериодаСтрокой];
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// Неделя

&НаКлиенте
Процедура ОписаниеВариантаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "Начало") > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ИзменитьПределПланированияЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.ВариантыБюджетов.ФормаОбъекта", Новый Структура("Ключ", ВариантБюджета), , , , , Оповещение);
		
	ИначеЕсли СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "Предел") > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ИзменитьПределПланированияЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.ВариантыБюджетов.ФормаОбъекта", Новый Структура("Ключ", ВариантБюджета), , , , , Оповещение);
		
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура НеделяНачалоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДопоплнительныеПараметры = Новый Структура("ИзменяемаяЧастьПериода", "НачалоПериода");
	Оповещение = Новый ОписаниеОповещения("ВыборПериодаНеделяЗавершение", ЭтотОбъект, ДопоплнительныеПараметры);
	
	ПараметрыФормы = Новый Структура("НачалоПериода,КонецПериода,ВыбиратьНеделю", 
				НеделяНачало, НачалоНедели(НеделяНачало), Истина);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаДень", ПараметрыФормы, ЭтотОбъект, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НеделяОкончаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДопоплнительныеПараметры = Новый Структура("ИзменяемаяЧастьПериода", "КонецПериода");
	Оповещение = Новый ОписаниеОповещения("ВыборПериодаНеделяЗавершение", ЭтотОбъект, ДопоплнительныеПараметры);
	
	ПараметрыФормы = Новый Структура("НачалоПериода,КонецПериода,ВыбиратьНеделю", 
				НеделяОкончание, КонецНедели(НеделяОкончание), Истина);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаДень", ПараметрыФормы, ЭтотОбъект, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НеделяНачалоПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(НеделяНачало) Тогда
		НеделяНачало = ПериодПланирования.НачальныйПериод.Начало;
	Иначе
		НеделяНачало = НачалоНедели(НеделяНачало);
	КонецЕсли;
	
	Если НеделяОкончание <= НеделяНачало Тогда
		НеделяОкончание = КонецНедели(НеделяНачало);
	КонецЕсли;
	
	ИзменениеНачалоПериодаКлиент(НеделяНачало, НеделяОкончание);
	
КонецПроцедуры

&НаКлиенте
Процедура НеделяОкончаниеПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(НеделяОкончание) Тогда
		НеделяОкончание = ПериодПланирования.КонечныйПериод.Окончание;
	Иначе
		НеделяОкончание = КонецНедели(НеделяОкончание);
	КонецЕсли;
	
	Если НеделяОкончание <= НеделяНачало Тогда
		НеделяНачало = НачалоНедели(НеделяОкончание);
	КонецЕсли;
	
	ИзменениеОкончаниеПериодаКлиент(НеделяНачало, НеделяОкончание);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// Месяц

&НаКлиенте
Процедура МесяцНачалоПриИзменении(Элемент)
	
	МесяцНачалоПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если МесяцНачало = 1 И Направление < 0 Или МесяцНачало = 12 И Направление > 0 Тогда
		Возврат;
	КонецЕсли;
	
	МесяцНачало = МесяцНачало + Направление;
	МесяцНачалоПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончаниеПриИзменении(Элемент)
	
	МесяцОкончаниеПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончаниеРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если МесяцОкончание = 1 И Направление < 0 Или МесяцОкончание = 12 И Направление > 0 Тогда
		Возврат;
	КонецЕсли;
	
	МесяцОкончание = МесяцОкончание + Направление;
	МесяцОкончаниеПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодНачало2ПриИзменении(Элемент)
	
	МесяцНачалоПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодОкончание2ПриИзменении(Элемент)
	МесяцОкончаниеПриИзмененииКлиент();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Квартал

&НаКлиенте
Процедура КварталНачалоПриИзменении(Элемент)
	КварталНачалоПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура КварталНачалоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если КварталНачало = 1 И Направление < 0 Или КварталНачало = 4 И Направление > 0 Тогда
		Возврат;
	КонецЕсли;
	
	КварталНачало = КварталНачало + Направление;
	КварталНачалоПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодНачало3ПриИзменении(Элемент)
	КварталНачалоПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура КварталОкончаниеПриИзменении(Элемент)
	КварталОкончаниеПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура КварталОкончаниеРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если КварталОкончание = 1 И Направление < 0 Или КварталОкончание = 4 И Направление > 0 Тогда
		Возврат;
	КонецЕсли;
	
	КварталОкончание = КварталОкончание + Направление;
	КварталОкончаниеПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодОкончание3ПриИзменении(Элемент)
	КварталОкончаниеПриИзмененииКлиент();
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// Год

&НаКлиенте
Процедура ГодНачало4ПриИзменении(Элемент)
	ГодНачалоПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ГодОкончание4ПриИзменении(Элемент)
	ГодОкончаниеПриИзмененииКлиент();
КонецПроцедуры
 


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(ПериодПланирования);
КонецПроцедуры
 
&НаКлиенте
Процедура ЭтаНеделя(Команда)
	УстановитьТекущийПериодСервер("Неделя");
КонецПроцедуры

&НаКлиенте
Процедура ЭтотГод(Команда)
	УстановитьТекущийПериодСервер("Год");
КонецПроцедуры

&НаКлиенте
Процедура ЭтотКвартал(Команда)
	УстановитьТекущийПериодСервер("Квартал");
КонецПроцедуры

&НаКлиенте
Процедура ЭтотМесяц(Команда)
	УстановитьТекущийПериодСервер("Месяц");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


&НаСервере
Процедура ОбновитьИнформациюСервер()

	ОбновитьПредельныеУсловия(ЭтотОбъект);
	ИзменитьОтображенияПериода(ЭтотОбъект);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьПредельныеУсловия(Форма)

	Форма.МинимальнаяДатаПланирования = Форма.ВариантБюджета.НачалоПланирования;
	Форма.ПределПланирования = Константы.ПределПланирования.Получить();
	ЦветИнформации    = Форма.Элементы.ОписаниеВарианта.ЦветТекста;
	ЦветГиперссылок   = Форма.Элементы.ОписаниеВарианта.ЦветТекста;
	
	Если ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка() = "ХХ" Тогда
		ТекстУсловий = "";
	Иначе
		ТекстУсловий = Новый ФорматированнаяСтрока(
				Новый ФорматированнаяСтрока("Выберите бюджетные периоды в пределах с ", , ЦветИнформации),
				Новый ФорматированнаяСтрока(Формат(Форма.МинимальнаяДатаПланирования, "ДФ='д МММ гггг ""г.""'"), , ЦветГиперссылок, , "http://Начало"),
				Новый ФорматированнаяСтрока(" по ", , ЦветИнформации),
				Новый ФорматированнаяСтрока(Формат(Форма.ПределПланирования, "ДФ='д МММ гггг ""г.""'"), , ЦветГиперссылок, , "http://Предел"),
				Новый ФорматированнаяСтрока(":", , ЦветИнформации)
				);
	КонецЕсли;

	Форма.Элементы.ОписаниеВарианта.Заголовок = ТекстУсловий;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураПериодаПросмотра(ВариантБюджета, НачальнаяДата = Неопределено, КоличествоПериодов = Неопределено)

	Если Не ЗначениеЗаполнено(НачальнаяДата) Тогда
		НачальнаяДата = НачалоДня(ТекущаяДатаКлиентСервер());
	КонецЕсли;
	Если Не ЗначениеЗаполнено(КоличествоПериодов) Тогда
		КоличествоПериодов = 1;
	КонецЕсли;
	
	Если КоличествоПериодов >= 1 Тогда
		
		НачальныйПериод = БюджетированиеСервер.НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НачальнаяДата);
		КонечныйПериод = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(НачальныйПериод);
		Если КоличествоПериодов > 1 Тогда
			БюджетированиеСервер.СдвинутьБюджетныйПериод(КонечныйПериод, ВариантБюджета, КоличествоПериодов - 1);
		КонецЕсли;
		
	ИначеЕсли КоличествоПериодов <= -1 Тогда
		
		КонечныйПериод = БюджетированиеСервер.НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НачальнаяДата);
		НачальныйПериод = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(КонечныйПериод);
		Если КоличествоПериодов < 1 Тогда
			БюджетированиеСервер.СдвинутьБюджетныйПериод(НачальныйПериод, ВариантБюджета, КоличествоПериодов + 1);
		КонецЕсли;
		
	КонецЕсли;
	
	
	Результат = Новый Структура;
	Результат.Вставить("НачальныйПериод",     НачальныйПериод);
	Результат.Вставить("КонечныйПериод",      КонечныйПериод);
	Результат.Вставить("КоличествоПериодов",  Макс(КоличествоПериодов, -КоличествоПериодов));
	
	Результат.Вставить("ВидПериодаСтрокой",           Врег(ОбщегоНазначения.ИмяЗначенияПеречисления(ВариантБюджета.ДетальностьПланирования)));
	Результат.Вставить("НачалоПланированияВарианта",  ВариантБюджета.НачалоПланирования);

	// Представление периода
	Результат.Вставить("Представление", БюджетированиеКлиентСервер.ПредставлениеБюджетногоПериода(НачальныйПериод.Начало, 
						КонечныйПериод.Окончание, Результат.ВидПериодаСтрокой));
	
	// Представление количества периодов
	Результат.Вставить("ПредставлениеКоличестваПериодов", БюджетированиеКлиентСервер.ПредставлениеКоличестваБюджетныхПериодов(Результат.КоличествоПериодов, Результат.ВидПериодаСтрокой));
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НоваяДатаНачала)

	Возврат БюджетированиеСервер.НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НоваяДатаНачала);

КонецФункции



&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОтображенияПериода(Форма)

	Если Форма.ПериодПланирования.ВидПериодаСтрокой = "НЕДЕЛЯ" Тогда
		Форма.НеделяНачало = Форма.ПериодПланирования.НачальныйПериод.Начало;
		Форма.НеделяОкончание = Форма.ПериодПланирования.КонечныйПериод.Окончание;
		
	ИначеЕсли Форма.ПериодПланирования.ВидПериодаСтрокой = "МЕСЯЦ" Тогда
		Форма.МесяцНачало     = Месяц(Форма.ПериодПланирования.НачальныйПериод.Начало);
		Форма.МесяцОкончание  = Месяц(Форма.ПериодПланирования.КонечныйПериод.Окончание);
		Форма.ГодНачало       = Год(Форма.ПериодПланирования.НачальныйПериод.Начало);
		Форма.ГодОкончание    = Год(Форма.ПериодПланирования.КонечныйПериод.Окончание);
		
	ИначеЕсли Форма.ПериодПланирования.ВидПериодаСтрокой = "КВАРТАЛ" Тогда
		Форма.КварталНачало     = БюджетированиеКлиентСервер.Квартал(Форма.ПериодПланирования.НачальныйПериод.КалендарноеНачало);
		Форма.КварталОкончание  = БюджетированиеКлиентСервер.Квартал(Форма.ПериодПланирования.КонечныйПериод.КалендарноеОкончание);
		Форма.ГодНачало         = Год(Форма.ПериодПланирования.НачальныйПериод.КалендарноеНачало);
		Форма.ГодОкончание      = Год(Форма.ПериодПланирования.КонечныйПериод.КалендарноеОкончание);
		
	ИначеЕсли Форма.ПериодПланирования.ВидПериодаСтрокой = "ГОД" Тогда
		Форма.ГодНачало         = Год(Форма.ПериодПланирования.НачальныйПериод.Начало);
		Форма.ГодОкончание      = Год(Форма.ПериодПланирования.КонечныйПериод.Окончание);
		
	КонецЕсли;
	
	Форма.ПредставлениеРезультата = НСтр("ru='Выбрано'") + ": " + Форма.ПериодПланирования.ПредставлениеКоличестваПериодов;

КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаНеделяЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если ДополнительныеПараметры.ИзменяемаяЧастьПериода = "НачалоПериода" Тогда
			
			НеделяОкончание = Макс(НеделяОкончание, Результат.КонецПериода);
			НеделяОкончание = Мин(НеделяОкончание, ПределПланирования);
			НеделяНачало = Мин(НеделяНачало, Результат.НачалоПериода);
			ИзменениеНачалоПериодаКлиент(НеделяНачало, НеделяОкончание);
			
		Иначе
			
			НеделяОкончание = Мин(Результат.КонецПериода, ПределПланирования);
			НеделяНачало = ?(НеделяНачало >= НеделяОкончание, Результат.НачалоПериода, НеделяНачало);
			ИзменениеОкончаниеПериодаКлиент(НеделяНачало, НеделяОкончание);
			
		КонецЕсли;
		
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменениеНачалоПериодаКлиент(НоваяДатаНачала, ДатаОкончания)

	Если НоваяДатаНачала < МинимальнаяДатаПланирования Тогда
		
		ТекстСообщения = НСтр("ru='Нельзя выбрать дату ранее %1'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(МинимальнаяДатаПланирования, "ДФ='д ММММ гггг'"));
		Состояние(ТекстСообщения, , НСтр("ru='При необходимости, измените начало планирования в этом варианте бюджета'"));
		
		УстановитьМинимальнуюДатуНачала();
		
	ИначеЕсли НоваяДатаНачала > ПределПланирования Или ДатаОкончания > ПределПланирования Тогда
		
		ТекстСообщения = НСтр("ru='Нельзя выбрать дату поздней %1'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ПределПланирования, "ДФ='д ММММ гггг'"));
		Состояние(ТекстСообщения, , НСтр("ru='При необходимости, измените предел планирования в программе'"));
		
		УстановитьМаксимальнуюДатуОкончания();
		
	Иначе
		
		Начальныйпериод    = НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НоваяДатаНачала);
		КонечныйПериод     = НоваяСтрукрураБюджетногоПериода(ВариантБюджета, ДатаОкончания);
		КоличествоПериодов = Мин(МаксимальноеКоличествоПериодов, БюджетированиеКлиентСервер.КоличествоПериодовМеждуДатами(Начальныйпериод.Начало, 
								КонечныйПериод.Окончание, ПериодПланирования.ВидПериодаСтрокой));
		ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, Начальныйпериод.Начало, КоличествоПериодов);
		
		
		Пока ПериодПланирования.КонечныйПериод.Окончание > ПределПланирования И ПериодПланирования.КоличествоПериодов > 1 Цикл
			ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, ПериодПланирования.НачальныйПериод.Начало, ПериодПланирования.КоличествоПериодов - 1);
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьОтображенияПериода(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеОкончаниеПериодаКлиент(ДатаНачала, НоваяДатаОкончания)

	Если НоваяДатаОкончания > ПределПланирования Тогда
		
		ТекстСообщения = НСтр("ru='Нельзя выбрать дату позже %1'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(ПределПланирования, "ДФ='д ММММ гггг'"));
		Состояние(ТекстСообщения, , НСтр("ru='При необходимости, измените предел планирования в программе'"));
		
		УстановитьМаксимальнуюДатуОкончания();
		
	ИначеЕсли НоваяДатаОкончания < МинимальнаяДатаПланирования Или ДатаНачала < МинимальнаяДатаПланирования Тогда
		
		ТекстСообщения = НСтр("ru='Нельзя выбрать дату ранее %1'"); 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(МинимальнаяДатаПланирования, "ДФ='д ММММ гггг'"));
		Состояние(ТекстСообщения, , НСтр("ru='При необходимости, измените начало планирования в этом варианте бюджета'"));
		
		УстановитьМинимальнуюДатуНачала();
		
	Иначе
		
		Начальныйпериод = НоваяСтрукрураБюджетногоПериода(ВариантБюджета, ДатаНачала);
		КонечныйПериод  = НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НоваяДатаОкончания);
		КоличествоПериодов = Мин(МаксимальноеКоличествоПериодов, БюджетированиеКлиентСервер.КоличествоПериодовМеждуДатами(Начальныйпериод.Начало, 
								КонечныйПериод.Окончание, ПериодПланирования.ВидПериодаСтрокой));
		ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, КонечныйПериод.Окончание, -КоличествоПериодов);
		
		Пока ПериодПланирования.НачальныйПериод.Начало < МинимальнаяДатаПланирования И ПериодПланирования.КоличествоПериодов > 1 Цикл
			ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, ПериодПланирования.КонечныйПериод.Начало, -ПериодПланирования.КоличествоПериодов + 1);
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьОтображенияПериода(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМинимальнуюДатуНачала()

	НачальныйПериод = БюджетированиеСервер.НоваяСтрукрураБюджетногоПериода(ВариантБюджета, МинимальнаяДатаПланирования);
	Если НачалоДня(НачальныйПериод.Начало) < НачалоДня(МинимальнаяДатаПланирования) Тогда
		БюджетированиеСервер.СдвинутьБюджетныйПериод(НачальныйПериод, ВариантБюджета, 1);
	КонецЕсли;
	
	ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, НачальныйПериод.Начало, ПериодПланирования.КоличествоПериодов);
	
	Пока ПериодПланирования.КонечныйПериод.Окончание > ПределПланирования И ПериодПланирования.КоличествоПериодов > 1 Цикл
		ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, ПериодПланирования.НачальныйПериод.Начало, ПериодПланирования.КоличествоПериодов - 1);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьМаксимальнуюДатуОкончания()

	КонечныйПериод = БюджетированиеСервер.НоваяСтрукрураБюджетногоПериода(ВариантБюджета, ПределПланирования);
	Если НачалоДня(КонечныйПериод.Окончание) > НачалоДня(ПределПланирования) Тогда
		БюджетированиеСервер.СдвинутьБюджетныйПериод(КонечныйПериод, ВариантБюджета, -1);
	КонецЕсли;
	
	ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, КонечныйПериод.Начало, -ПериодПланирования.КоличествоПериодов);
	
	Пока ПериодПланирования.НачальныйПериод.Начало < МинимальнаяДатаПланирования И ПериодПланирования.КоличествоПериодов > 1 Цикл
		ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, ПериодПланирования.КонечныйПериод.Начало, -ПериодПланирования.КоличествоПериодов + 1);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПределПланированияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ОбновитьИнформациюСервер();

КонецПроцедуры

&НаСервере
Процедура УстановитьТекущийПериодСервер(УстанавливаемыйПериод)

	КоличествоПериодов  = 1;
	НачальнаяДата       = НачалоДня(ТекущаяДатаКлиентСервер());
	
	Если УстанавливаемыйПериод = "Неделя" Тогда
		
		
	ИначеЕсли УстанавливаемыйПериод = "Месяц" Тогда
		
		Если ПериодПланирования.ВидПериодаСтрокой = "НЕДЕЛЯ" Тогда
			
			НачальнаяДата = НачалоНедели(НачалоМесяца(НачальнаяДата));
			КоличествоПериодов = БюджетированиеКлиентСервер.КоличествоПериодовМеждуДатами(НачальнаяДата, 
							КонецНедели(КонецМесяца(ТекущаяДатаКлиентСервер())), ПериодПланирования.ВидПериодаСтрокой);
			
		ИначеЕсли ПериодПланирования.ВидПериодаСтрокой = "МЕСЯЦ" Тогда
			КоличествоПериодов = 1;
			
		КонецЕсли;
		
	ИначеЕсли УстанавливаемыйПериод = "Квартал" Тогда
		
		НачальнаяДата = НачалоКвартала(НачальнаяДата);
		
		Если ПериодПланирования.ВидПериодаСтрокой = "НЕДЕЛЯ" Тогда
			НачальнаяДата = НачалоНедели(НачальнаяДата);
			КоличествоПериодов = БюджетированиеКлиентСервер.КоличествоПериодовМеждуДатами(НачальнаяДата, 
							КонецНедели(КонецКвартала(ТекущаяДатаКлиентСервер())), ПериодПланирования.ВидПериодаСтрокой);
			
		ИначеЕсли ПериодПланирования.ВидПериодаСтрокой = "МЕСЯЦ" Тогда
			НачальнаяДата = Дата(Год(НачальнаяДата), Месяц(НачальнаяДата), ЧислоМесяца);
			КоличествоПериодов = 3;
			
		ИначеЕсли ПериодПланирования.ВидПериодаСтрокой = "КВАРТАЛ" Тогда
			НачальнаяДата = Дата(Год(НачальнаяДата), Месяц(НачальнаяДата) + НомерМесяца - 1, ЧислоМесяца);
			КоличествоПериодов = 1;
			
		КонецЕсли;
		
	ИначеЕсли УстанавливаемыйПериод = "Год" Тогда
		
		НачальнаяДата = НачалоГода(НачальнаяДата);
		НачальнаяДата = Дата(Год(НачальнаяДата), Месяц(НачальнаяДата) + НомерМесяца - 1, ЧислоМесяца);
		
		Если ПериодПланирования.ВидПериодаСтрокой = "МЕСЯЦ" Тогда
			НачальнаяДата = Дата(Год(НачальнаяДата), Месяц(НачальнаяДата), ЧислоМесяца);
			КоличествоПериодов = 12;
			
		ИначеЕсли ПериодПланирования.ВидПериодаСтрокой = "КВАРТАЛ" Тогда
			КоличествоПериодов = 4;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПериодПланирования.КоличествоПериодов = Мин(МаксимальноеКоличествоПериодов, КоличествоПериодов);
	
	НачальныйПериод = БюджетированиеСервер.НоваяСтрукрураБюджетногоПериода(ВариантБюджета, НачальнаяДата);
	Если НачальныйПериод.Начало < МинимальнаяДатаПланирования Тогда
		УстановитьМинимальнуюДатуНачала();
	ИначеЕсли НачальныйПериод.Окончание > ПределПланирования Тогда
		УстановитьМаксимальнуюДатуОкончания();
	Иначе
		ПериодПланирования = СтруктураПериодаПросмотра(ВариантБюджета, НачальныйПериод.Начало, ПериодПланирования.КоличествоПериодов);
	КонецЕсли;
	
	ИзменитьОтображенияПериода(ЭтотОбъект);

КонецПроцедуры


&НаКлиенте
Процедура МесяцНачалоПриИзмененииКлиент()

	Если МесяцНачало < 1 Тогда
		МесяцНачало = 1;
	ИначеЕсли МесяцНачало > 12 Тогда
		МесяцНачало = 12;
	КонецЕсли;
	
	Если ГодНачало < 2000 Тогда
		ГодНачало = 2000;
	КонецЕсли;
	
	ДатаНачала      = Дата(ГодНачало, МесяцНачало, ЧислоМесяца);
	Если ЧислоМесяца = 1 Тогда
		ДатаОкончания   = НачалоДня(КонецМесяца(Дата(ГодОкончание, МесяцОкончание, 1)));
	Иначе
		ДатаОкончания   = НачалоДня(Дата(ГодОкончание, МесяцОкончание, ЧислоМесяца) - 1);
	КонецЕсли;
	 
	
	Если ДатаНачала >= ДатаОкончания Тогда
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 1) - 1;
	КонецЕсли;
	
	Если ДатаНачала <> ПериодПланирования.НачальныйПериод.Начало 
		Или ДатаОкончания <> ПериодПланирования.КонечныйПериод.Окончание Тогда
		ИзменениеНачалоПериодаКлиент(ДатаНачала, ДатаОкончания);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончаниеПриИзмененииКлиент()

	Если МесяцОкончание < 1 Тогда
		МесяцОкончание = 1;
	ИначеЕсли МесяцОкончание > 12 Тогда
		МесяцОкончание = 12;
	КонецЕсли;
	
	Если ГодОкончание < 2000 Тогда
		ГодОкончание = 2000;
	КонецЕсли;
	
	ДатаНачала      = Дата(ГодНачало, МесяцНачало, ЧислоМесяца);
	Если ЧислоМесяца = 1 Тогда
		ДатаОкончания   = НачалоДня(КонецМесяца(Дата(ГодОкончание, МесяцОкончание, 1)));
	Иначе
		ДатаОкончания   = НачалоДня(Дата(ГодОкончание, МесяцОкончание, ЧислоМесяца) - 1);
	КонецЕсли;
	
	Если ДатаНачала >= ДатаОкончания Тогда
		ДатаНачала = ДобавитьМесяц(ДатаОкончания, -1);
		Если КонецДня(ДатаОкончания) = КонецМесяца(ДатаОкончания) Тогда
			ДатаНачала = НачалоМесяца(ДатаОкончания);
		Иначе
			ДатаНачала = КонецДня(ДатаНачала) + 1;
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаНачала <> ПериодПланирования.НачальныйПериод.Начало 
		Или ДатаОкончания <> ПериодПланирования.КонечныйПериод.Окончание Тогда
		ИзменениеОкончаниеПериодаКлиент(ДатаНачала, ДатаОкончания);
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура КварталНачалоПриИзмененииКлиент()

	Если КварталНачало < 1 Тогда
		КварталНачало = 1;
	ИначеЕсли КварталНачало > 4 Тогда
		КварталНачало = 4;
	КонецЕсли;
	
	Если ГодНачало < 2000 Тогда
		ГодНачало = 2000;
	КонецЕсли;
	
	МесяцКварталаНачала     = МесяцНачалаКвартала(КварталНачало) + НомерМесяца - 1;
	МесяцКварталаОкончания  = МесяцНачалаКвартала(КварталОкончание) + НомерМесяца - 1;
	
	ДатаНачала      = Дата(ГодНачало, МесяцКварталаНачала, ЧислоМесяца);
	ДатаОкончания   = ДобавитьМесяц(Дата(ГодОкончание, МесяцКварталаОкончания, ЧислоМесяца), 3) - 1;
	
	Если ДатаНачала >= ДатаОкончания Тогда
		ДатаОкончания = ДобавитьМесяц(ДатаНачала, 3) - 1;
	КонецЕсли;
	
	ИзменениеНачалоПериодаКлиент(ДатаНачала, ДатаОкончания);

КонецПроцедуры

&НаКлиенте
Процедура КварталОкончаниеПриИзмененииКлиент()

	Если КварталОкончание < 1 Тогда
		КварталОкончание = 1;
	ИначеЕсли КварталОкончание > 12 Тогда
		КварталОкончание = 12;
	КонецЕсли;
	
	Если ГодОкончание < 2000 Тогда
		ГодОкончание = 2000;
	КонецЕсли;
	
	МесяцКварталаНачала     = МесяцНачалаКвартала(КварталНачало) + НомерМесяца - 1;
	МесяцКварталаОкончания  = МесяцНачалаКвартала(КварталОкончание) + НомерМесяца - 1;
	
	ДатаНачала      = Дата(ГодНачало, МесяцКварталаНачала, ЧислоМесяца);
	ДатаОкончания   = ДобавитьМесяц(Дата(ГодОкончание, МесяцКварталаОкончания, ЧислоМесяца), 3) - 1;
	
	Если ДатаНачала >= ДатаОкончания Тогда
		ДатаНачала = ДобавитьМесяц(ДатаОкончания, -3) + 1;
	КонецЕсли;
	
	ИзменениеОкончаниеПериодаКлиент(ДатаНачала, ДатаОкончания);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МесяцНачалаКвартала(НомерКвратала)

	Если НомерКвратала = 1 Тогда
		Возврат 1;
	ИначеЕсли НомерКвратала = 2 Тогда
		Возврат 4;
	ИначеЕсли НомерКвратала = 3 Тогда
		Возврат 7;
	ИначеЕсли НомерКвратала = 4 Тогда
		Возврат 10;
	КонецЕсли;

КонецФункции


&НаКлиенте
Процедура ГодНачалоПриИзмененииКлиент()

	Если ГодНачало < 2000 Тогда
		ГодНачало = 2000;
	КонецЕсли;
	
	Коэф = ?(НомерМесяца >1 Или ЧислоМесяца > 1, 1, 0);
	Если ГодНачало + Коэф > ГодОкончание Тогда
		ГодОкончание = ГодНачало + Коэф;
	КонецЕсли;
	
	ДатаНачала      = Дата(ГодНачало, НомерМесяца, ЧислоМесяца);
	ДатаОкончания   = НачалоДня(ДобавитьМесяц(Дата(ГодОкончание - Коэф, НомерМесяца, ЧислоМесяца), 12) - 1);
	
	ИзменениеНачалоПериодаКлиент(ДатаНачала, ДатаОкончания);

КонецПроцедуры

&НаКлиенте
Процедура ГодОкончаниеПриИзмененииКлиент()

	Если ГодОкончание < 2000 Тогда
		ГодОкончание = 2000;
	КонецЕсли;
	
	Коэф = ?(НомерМесяца >1 Или ЧислоМесяца > 1, 1, 0);
	Если ГодНачало + Коэф > ГодОкончание Тогда
		ГодНачало = ГодОкончание - Коэф;
	КонецЕсли;
	
	ДатаНачала      = Дата(ГодНачало, НомерМесяца, ЧислоМесяца);
	ДатаОкончания   = НачалоДня(ДобавитьМесяц(Дата(ГодОкончание - Коэф, НомерМесяца, ЧислоМесяца), 12) - 1);
	
	ИзменениеОкончаниеПериодаКлиент(ДатаНачала, ДатаОкончания);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяДатаКлиентСервер()
	#Если Сервер Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли 
КонецФункции 

#КонецОбласти
