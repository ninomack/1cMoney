////////////////////////////////////////////////////////////////////////////////
//Обработка.РазделБюджет.Форма.КопированиеПоказателей
//  Заполняет вариант-приемник показателями врианта-источника начиная с указанной даты
//  
//Параметры формы:
//	ВариантПриемник - (Обязательный) - вариант бюджета, из которого вызвана форма заполнения показателями
//	НачальнаяДата - дата, с которой начинать копировать показатели
//	ВариантИсточник - вариант бюджета, из которого следует копировать показатели в вариант-приемник
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработка параметра ВариантПриемника
	Если Не Параметры.Свойство("ВариантПриемник") Или Не ЗначениеЗаполнено(Параметры.ВариантПриемник) Тогда
		ВызватьИсключение НСтр("ru='Не указан заполняемый вариант бюджета'");
	КонецЕсли;
	ВариантПриемник = Параметры.ВариантПриемник;
	
	// Чтение свойств варианта
	ДопРеквизитыФормы = Новый Структура;
	ДопРеквизитыФормы.Вставить("СвойстваПриемника", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантПриемник, "НачалоПланирования,ДетальностьПланирования,Валюта,ЧислоМесяца,НомерМесяца"));
	ДопРеквизитыФормы.Вставить("ПределПланирования", Константы.ПределПланирования.Получить());
	
	Параметры.Свойство("РазделБюджета", РазделБюджета);
	Параметры.Свойство("ВариантИсточник", ВариантИсточник);
	Если Не ЗначениеЗаполнено(ВариантИсточник) Или БюджетированиеСервер.РазницаДетальностиВариантов(ВариантПриемник, ВариантИсточник) < 0 Тогда
		
		ВариантИсточник = Неопределено;
		ОсновнойВариант = Константы.ОсновнойВариантБюджета.Получить();
		Если ОсновнойВариант <> ВариантПриемник И БюджетированиеСервер.РазницаДетальностиВариантов(ВариантПриемник, ОсновнойВариант) >= 0 Тогда
			ВариантИсточник = ОсновнойВариант;
		КонецЕсли;
		
	КонецЕсли;
	
	ДопРеквизитыФормы.Вставить("СвойстваИсточника", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантПриемник, "НачалоПланирования,ДетальностьПланирования,Валюта,ЧислоМесяца,НомерМесяца"));
	
	Элементы.ФормаЗаполнить.Доступность = ЗначениеЗаполнено(ВариантИсточник);
	
	// Обработка прочих параметров
	Параметры.Свойство("НачальнаяДата", НачальнаяДата);
	Если Не ЗначениеЗаполнено(НачальнаяДата) Тогда
		НачальнаяДата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	УточненнаяДата = УточнитьНачальнуюДату(НачальнаяДата, ДопРеквизитыФормы);
	НачальнаяДата  = УточненнаяДата.НачальнаяДата;
	МесяцКвартал   = УточненнаяДата.МесяцКвартал;
	Год            = УточненнаяДата.Год;
	
	// Настраиваем элементы выбора периода
	Если ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Неделя Тогда
		
		Элементы.ГруппаМесяцКвартал.Видимость = Ложь;
		Элементы.ГруппаГод.Видимость = Ложь;
		
	ИначеЕсли ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Месяц Тогда
		
		Элементы.ГруппаНеделя.Видимость = Ложь;
		Элементы.ГруппаГод.Видимость = Ложь;
		Для Счетчик = 1 По 12 Цикл
			Элементы.МесяцКвартал.СписокВыбора.Добавить(Счетчик, Формат(Дата(2035, Счетчик, 1), "Л=ru_RU; ДФ=MMMM") );
		КонецЦикла;
		 
	ИначеЕсли ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Квартал Тогда
		
		Элементы.ГруппаНеделя.Видимость = Ложь;
		Элементы.ГруппаГод.Видимость = Ложь;
		Для Счетчик = 1 По 4 Цикл
			ПредставлениеКвартала = НСтр("ru='%1-й кв.'");
			Элементы.МесяцКвартал.СписокВыбора.Добавить(Счетчик, СтрШаблон(ПредставлениеКвартала, Счетчик));
		КонецЦикла;
		 
	ИначеЕсли ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Месяц Тогда
		
		Элементы.ГруппаНеделя.Видимость = Ложь;
		Элементы.ГруппаМесяцКвартал.Видимость = Ложь;
		 
	КонецЕсли;
	
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантИсточникПриИзменении(Элемент)
	
	Если Не ВариантИсточникПриИзмененииСервер() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Невозможно скопировать показатели из выбранного варианта: его детальность планирования крупней чем у заполняемого варианта'"));
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НачальнаяДатаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(НачальнаяДата) Тогда
		НачальнаяДата = ТекущаяДатаКлиентСервер();
	КонецЕсли;
	
	УточненнаяДата = УточнитьНачальнуюДату(НачальнаяДата, ДопРеквизитыФормы);
	НачальнаяДата  = УточненнаяДата.НачальнаяДата;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцКварталПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(МесяцКвартал) Тогда
		МесяцКвартал = 1;
	КонецЕсли;
	
	УточненнаяДата = УточнитьНачальнуюДату(Дата(Год, 
								МесяцКвартал + ДопРеквизитыФормы.СвойстваПриемника.НомерМесяца - 1, 
								ДопРеквизитыФормы.СвойстваПриемника.ЧислоМесяца), 
						ДопРеквизитыФормы);
	НачальнаяДата  = УточненнаяДата.НачальнаяДата;
	МесяцКвартал   = УточненнаяДата.МесяцКвартал;
	Год            = УточненнаяДата.Год;
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	
	Если Год < 2000 Тогда
		Год = Год(НачальнаяДата);
	КонецЕсли;
	
	УточненнаяДата = УточнитьНачальнуюДату(Дата(Год, 
								МесяцКвартал + ДопРеквизитыФормы.СвойстваПриемника.НомерМесяца - 1, 
								ДопРеквизитыФормы.СвойстваПриемника.ЧислоМесяца), 
						ДопРеквизитыФормы);
	НачальнаяДата  = УточненнаяДата.НачальнаяДата;
	МесяцКвартал   = УточненнаяДата.МесяцКвартал;
	Год            = УточненнаяДата.Год;
	
КонецПроцедуры
 
&НаКлиенте
Процедура Год1ПриИзменении(Элемент)
	
	Если Год < 2000 Тогда
		Год = Год(НачальнаяДата);
	КонецЕсли;
	
	УточненнаяДата = УточнитьНачальнуюДату(Дата(Год, 
								ДопРеквизитыФормы.СвойстваПриемника.НомерМесяца, 
								ДопРеквизитыФормы.СвойстваПриемника.ЧислоМесяца), 
						ДопРеквизитыФормы);
	НачальнаяДата  = УточненнаяДата.НачальнаяДата;
	Год            = УточненнаяДата.Год;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьПоказателиСервер();
	Закрыть(Истина);
	
КонецПроцедуры



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция УточнитьНачальнуюДату(Знач НачальнаяДата, Знач ДопРеквизитыФормы)

	Результат = Новый Структура("НачальнаяДата, ТекстСообщения, МесяцКвартал, Год", НачальнаяДата, "", 0, 0);
	
	// Проверяем соответствие начальной даты заданным границам планирования
	Если ЗначениеЗаполнено(ДопРеквизитыФормы.СвойстваПриемника.НачалоПланирования) И НачальнаяДата < ДопРеквизитыФормы.СвойстваПриемника.НачалоПланирования Тогда
		НачальнаяДата = ДопРеквизитыФормы.СвойстваПриемника.НачалоПланирования;
		Результат.ТекстСообщения = НСтр("ru='Заполняемый вариант бюджета начинается с %1'");
		Результат.ТекстСообщения = СтрШаблон(Результат.ТекстСообщения, Формат(ДопРеквизитыФормы.СвойстваПриемника.НачалоПланирования, "Л=ru_RU; ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДопРеквизитыФормы.СвойстваИсточника.НачалоПланирования) И НачальнаяДата < ДопРеквизитыФормы.СвойстваИсточника.НачалоПланирования Тогда
		НачальнаяДата = ДопРеквизитыФормы.СвойстваИсточника.НачалоПланирования;
		Результат.ТекстСообщения = НСтр("ru='Выбранный вариант бюджета начинается с %1'");
		Результат.ТекстСообщения = СтрШаблон(Результат.ТекстСообщения, Формат(ДопРеквизитыФормы.СвойстваИсточника.НачалоПланирования, "Л=ru_RU; ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДопРеквизитыФормы.ПределПланирования) И НачальнаяДата > ДопРеквизитыФормы.ПределПланирования Тогда
		НачальнаяДата = ДопРеквизитыФормы.ПределПланирования;
		Результат.ТекстСообщения = НСтр("ru='Все варианты бюджета рассчитаны по %1'");
		Результат.ТекстСообщения = СтрШаблон(Результат.ТекстСообщения, Формат(ДопРеквизитыФормы.ПределПланирования, "Л=ru_RU; ДФ=dd.MM.yyyy"));
	КонецЕсли;
	 
	// Вычисляем начальную дату в соответствии с заданными параметрами
	Если ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = ПредопределенноеЗначение("Перечисление.ПериодичностьПланирования.Неделя") Тогда
		
		Результат.НачальнаяДата = НачалоНедели(НачальнаяДата);
		
	ИначеЕсли ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = ПредопределенноеЗначение("Перечисление.ПериодичностьПланирования.Месяц") Тогда
		
		Результат.МесяцКвартал  = Месяц(НачальнаяДата);
		Результат.НачальнаяДата = Дата(Год(НачальнаяДата), Результат.МесяцКвартал, ДопРеквизитыФормы.СвойстваПриемника.ЧислоМесяца);
		
	ИначеЕсли ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = ПредопределенноеЗначение("Перечисление.ПериодичностьПланирования.Квартал") Тогда
		
		Результат.НачальнаяДата = Дата(Год(НачальнаяДата), Месяц(НачалоКвартала(НачальнаяДата)) + ДопРеквизитыФормы.СвойстваПриемника.НомерМесяца - 1, ДопРеквизитыФормы.СвойстваПриемника.ЧислоМесяца);
		Результат.МесяцКвартал  = БюджетированиеКлиентСервер.Квартал(Результат.НачальнаяДата);
		
	ИначеЕсли ДопРеквизитыФормы.СвойстваПриемника.ДетальностьПланирования = ПредопределенноеЗначение("Перечисление.ПериодичностьПланирования.Год") Тогда
		
		Результат.НачальнаяДата = Дата(Год(НачальнаяДата), ДопРеквизитыФормы.СвойстваПриемника.НомерМесяца, ДопРеквизитыФормы.СвойстваПриемника.ЧислоМесяца);
		
	КонецЕсли;
	
	Результат.Год = Год(Результат.НачальнаяДата);
	
	#Если КЛИЕНТ Тогда
	Если ЗначениеЗаполнено(Результат.ТекстСообщения) Тогда
		ПоказатьПредупреждение(, Результат.ТекстСообщения);
	КонецЕсли;
	#КонецЕсли
	
	Возврат Результат;

КонецФункции

&НаСервере
Функция ВариантИсточникПриИзмененииСервер()
	
	Если БюджетированиеСервер.РазницаДетальностиВариантов(ВариантПриемник, ВариантИсточник) < 0 Тогда
		
		ВариантИсточник = Неопределено;
		Результат = Ложь;
		
	Иначе
		
		ДопРеквизитыФормы.Вставить("СвойстваИсточника", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантПриемник, "НачалоПланирования,ДетальностьПланирования,Валюта,ЧислоМесяца,НомерМесяца"));
		НачальнаяДата = УточнитьНачальнуюДату(НачальнаяДата, ДопРеквизитыФормы).НачальнаяДата;
		Результат = Истина;
		
	КонецЕсли;
	
	ДоступностьКнопки = ЗначениеЗаполнено(ВариантИсточник);
	Если Элементы.ФормаЗаполнить.Доступность <> ДоступностьКнопки Тогда
		Элементы.ФормаЗаполнить.Доступность = ДоступностьКнопки;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоказателиСервер()

	ЗаполнитьПоказателиИзДругогоВарианта(ВариантПриемник, ВариантИсточник, НачальнаяДата, Разделбюджета);

КонецПроцедуры


// Копирует показатели бюджета из варианта-источника в вариант-приемник начиная с указанной даты
//
//Параметры:
//	ВариантПриемник - СправочникСсылка.ВариантыБюджетов - заполняемый вариант бюджета
//	ВариантИсточник - СправочникСсылка.ВариантыБюджетов - вариант бюджета, из которого копируются показатели
//	НачальнаяДата - Дата, начиная с которой копируются показатели бюджета
//	РазделБюджета - строка или СправочникСсылка.ФинансовыеЦели - кпируемый раздел бюджета. Если пустая строка - все разделы, иначе - только по выбранной финансовой цели
//
&НаСервере
Процедура ЗаполнитьПоказателиИзДругогоВарианта(ВариантПриемник, ВариантИсточник, НачальнаяДата, РазделБюджета = "") 
	
	Если РазделБюджета = "" Или РазделБюджета = Неопределено Тогда
		
		СписокРазделов = СписокАктуальныхРазделовБюджета(ВариантИсточник, НачальнаяДата);
		
	Иначе
		
		СписокРазделов = Новый Массив;
		СписокРазделов.Добавить(РазделБюджета);
		
	КонецЕсли;
	
	Для каждого РазделБюджета Из СписокРазделов Цикл
		СкопироватьПоказателиВарианта(ВариантПриемник, ВариантИсточник, НачальнаяДата, РазделБюджета);
	КонецЦикла;
	 
	
КонецПроцедуры

// Возвращает массив финансовых целей, по которым в указанном варианте бюджета запланированы какие-либо суммы
//	Внимание! Суммы плановых операций не учитываются!
//
//Параметры:
//	ВариантБюджета - СправочникСсылка.ВариантыБюджетов
//	НачальнаяДата - Дата, начиная с которой нужно проверить суммы, запланированные в бюджете
//
&НаСервере
Функция СписокАктуальныхРазделовБюджета(ВариантБюджета, НачальнаяДата) 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВариантБюджета", ВариантБюджета);
	Запрос.УстановитьПараметр("НачальнаяДата", НачальнаяДата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиБюджета.РазделБюджета КАК РазделБюджета
	|ИЗ
	|	РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|ГДЕ
	|	ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|	И ПоказателиБюджета.НачалоПериода >= &НачальнаяДата
	|	И НЕ ЕСТЬNULL(ПоказателиБюджета.РазделБюджета.ПометкаУдаления, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоказателиБюджета.РазделБюджета
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделБюджета";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РазделБюджета");

КонецФункции

&НаСервере
Процедура СкопироватьПоказателиВарианта(ВариантПриемник, ВариантИсточник, НачальнаяДата, РазделБюджета, НаВсеПериоды = Ложь)
	
	НаборКонстант = Константы.СоздатьНабор("ВалютаУчета,ПределПланирования");
	НаборКонстант.Прочитать();
	
	РеквизитыИсточника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантИсточник, "ДетальностьПланирования,Валюта");
	РеквизитыПриемника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантПриемник, "ДетальностьПланирования,Валюта,НомерМесяца,ЧислоМесяца");
	
	Запрос = Новый Запрос;
	
	// Устанавливаем параметры запроса
	Запрос.УстановитьПараметр("ВариантБюджета",             ВариантПриемник);
	Запрос.УстановитьПараметр("ВариантБюджетаИсточника",    ВариантИсточник);
	Запрос.УстановитьПараметр("РазделБюджета",              РазделБюджета);
	Запрос.УстановитьПараметр("ВалютаУчета",                НаборКонстант.ВалютаУчета);
	Запрос.УстановитьПараметр("Дата1",                      НачальнаяДата);
	Запрос.УстановитьПараметр("ВалютаВарианта",             РеквизитыИсточника.Валюта);
	Запрос.УстановитьПараметр("ВалютаВариантаНазначения",   РеквизитыПриемника.Валюта);
	
	Дата2 = КонецГода(НаборКонстант.ПределПланирования);
	// Вычисляем даты обрабатываемых периодов
	Если Запрос.Параметры.ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Неделя Тогда
		
		Запрос.УстановитьПараметр("ВидПериода",                 "НЕДЕЛЯ");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоНедели(Запрос.Параметры.Дата1));
		Если НаВсеПериоды Тогда
			Дата2 = КонецНедели(НаборКонстант.ПределПланирования);
		Иначе
			Дата2 = КонецНедели(НачальнаяДата);
		КонецЕсли;
		 
	ИначеЕсли Запрос.Параметры.ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Месяц Тогда
		
		Запрос.УстановитьПараметр("ВидПериода",         "МЕСЯЦ");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоМесяца(Запрос.Параметры.Дата1));
		Если НаВсеПериоды Тогда
			Дата2 = КонецМесяца(НаборКонстант.ПределПланирования) + (РеквизитыПриемника.ЧислоМесяца - 1) * 86400;
		Иначе
			Дата2 = КонецМесяца(НачальнаяДата) + (РеквизитыПриемника.ЧислоМесяца - 1) * 86400;
		КонецЕсли;
		
	ИначеЕсли Запрос.Параметры.ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Квартал Тогда
		
		МесяцевОтНачалаКвартала      = Запрос.Параметры.ВариантБюджета.НомерМесяца - 1;
	
		Запрос.УстановитьПараметр("ВидПериода",         "КВАРТАЛ");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоКвартала(Запрос.Параметры.Дата1));
		Если НаВсеПериоды Тогда
			Дата2 = ДобавитьМесяц(КонецМесяца(НаборКонстант.ПределПланирования) + (РеквизитыПриемника.ЧислоМесяца - 1) * 86400, 
										РеквизитыПриемника.НомерМесяца - 1);
		Иначе
			Дата2 = ДобавитьМесяц(КонецМесяца(НачальнаяДата) + (РеквизитыПриемника.ЧислоМесяца - 1) * 86400, 
										РеквизитыПриемника.НомерМесяца - 1);
		КонецЕсли;
		
	ИначеЕсли Запрос.Параметры.ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Год Тогда
		
		Запрос.УстановитьПараметр("ВидПериода",         "ГОД");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоГода(Запрос.Параметры.Дата1));
		Если НаВсеПериоды Тогда
			Дата2 = ДобавитьМесяц(КонецГода(НаборКонстант.ПределПланирования) + (РеквизитыПриемника.ЧислоМесяца - 1) * 86400, 
										РеквизитыПриемника.НомерМесяца - 1);
		Иначе
			Дата2 = ДобавитьМесяц(КонецГода(НачальнаяДата) + (РеквизитыПриемника.ЧислоМесяца - 1) * 86400, 
										РеквизитыПриемника.НомерМесяца - 1);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата2", Дата2);
	
	Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДатаПросмотра", Запрос.Параметры.МинимальнаяКалендарнаяДата);
	
	// Для удобного обращения к результатам запроса создаем структуру, 
	//	ключи которой будут соответствовать именам таблиц или выборок, 
	//	а значения - индексам выборок в пакете результатов
	СтруктураЗапросов = Новый Структура;
	
	// Создание временной таблицы "ТаблицаПериодов"
	БюджетированиеСервер.ДобавитьВЗапросГеренациюТаблицыПериодов(Запрос.Текст, СтруктураЗапросов);
	// Собираем ключи статей варианта-приемника
	ДополнитьТекстЗапросаКлючамиБюджетныхСтатей(Запрос.Текст, СтруктураЗапросов);
	// Получение показателей варианта-источника, приведенных в валюту и структуру статей варианта-приемника
	ДополнитьТекстЗапросаПоказателямиКопируемогоВарианта(Запрос.Текст, СтруктураЗапросов);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	// Заполняем набор записей
	НаборЗаписей = РегистрыСведений.ПоказателиБюджета.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВариантБюджета.Установить(ВариантПриемник);
	НаборЗаписей.Отбор.РазделБюджета.Установить(РазделБюджета);
	Если Не НаВсеПериоды Тогда
		НаборЗаписей.Отбор.НачалоПериода.Установить(Запрос.Параметры.МинимальнаяКалендарнаяДата);
	Иначе
		// Добавляем в набор записи до указанной даты
		ЗаполнитьНаборПоказателямиДоУказаннойДаты(НаборЗаписей, Запрос.Параметры.МинимальнаяКалендарнаяДата);
	КонецЕсли;
	
	// Добавляем записи из другого варианта
	Выборка = РезультатыЗапроса[СтруктураЗапросов.ВыборкаПоказателиБюджета].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаписьПоказателя = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьПоказателя, Выборка);
		ЗаписьПоказателя.ВариантБюджета = ВариантПриемник;
		ЗаписьПоказателя.РазделБюджета  = РазделБюджета;
		
	КонецЦикла;
	
	// Записываем набор регистра сведений
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаборПоказателямиДоУказаннойДаты(НаборЗаписей, НачальнаяДатаУдаления) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВариантБюджета", НаборЗаписей.Отбор.ВариантБюджета.Значение);
	Запрос.УстановитьПараметр("РазделБюджета",  НаборЗаписей.Отбор.РазделБюджета.Значение);
	Запрос.УстановитьПараметр("НачалоПериода",  НачальнаяДатаУдаления);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиБюджета.НачалоПериода КАК НачалоПериода,
	|	ПоказателиБюджета.ВариантБюджета,
	|	ПоказателиБюджета.РазделБюджета,
	|	ПоказателиБюджета.ТипПоказателя,
	|	ПоказателиБюджета.ГрафаБюджета,
	|	ПоказателиБюджета.СтатьяБюджета,
	|	ПоказателиБюджета.Сумма,
	|	ПоказателиБюджета.Комментарий
	|ИЗ
	|	РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|ГДЕ
	|	ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|	И ПоказателиБюджета.РазделБюджета = &РазделБюджета
	|	И ПоказателиБюджета.НачалоПериода < &НачалоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Дополняет текст запроса формированием временной таблицы всех элементов справочников, которые могут быть использованы в качестве статей бюджета. 
//	Каждая "статья бюджета" во временной таблице дополняется:
//		* полным ключом статьи (ключ доходов начинается с "10.", ключ расходов с "20.")
//		* текущими настройками пользователя для выбранных варианта/раздела бюджета (видимость статьи в бюджете и ее порядок в общем списке статей)
//		* наличием плановых сумм по статье, что позволяет в предыдущих периодах видеть план/факт по статьям, ставшим неактуальными
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&МинимальнаяКалендарнаяДата - Дата - календарное начало самого первого бюджетного периода. Например, 
//					если бюджетный период "МЕСЯЦ" начинается с 10.05, его календарным началом будет 01.05.хххх 00:00:00
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//
// Параметры
//	ТекстЗапроса     - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура или Неопределено - структура, в которую добавляются имена и индексы результатов пакетного запроса
//
&НаСервере
Процедура ДополнитьТекстЗапросаКлючамиБюджетныхСтатей(ТекстЗапроса, СтруктураЗапроса)

	Если СтруктураЗапроса = Неопределено Тогда
		СтруктураЗапроса = Новый Структура;
	КонецЕсли;
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("АктивныеСтатьиПериода", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица """ + "АктивныеСтатьиПериода"" ";
	
	#Область ТекстЗапроса
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ
	|	АктивныеСтатьи.ВариантБюджета КАК ВариантБюджета,
	|	АктивныеСтатьи.РазделБюджета КАК РазделБюджета,
	|	АктивныеСтатьи.ТипПоказателя КАК ТипПоказателя,
	|	АктивныеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	АктивныеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	АктивныеСтатьи.Сумма КАК Сумма,
	|	АктивныеСтатьи.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|	ЕСТЬNULL(ПоказателиБюджета.Порядок, АктивныеСтатьи.Порядок) КАК Порядок
	|ПОМЕСТИТЬ АктивныеСтатьиПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоказателиБюджета.ВариантБюджета КАК ВариантБюджета,
	|		МАКСИМУМ(ПоказателиБюджета.НачалоПериода) КАК НачалоПериода,
	|		ПоказателиБюджета.РазделБюджета КАК РазделБюджета,
	|		ПоказателиБюджета.ТипПоказателя КАК ТипПоказателя,
	|		ПоказателиБюджета.ГрафаБюджета КАК ГрафаБюджета,
	|		ПоказателиБюджета.СтатьяБюджета КАК СтатьяБюджета,
	|		СУММА(ПоказателиБюджета.Сумма) КАК Сумма,
	|		ПоказателиБюджета.ГрафаБюджета.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		МАКСИМУМ(ПоказателиБюджета.Порядок) КАК Порядок
	|	ИЗ
	|		РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|	ГДЕ
	|		ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|		И (&РазделБюджета = """"
	|				ИЛИ ПоказателиБюджета.РазделБюджета = &РазделБюджета)
	|		И ПоказателиБюджета.НачалоПериода МЕЖДУ &МинимальнаяКалендарнаяДатаПросмотра И &Дата2
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоказателиБюджета.ВариантБюджета,
	|		ПоказателиБюджета.РазделБюджета,
	|		ПоказателиБюджета.ТипПоказателя,
	|		ПоказателиБюджета.ГрафаБюджета,
	|		ПоказателиБюджета.СтатьяБюджета,
	|		ПоказателиБюджета.ГрафаБюджета.ОтношениеКНакоплениям) КАК АктивныеСтатьи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|		ПО (АктивныеСтатьи.ВариантБюджета = ПоказателиБюджета.ВариантБюджета
	|				И АктивныеСтатьи.НачалоПериода = ПоказателиБюджета.НачалоПериода
	|				И АктивныеСтатьи.РазделБюджета = ПоказателиБюджета.РазделБюджета
	|				И АктивныеСтатьи.ГрафаБюджета = ПоказателиБюджета.ГрафаБюджета
	|				И АктивныеСтатьи.СтатьяБюджета = ПоказателиБюджета.СтатьяБюджета)
	|	";
	
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", 
				"//" + КомментарийЗапроса + "//////////////////////////////////////////////////////////////////////////////" + Символы.ПС, 
				ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("КлючиСтатей", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица """ + "КлючиСтатей"" ";
	
	// Запрос заполняет временную таблицу всеми возможными статьями бюджета и их полными ключами.
	//	В дальнейшем эта таблица может использоваться для группировки оборотов по любому элементу любого справочника 
	//	в те бюджетные статьи, для которых настроена видимость в бюджете.
	#Область ТекстЗапроса
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ
	|	ВсеСтатьи.ТипПоказателя,
	|	ВсеСтатьи.ОтношениеКНакоплениям,
	|	ВсеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	ВсеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	ВсеСтатьи.АктивностьСтатьи,
	|	ВсеСтатьи.Наименование,
	|	ВсеСтатьи.РодительскаяСтатья,
	|	ВЫБОР
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""10.99.""
	|			ТОГДА ""99999.10.""
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""20.99.""
	|			ТОГДА ""99999.20.""
	|		ИНАЧЕ ВсеСтатьи.КлючСтатьи
	|	КОНЕЦ КАК КлючСтатьи,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &РазделБюджета = """"
	|					ИЛИ &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|				ТОГДА ВсеСтатьи.ВидимостьПоУмолчаниюДляСвободныхДенег
	|			ИНАЧЕ ВсеСтатьи.ВидимостьПоУмолчаниюДляНакоплений
	|		КОНЕЦ) КАК ВидимостьПоУмолчанию,
	|	МАКСИМУМ(НЕ АктивныеСтатьи.СтатьяБюджета ЕСТЬ NULL) КАК Видимость,
	|	МАКСИМУМ(ЕСТЬNULL(АктивныеСтатьи.Сумма, 0) <> 0) КАК ПоСтатьеЕстьСуммы,
	|	ВсеСтатьи.ПорядокПоУмолчанию,
	|	МАКСИМУМ(ЕСТЬNULL(АктивныеСтатьи.Порядок, ВсеСтатьи.ПорядокПоУмолчанию + 99)) КАК Порядок
	|ПОМЕСТИТЬ КлючиСтатей
	|ИЗ
	|	(
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя КАК ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка КАК ГрафаБюджета,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета, ГрафыБюджета.Ссылка) КАК СтатьяБюджета,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета.Активность, ИСТИНА) КАК АктивностьСтатьи,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета.Наименование, ГрафыБюджета.Наименование) КАК Наименование,
	|		ВЫБОР
	|			КОГДА КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете = НЕОПРЕДЕЛЕНО
	|				ТОГДА ГрафыБюджета.Ссылка
	|			ИНАЧЕ КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете
	|		КОНЕЦ КАК РодительскаяСтатья,
	|		ГрафыБюджета.Код + ЕСТЬNULL(КлючиБюджетныхСтатей.Ключ, """") КАК КлючСтатьи,
	|		ВЫБОР
	|			КОГДА ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита))
	|					И КлючиБюджетныхСтатей.СтатьяБюджета ССЫЛКА Справочник.Долги
	|				ТОГДА ЛОЖЬ
	|			КОГДА КлючиБюджетныхСтатей.СтатьяБюджета В (ЗНАЧЕНИЕ(Справочник.СтатьиДоходов.ПрочиеДоходы), ЗНАЧЕНИЕ(Справочник.СтатьиРасходов.ПрочиеРасходы))
	|				ТОГДА ЛОЖЬ
	|			КОГДА ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета, ГрафыБюджета.Ссылка) В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы))
	|					ИЛИ КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете = НЕОПРЕДЕЛЕНО
	|						И КлючиБюджетныхСтатей.СтатьяБюджета.Активность
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВидимостьПоУмолчаниюДляСвободныхДенег,
	|		ЛОЖЬ КАК ВидимостьПоУмолчаниюДляНакоплений,
	|		ГрафыБюджета.ПорядокПоУмолчанию КАК ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиСтатей КАК КлючиБюджетныхСтатей
	|			ПО ГрафыБюджета.ТипСтатьи = КлючиБюджетныхСтатей.ТипСтатьи
	|				И (НЕ КлючиБюджетныхСтатей.ТипСтатьи В (""Кошельки"", ""Имущество""))
	|				И (НЕ КлючиБюджетныхСтатей.ИсключатьИзБюджета)
	|				И (ВЫБОР 
	|					КОГДА ГрафыБюджета.Ссылка = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита) 
	|						ТОГДА НЕ ВЫРАЗИТЬ(КлючиБюджетныхСтатей.СтатьяБюджета КАК Справочник.Долги).ИспользоватьДляУчетаВыданныхДолгов
	|					КОГДА ГрафыБюджета.Ссылка = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы) 
	|						ТОГДА НЕ ВЫРАЗИТЬ(КлючиБюджетныхСтатей.СтатьяБюджета КАК Справочник.Долги).ИспользоватьДляУчетаВзятыхДолгов
	|					Иначе Истина
	|				КОНЕЦ)
	|	ГДЕ
	|		НЕ ГрафыБюджета.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка,
	|		ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка),
	|		ИСТИНА,
	|		""Свободные деньги"",
	|		ГрафыБюджета.Ссылка,
	|		ГрафыБюджета.Код + ""0."",
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ГрафыБюджета.ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|	ГДЕ
	|		ГрафыБюджета.ОтношениеКНакоплениям > 0
	|		И НЕ ГрафыБюджета.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка,
	|		ГрафыБюджета.Ссылка,
	|		ИСТИНА,
	|		ГрафыБюджета.Наименование,
	|		ГрафыБюджета.Родитель,
	|		ГрафыБюджета.Код,
	|		ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)),
	|		ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)),
	|		ГрафыБюджета.ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|	ГДЕ
	|		НЕ ГрафыБюджета.ПометкаУдаления
	|		
	|		) КАК ВсеСтатьи
	|		
	|		Левое соединение АктивныеСтатьиПериода КАК АктивныеСтатьи
	|		ПО (АктивныеСтатьи.ОтношениеКНакоплениям = ВсеСтатьи.ОтношениеКНакоплениям
	|				И АктивныеСтатьи.ГрафаБюджета = ВсеСтатьи.ГрафаБюджета
	|				И АктивныеСтатьи.СтатьяБюджета = ВсеСтатьи.СтатьяБюджета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеСтатьи.ТипПоказателя,
	|	ВсеСтатьи.ОтношениеКНакоплениям,
	|	ВсеСтатьи.ГрафаБюджета,
	|	ВсеСтатьи.СтатьяБюджета,
	|	ВсеСтатьи.АктивностьСтатьи,
	|	ВсеСтатьи.Наименование,
	|	ВсеСтатьи.РодительскаяСтатья,
	|	ВЫБОР
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""10.99.""
	|			ТОГДА ""99999.10.""
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""20.99.""
	|			ТОГДА ""99999.20.""
	|		ИНАЧЕ ВсеСтатьи.КлючСтатьи
	|	КОНЕЦ,
	|	ВсеСтатьи.ПорядокПоУмолчанию
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтатьи,
	|	ГрафаБюджета,
	|	СтатьяБюджета";
	
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", 
				"//" + КомментарийЗапроса + "//////////////////////////////////////////////////////////////////////////////" + Символы.ПС, 
				ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
	
	
КонецПроцедуры

// Дополняет текст запроса получением выборки плановых показателей копируемого варианта бюджета
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&ДатаОстатков - Дата - наименьшая из 2-х дат: начало рассматриваемого в бюджете периода или текущая дата
//	&Дата1 - Дата - начальная дата самого первого бюджетного периода (задана с учетом смещения от календарного начала)
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//	&ВалютаУчета - СправочникСсылка.Валюты - значение одноименной константы
//	&ВалютаВарианта - СправочникСсылка.Валюты - валюта выбранного варианта бюджета
//
//Временные таблицы, которые должны быть в тексте запроса до выполнения данного запроса: 
//		"ТаблицаПериодов" - пронумерованные периоды бюджета в пределах заданного пользователем календарного периода (см. ДополнитьЗапросТаблицейПериодов())
//		"КлючиСтатей"  - бюджетные статьи с уникальными ключами и настройками пользователя (см. ДополнитьЗапросКлючамиБюджетныхСтатей())
//
// Параметры
//	ТекстЗапроса - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура - структура, в которую добавляются имена и индексы результатов пакетного запроса.
//	ПолучатьВыборку - Булево - Если ИСТИНА, запрос будет дополнен текстом выборки оборотов
//
&НаСервере
Процедура ДополнитьТекстЗапросаПоказателямиКопируемогоВарианта(ТекстЗапроса, СтруктураЗапроса)
	
	// Дополняем текст запросом создания временной таблицы показателей варианта-источника с ключами статей и графами бюджета
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВесьБюджетВВалютеИсточника", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ВесьБюджетВВалютеИсточника"" ";
	
	#Область ТекстЗапроса
	// Получаем показатели бюджета-источника и сворачиваем их по периодам бюджета-приемника
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ
	|	ТаблицаПериодов.НомерПериода КАК НомерПериода,
	|	ТаблицаПериодов.НачалоПериода КАК НачалоПериода,
	|	ПоказателиБюджета.РазделБюджета,
	|	ПоказателиБюджета.ТипПоказателя,
	|	ЕСТЬNULL(КлючиСтатей.КлючСтатьи, ВЫБОР
	|			КОГДА ПоказателиБюджета.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА ""99999.10.""
	|			ИНАЧЕ ""99999.20.""
	|		КОНЕЦ) КАК КлючСтатьи,
	|	ЕСТЬNULL(КлючиСтатей.ГрафаБюджета, ВЫБОР
	|			КОГДА ПоказателиБюджета.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы)
	|		КОНЕЦ) КАК ГрафаБюджета,
	|	ПоказателиБюджета.СтатьяБюджета,
	|	СУММА(ПоказателиБюджета.Сумма) КАК Сумма,
	|	ВЫРАЗИТЬ(ПоказателиБюджета.Комментарий КАК СТРОКА(1000)) КАК Комментарий
	|ПОМЕСТИТЬ ВесьБюджетВВалютеИсточника
	|ИЗ
	|	ТаблицаПериодов КАК ТаблицаПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|		ПО (ПоказателиБюджета.НачалоПериода МЕЖДУ ТаблицаПериодов.НачалоКалендарногоПериода И ТаблицаПериодов.КонецКалендарногоПериода)
	|			И (ПоказателиБюджета.ВариантБюджета = &ВариантБюджетаИсточника)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК КлючиСтатей
	|		ПО (ПоказателиБюджета.ТипПоказателя = КлючиСтатей.ТипПоказателя)
	|			И (ВЫБОР
	|				КОГДА ПоказателиБюджета.СтатьяБюджета ССЫЛКА Справочник.ГрафыБюджета
	|					ТОГДА ПоказателиБюджета.СтатьяБюджета.ОтношениеКНакоплениям
	|				КОГДА ПоказателиБюджета.СтатьяБюджета ССЫЛКА Справочник.ФинансовыеЦели
	|					ТОГДА ВЫБОР
	|							КОГДА ПоказателиБюджета.РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|								ТОГДА -1
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ = КлючиСтатей.ОтношениеКНакоплениям)
	|			И (ПоказателиБюджета.СтатьяБюджета = КлючиСтатей.СтатьяБюджета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПериодов.НомерПериода,
	|	ПоказателиБюджета.РазделБюджета,
	|	ЕСТЬNULL(КлючиСтатей.КлючСтатьи, ВЫБОР
	|			КОГДА ПоказателиБюджета.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА ""99999.10.""
	|			ИНАЧЕ ""99999.20.""
	|		КОНЕЦ),
	|	ЕСТЬNULL(КлючиСтатей.ГрафаБюджета, ВЫБОР
	|			КОГДА ПоказателиБюджета.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы)
	|		КОНЕЦ),
	|	ПоказателиБюджета.ТипПоказателя,
	|	ПоказателиБюджета.СтатьяБюджета,
	|	ТаблицаПериодов.НачалоПериода,
	|	ВЫРАЗИТЬ(ПоказателиБюджета.Комментарий КАК СТРОКА(1000))
	|";
	#КонецОбласти
	
	
	
	// Дополняем текст запросом пересчета показателей из валюты бюджета-источника в валюту бюджета-назначения
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВесьБюджет", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ВесьБюджет"" ";
	
	#Область ТекстЗапроса
	// курс валюты устанавливается на начало каждого бюджетного периода бюджета-приемника
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ
	|	ВесьБюджет.НомерПериода,
	|	ВесьБюджет.РазделБюджета,
	|	ВесьБюджет.ТипПоказателя,
	|	ВесьБюджет.КлючСтатьи,
	|	ВесьБюджет.ГрафаБюджета,
	|	ВесьБюджет.СтатьяБюджета,
	|	ВЫБОР КОГДА &ВалютаВарианта = &ВалютаВариантаНазначения 
	|		ТОГДА ВесьБюджет.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВесьБюджет.Сумма * ЕСТЬNULL(КурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(КурсыВалютыНазначения.Кратность, ЕСТЬNULL(ПоследниеКурсыНазначения.Кратность, 0)) / ВЫБОР
	|						КОГДА ЕСТЬNULL(КурсыВалютыНазначения.Курс, ЕСТЬNULL(ПоследниеКурсыНазначения.Курс, 1)) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|							ТОГДА 1
	|						ИНАЧЕ ЕСТЬNULL(КурсыВалютыНазначения.Курс, ЕСТЬNULL(ПоследниеКурсыНазначения.Курс, 1)) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|					КОНЕЦ КАК Число(15,2))
	|	КОНЕЦ КАК Сумма,
	|	ВесьБюджет.Комментарий
	|ПОМЕСТИТЬ ВесьБюджет
	|ИЗ
	|	ВесьБюджетВВалютеИсточника КАК ВесьБюджет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВесьБюджет.НачалоПериода = КурсыВалют.Период
	|			И КурсыВалют.Валюта = &ВалютаВарианта
	|			И (КурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыНазначения
	|		ПО (ВесьБюджет.НачалоПериода = КурсыВалютыНазначения.Период)
	|			И (КурсыВалютыНазначения.Валюта = &ВалютаВариантаНазначения)
	|			И (КурсыВалютыНазначения.БазоваяВалюта = &ВалютаУчета)
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсы
	|		ПО ПоследниеКурсы.Валюта = &ВалютаВарианта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсыНазначения
	|		ПО (ПоследниеКурсыНазначения.Валюта = &ВалютаВариантаНазначения)
	|
	|";
	#КонецОбласти
	
	
	// Дополняем текст выборкой показателей бюджета-источника, свернутыми по актуальным статьям бюджета-приемника
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВыборкаПоказателиБюджета", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка показателей бюджета ";
	
	#Область ТекстЗапроса
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ
	|	ВесьБюджет.НомерПериода КАК НомерПериода,
	|	ТаблицаПериодов.НачалоКалендарногоПериода КАК НачалоПериода,
	|	АктуальныеСтатьи.ТипПоказателя КАК ТипПоказателя,
	|	АктуальныеСтатьи.Графабюджета КАК Графабюджета,
	|	АктуальныеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	СУММА(ВесьБюджет.Сумма) КАК Сумма,
	|	МАКСИМУМ(ВесьБюджет.Комментарий) КАК Комментарий
	|ИЗ
	|	ВесьБюджет КАК ВесьБюджет
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВесьБюджет.ГрафаБюджета КАК ГрафаБюджета,
	|			ВесьБюджет.СтатьяБюджета КАК ТекущаяСтатья,
	|			МАКСИМУМ(ЕСТЬNULL(СтатьиБюджета.КлючСтатьи, ВЫБОР
	|						КОГДА ВесьБюджет.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|							ТОГДА ""99999.10.""
	|						ИНАЧЕ ""99999.20.""
	|					КОНЕЦ)) КАК КлючАктуальнойСтатьи
	|		ИЗ
	|			ВесьБюджет КАК ВесьБюджет
	|				ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК СтатьиБюджета
	|				ПО ВесьБюджет.ГрафаБюджета = СтатьиБюджета.ГрафаБюджета
	|					И (ВесьБюджет.КлючСтатьи МЕЖДУ СтатьиБюджета.КлючСтатьи И СтатьиБюджета.КлючСтатьи + ""яяя"")
	|					И (СтатьиБюджета.Видимость)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВесьБюджет.ГрафаБюджета,
	|			ВесьБюджет.СтатьяБюджета) КАК КлючиАктуальныхСтатей
	|			ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК АктуальныеСтатьи
	|			ПО КлючиАктуальныхСтатей.КлючАктуальнойСтатьи = АктуальныеСтатьи.КлючСтатьи
	|		ПО ВесьБюджет.ГрафаБюджета = КлючиАктуальныхСтатей.ГрафаБюджета
	|			И ВесьБюджет.СтатьяБюджета = КлючиАктуальныхСтатей.ТекущаяСтатья
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодов КАК ТаблицаПериодов
	|		ПО ВесьБюджет.НомерПериода = ТаблицаПериодов.НомерПериода
	|ГДЕ
	|	АктуальныеСтатьи.Видимость
	|
	|СГРУППИРОВАТЬ ПО
	|	АктуальныеСтатьи.ТипПоказателя,
	|	АктуальныеСтатьи.Графабюджета,
	|	АктуальныеСтатьи.СтатьяБюджета,
	|	ТаблицаПериодов.НачалоКалендарногоПериода,
	|	ВесьБюджет.НомерПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода,
	|	НачалоПериода,
	|	ТипПоказателя,
	|	СтатьяБюджета
	|";
	#КонецОбласти
	
	
КонецПроцедуры
 

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяДатаКлиентСервер()
	#Если Сервер Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли 
КонецФункции 

#КонецОбласти
