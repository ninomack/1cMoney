////////////////////////////////////////////////////////////////////////////////
//Обработка.РедакторАналитики.Форма.МатрицаАналитики
//  Групповое изменение значений аналитики в операциях
//  
//Параметры формы:
//  Стандартные параметры формы
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период      = Новый СтандартныйПериод(ВариантСтандартногоПериода.Последние7Дней);
	ВидыСтатей  = "Расход";
	
КонецПроцедуры
 

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидыСтатейПриИзменении(Элемент)
	НастройкиПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	НастройкиПриИзмененииСервер();
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ВидАналитики = Неопределено;
	Если Область.СодержитЗначение И ЕстьВидАналитики(Область, ВидАналитики) Тогда
		
		УстанавливатьОтбор = Ложь;
		СписокВыборСервер(Область.Верх, Область.Лево, ВидАналитики, УстанавливатьОтбор);
		
		Если УстанавливатьОтбор Тогда
			СтандартнаяОбработка = Ложь;
			ВыбратьЗначениеАналитики(Область.Верх, Область.Лево, ВидАналитики);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ВидСтроки = Неопределено;
	Если ТипЗнч(Расшифровка) <> Тип("Структура") Или Не Расшифровка.Свойство("ВидСтроки", ВидСтроки) Или не ЗначениеЗаполнено(ВидСтроки)  Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Расшифровка.ВидКолонки = "Операция" Или Расшифровка.ВидКолонки = "Сумма" Тогда
		ОткрытьОперацию(Расшифровка.Операция);
	КонецЕсли;
	
	 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаДополнительнойРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ВидСтроки = Неопределено;
	Если Расшифровка = Неопределено Или ТипЗнч(Расшифровка) <> Тип("Структура") Или Не Расшифровка.Свойство("ВидСтроки", ВидСтроки)
			Или Не ЗначениеЗаполнено(ВидСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Меню = Новый СписокЗначений;
	
	Если ВидСтроки = "ШапкаТаблицы" Тогда
		
		Если Расшифровка.ВидКолонки = "Операция" Тогда
			Возврат;
		КонецЕсли;
		
		Элементы.Список.ТекущаяОбласть = Список.Область(2, Расшифровка.НомерКолонки, Список.ВысотаТаблицы, Расшифровка.НомерКолонки);
		
		//Меню.Добавить("ЗаполнитьВсеОдинаково", НСтр("ru='Заполнить все операции одинаковыми значениями аналитики'"));
		Меню.Добавить("ОчиститьВсеЗначения", НСтр("ru='Очистить эту аналитику во всех операциях'"));
		Меню.Добавить("ЗаполнитьВсеПоУмолчанию", НСтр("ru='Заполнить эту аналитику во всех операциях значениями по умолчанию'"));
		
	ИначеЕсли ВидСтроки = "Операция" Тогда 
		
		Меню.Добавить("ОткрытьОперацию", НСтр("ru='Открыть операцию'"));
		
		Если Расшифровка.ВидКолонки = "Аналитика" Тогда
			//Меню.Добавить("ИзменитьАналитикуОперации", НСтр("ru='Изменить значение для всех строк операции...'"));
			Меню.Добавить("ОчиститьАналитикуОперации", НСтр("ru='Очистить во всех строках операции'"));
			Меню.Добавить("ЗаполнитьПоУмолчаниюАналитикуОперации", НСтр("ru='Заполнить аналитику в строках операции значениями по умолчанию'"));
		КонецЕсли;
		
	ИначеЕсли ВидСтроки = "Статья" Тогда
		
		Меню.Добавить("ОткрытьОперацию", НСтр("ru='Открыть операцию'"));
		
		Если Расшифровка.ВидКолонки = "Аналитика" Тогда
			//Меню.Добавить("Изменить", НСтр("ru='Изменить значение...'"));
			Меню.Добавить("Очистить", НСтр("ru='Очистить'"));
			Меню.Добавить("ЗаполнитьПоУмолчанию", НСтр("ru='Заполнить значением по умолчанию'"));
		КонецЕсли;
		
	КонецЕсли;
	
	Если Меню.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ВыборКонтекстногоМенюЗавершение", ЭтотОбъект, Расшифровка);
	ПоказатьВыборИзМеню(Оповещение, Меню);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Расшифровка = Область.Расшифровка;
	ВидСтроки   = Неопределено;
	Если Расшифровка = Неопределено Или ТипЗнч(Расшифровка) <> Тип("Структура") Или Не Расшифровка.Свойство("ВидСтроки", ВидСтроки)
			Или Не ЗначениеЗаполнено(ВидСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Строки = ВыделенныеСтроки(Область, Список);
	Если Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru='Запись изменений…'"));
	ИзменитьЗначениеАналитики(Область.Значение, Расшифровка, Строки);
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьТаблицуСервер();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаПеремещений(ИмяВидаДокумента)

	Возврат
	"// " + ИмяВидаДокумента +"
	|ВЫБРАТЬ
	|	""" + ИмяВидаДокумента + """ КАК ТипОперации,
	|	Подзапрос.Операция КАК Операция,
	|	Подзапрос.Дата КАК Дата,
	|	Подзапрос.Статья КАК Статья,
	|	Подзапрос.ВидАналитики КАК ВидАналитики,
	|	Подзапрос.НаименованиеВидаАналитики КАК НаименованиеВидаАналитики,
	|	НаборыАналитик.ЗначениеАналитики КАК ЗначениеАналитики,
	|	Подзапрос.НомерСтроки КАК НомерСтроки,
	|	Подзапрос.НомерСтроки КАК КоличествоСтрок,
	|	Подзапрос.Сумма КАК Сумма,
	|	0 КАК Количество,
	|	Подзапрос.АналитикаСтатьи КАК АналитикаСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее,
	|	Подзапрос.Валюта КАК Валюта,
	|	Подзапрос.ПометкаУдаления КАК ПометкаУдаления,
	|	Подзапрос.Проведен КАК Проведен
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасходРасходы.Ссылка КАК Операция,
	|		РасходРасходы.Ссылка.Дата КАК Дата,
	|		РасходРасходы.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		РасходРасходы.Ссылка.Проведен КАК Проведен,
	|		РасходРасходы.КошелекРасхода.Валюта КАК Валюта,
	|		РасходРасходы.СтатьяРасхода КАК Статья,
	|		Настройки.ВидАналитики КАК ВидАналитики,
	|		Настройки.ВидАналитики.Наименование КАК НаименованиеВидаАналитики,
	|		РасходРасходы.НомерСтроки КАК НомерСтроки,
	|		РасходРасходы.СуммаРасхода КАК Сумма,
	|		РасходРасходы.АналитикаСтатьи КАК АналитикаСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее
	|	ИЗ
	|		Документ." + ИмяВидаДокумента + ".ДополнительныеРасходы КАК РасходРасходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|			ПО (Настройки.ДляОтдельныхСтатей = ЛОЖЬ
	|					ИЛИ Настройки.ДляОтдельныхСтатей = ИСТИНА
	|						И РасходРасходы.СтатьяРасхода = Настройки.Статья)
	|	ГДЕ
	|		РасходРасходы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|		И НЕ РасходРасходы.Ссылка.ЭтоШаблон) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК НаборыАналитик
	|		ПО Подзапрос.АналитикаСтатьи = НаборыАналитик.Ссылка
	|			И Подзапрос.ВидАналитики = НаборыАналитик.ВидАналитики";
	

КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаРасходы()

	Возврат
	"ВЫБРАТЬ
	|	ВидыАналитик.Ссылка КАК ВидАналитики,
	|	ВидыАналитик.ЗначениеАналитикиРасхода КАК ЗначениеПоУмолчаниюОбщее,
	|	ВидыАналитик.РасширенныеНастройкиДляРасхода КАК ДляОтдельныхСтатей,
	|	НЕОПРЕДЕЛЕНО КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК ЗначениеПоУмолчаниюДляСтатьи
	|ПОМЕСТИТЬ Настройки
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|ГДЕ
	|	ВидыАналитик.АктуальнаДляРасхода
	|	И НЕ ВидыАналитик.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиАналитикиПоСтатьям.ВидАналитики,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	НастройкиАналитикиПоСтатьям.Статья,
	|	НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию
	|ИЗ
	|	РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|ГДЕ
	|	НастройкиАналитикиПоСтатьям.Использовать
	|	И НастройкиАналитикиПоСтатьям.ВидАналитики.РасширенныеНастройкиДляРасхода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидАналитики,
	|	Статья
	|;
	|
	|
	|ВЫБРАТЬ *, 
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Подзапрос.ЗначениеАналитики, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|			ТОГДА ""Й""
	|		КОГДА ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(СТРОКА)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(ЧИСЛО)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(ДАТА)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(БУЛЕВО)
	|			ТОГДА Подзапрос.ЗначениеАналитики
	|		КОГДА Подзапрос.ЗначениеАналитики.ПометкаУдаления ЕСТЬ NULL
	|			ТОГДА ""Й""
	|		ИНАЧЕ Подзапрос.ЗначениеАналитики
	|	КОНЕЦ КАК КоличествоЗначений
	|ИЗ (
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Расход
	|ВЫБРАТЬ
	|	""Расход"" КАК ТипОперации,
	|	Подзапрос.Операция КАК Операция,
	|	Подзапрос.Дата КАК Дата,
	|	Подзапрос.Статья КАК Статья,
	|	Подзапрос.ВидАналитики КАК ВидАналитики,
	|	Подзапрос.НаименованиеВидаАналитики КАК НаименованиеВидаАналитики,
	|	НаборыАналитик.ЗначениеАналитики КАК ЗначениеАналитики,
	|	Подзапрос.НомерСтроки КАК НомерСтроки,
	|	Подзапрос.НомерСтроки КАК КоличествоСтрок,
	|	Подзапрос.Сумма КАК Сумма,
	|	Подзапрос.Количество КАК Количество,
	|	Подзапрос.АналитикаСтатьи КАК АналитикаСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее,
	|	Подзапрос.Валюта КАК Валюта,
	|	Подзапрос.ПометкаУдаления КАК ПометкаУдаления,
	|	Подзапрос.Проведен КАК Проведен
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасходРасходы.Ссылка КАК Операция,
	|		РасходРасходы.Ссылка.Дата КАК Дата,
	|		РасходРасходы.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		РасходРасходы.Ссылка.Проведен КАК Проведен,
	|		РасходРасходы.Ссылка.ВалютаОперации КАК Валюта,
	|		РасходРасходы.СтатьяРасходаИмущество КАК Статья,
	|		Настройки.ВидАналитики КАК ВидАналитики,
	|		Настройки.ВидАналитики.Наименование КАК НаименованиеВидаАналитики,
	|		РасходРасходы.НомерСтроки КАК НомерСтроки,
	|		РасходРасходы.Сумма КАК Сумма,
	|		РасходРасходы.Количество КАК Количество,
	|		РасходРасходы.АналитикаСтатьи КАК АналитикаСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее
	|	ИЗ
	|		Документ.Расход.Расходы КАК РасходРасходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|			ПО (Настройки.ДляОтдельныхСтатей = ЛОЖЬ
	|					ИЛИ Настройки.ДляОтдельныхСтатей = ИСТИНА
	|						И РасходРасходы.СтатьяРасходаИмущество = Настройки.Статья)
	|	ГДЕ
	|		РасходРасходы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|		И НЕ РасходРасходы.Ссылка.ЭтоШаблон
	|		И РасходРасходы.СтатьяРасходаИмущество ССЫЛКА Справочник.СтатьиРасходов
	|		) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК НаборыАналитик
	|		ПО Подзапрос.АналитикаСтатьи = НаборыАналитик.Ссылка
	|			И Подзапрос.ВидАналитики = НаборыАналитик.ВидАналитики
	|" + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапросаПеремещений("Перемещение") + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапросаПеремещений("ОбменВалюты") + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапросаПеремещений("МыВернулиДолг") + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапросаПеремещений("МыВзялиВДолг") + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапросаПеремещений("МыДалиВДолг") + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапросаПеремещений("НамВернулиДолг") + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|" + "
	|// УниверсальнаяОперация
	|ВЫБРАТЬ
	|	""УниверсальнаяОперация"" КАК ТипОперации,
	|	Подзапрос.Операция КАК Операция,
	|	Подзапрос.Дата КАК Дата,
	|	Подзапрос.Статья КАК Статья,
	|	Подзапрос.ВидАналитики КАК ВидАналитики,
	|	Подзапрос.НаименованиеВидаАналитики КАК НаименованиеВидаАналитики,
	|	НаборыАналитик.ЗначениеАналитики КАК ЗначениеАналитики,
	|	Подзапрос.НомерСтроки КАК НомерСтроки,
	|	Подзапрос.НомерСтроки КАК КоличествоСтрок,
	|	Подзапрос.Сумма КАК Сумма,
	|	0 КАК Количество,
	|	Подзапрос.АналитикаСтатьи КАК АналитикаСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее,
	|	Подзапрос.Валюта КАК Валюта,
	|	Подзапрос.ПометкаУдаления КАК ПометкаУдаления,
	|	Подзапрос.Проведен КАК Проведен
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасходРасходы.Ссылка КАК Операция,
	|		РасходРасходы.Ссылка.Дата КАК Дата,
	|		РасходРасходы.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		РасходРасходы.Ссылка.Проведен КАК Проведен,
	|		РасходРасходы.ОбъектУчета.Валюта КАК Валюта,
	|		РасходРасходы.СтатьяРасхода КАК Статья,
	|		Настройки.ВидАналитики КАК ВидАналитики,
	|		Настройки.ВидАналитики.Наименование КАК НаименованиеВидаАналитики,
	|		РасходРасходы.НомерСтроки КАК НомерСтроки,
	|		РасходРасходы.Сумма КАК Сумма,
	|		РасходРасходы.АналитикаСтатьиРасхода КАК АналитикаСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее
	|	ИЗ
	|		Документ.УниверсальнаяОперация.Расходы КАК РасходРасходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|			ПО (Настройки.ДляОтдельныхСтатей = ЛОЖЬ
	|					ИЛИ Настройки.ДляОтдельныхСтатей = ИСТИНА
	|						И РасходРасходы.СтатьяРасхода = Настройки.Статья)
	|	ГДЕ
	|		РасходРасходы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|		И НЕ РасходРасходы.Ссылка.ЭтоШаблон) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК НаборыАналитик
	|		ПО Подзапрос.АналитикаСтатьи = НаборыАналитик.Ссылка
	|			И Подзапрос.ВидАналитики = НаборыАналитик.ВидАналитики
	|
	|) КАК Подзапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операция.Дата,
	|	Операция,
	|	НомерСтроки,
	|	Подзапрос.НаименованиеВидаАналитики
	|ИТОГИ
	|	МАКСИМУМ(ТипОперации),
	|	МАКСИМУМ(Статья),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоСтрок),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоЗначений),
	|	МАКСИМУМ(ЗначениеАналитики),
	|	МАКСИМУМ(Сумма),
	|	МАКСИМУМ(ЗначениеПоУмолчаниюДляСтатьи),
	|	МАКСИМУМ(ЗначениеПоУмолчаниюОбщее),
	|	МАКСИМУМ(Валюта),
	|	МАКСИМУМ(ПометкаУдаления),
	|	МАКСИМУМ(Проведен)
	|ПО
	|	Операция,
	|	НомерСтроки,
	|	ВидАналитики";

КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаДоходы()

	Возврат
	"ВЫБРАТЬ
	|	ВидыАналитик.Ссылка КАК ВидАналитики,
	|	ВидыАналитик.ЗначениеАналитикиРасхода КАК ЗначениеПоУмолчаниюОбщее,
	|	ВидыАналитик.РасширенныеНастройкиДляРасхода КАК ДляОтдельныхСтатей,
	|	НЕОПРЕДЕЛЕНО КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК ЗначениеПоУмолчаниюДляСтатьи
	|ПОМЕСТИТЬ Настройки
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|ГДЕ
	|	ВидыАналитик.АктуальнаДляДохода
	|	И НЕ ВидыАналитик.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиАналитикиПоСтатьям.ВидАналитики,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	НастройкиАналитикиПоСтатьям.Статья,
	|	НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию
	|ИЗ
	|	РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|ГДЕ
	|	НастройкиАналитикиПоСтатьям.Использовать
	|	И НастройкиАналитикиПоСтатьям.ВидАналитики.РасширенныеНастройкиДляРасхода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидАналитики,
	|	Статья
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Подзапрос.ЗначениеАналитики, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|			ТОГДА ""Й""
	|		КОГДА ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(СТРОКА)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(ЧИСЛО)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(ДАТА)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Подзапрос.ЗначениеАналитики) = ТИП(БУЛЕВО)
	|			ТОГДА Подзапрос.ЗначениеАналитики
	|		КОГДА Подзапрос.ЗначениеАналитики.ПометкаУдаления ЕСТЬ NULL
	|			ТОГДА ""Й""
	|		ИНАЧЕ Подзапрос.ЗначениеАналитики
	|	КОНЕЦ КАК КоличествоЗначений
	|ИЗ (
	|ВЫБРАТЬ
	|	""Доход"" КАК ТипОперации,
	|	Подзапрос.Операция КАК Операция,
	|	Подзапрос.Дата КАК Дата,
	|	Подзапрос.Статья КАК Статья,
	|	Подзапрос.ВидАналитики КАК ВидАналитики,
	|	Подзапрос.НаименованиеВидаАналитики КАК НаименованиеВидаАналитики,
	|	НаборыАналитик.ЗначениеАналитики КАК ЗначениеАналитики,
	|	Подзапрос.НомерСтроки КАК НомерСтроки,
	|	Подзапрос.НомерСтроки КАК КоличествоСтрок,
	|	Подзапрос.Сумма КАК Сумма,
	|	Подзапрос.АналитикаСтатьи КАК АналитикаСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее,
	|	Подзапрос.Валюта КАК Валюта,
	|	Подзапрос.ПометкаУдаления КАК ПометкаУдаления,
	|	Подзапрос.Проведен КАК Проведен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокДоходы.Ссылка КАК Операция,
	|		ДокДоходы.Ссылка.Дата КАК Дата,
	|		ДокДоходы.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		ДокДоходы.Ссылка.Проведен КАК Проведен,
	|		ЕСТЬNULL(ДокДоходы.Кошелек.Валюта, &ВалютаУчета) КАК Валюта,
	|		ДокДоходы.СтатьяДохода КАК Статья,
	|		Настройки.ВидАналитики КАК ВидАналитики,
	|		Настройки.ВидАналитики.Наименование КАК НаименованиеВидаАналитики,
	|		ДокДоходы.НомерСтроки КАК НомерСтроки,
	|		ДокДоходы.СуммаДохода КАК Сумма,
	|		ДокДоходы.АналитикаСтатьи КАК АналитикаСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее
	|	ИЗ
	|		Документ.Доход.Доходы КАК ДокДоходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|			ПО (Настройки.ДляОтдельныхСтатей = ЛОЖЬ
	|					ИЛИ Настройки.ДляОтдельныхСтатей = ИСТИНА
	|						И ДокДоходы.СтатьяДохода = Настройки.Статья)
	|	ГДЕ
	|		ДокДоходы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|		И НЕ ДокДоходы.Ссылка.ЭтоШаблон
	|		И ДокДоходы.СтатьяДохода ССЫЛКА Справочник.СтатьиДоходов) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК НаборыАналитик
	|		ПО Подзапрос.АналитикаСтатьи = НаборыАналитик.Ссылка
	|			И Подзапрос.ВидАналитики = НаборыАналитик.ВидАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""УниверсальнаяОперация"" КАК ТипОперации,
	|	Подзапрос.Операция,
	|	Подзапрос.Дата,
	|	Подзапрос.Статья,
	|	Подзапрос.ВидАналитики,
	|	Подзапрос.НаименованиеВидаАналитики,
	|	НаборыАналитик.ЗначениеАналитики,
	|	Подзапрос.НомерСтроки,
	|	Подзапрос.НомерСтроки,
	|	Подзапрос.Сумма,
	|	Подзапрос.АналитикаСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюДляСтатьи,
	|	Подзапрос.ЗначениеПоУмолчаниюОбщее,
	|	Подзапрос.Валюта,
	|	Подзапрос.ПометкаУдаления,
	|	Подзапрос.Проведен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокДоходы.Ссылка КАК Операция,
	|		ДокДоходы.Ссылка.Дата КАК Дата,
	|		ДокДоходы.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|		ДокДоходы.Ссылка.Проведен КАК Проведен,
	|		ДокДоходы.ОбъектУчета.Валюта КАК Валюта,
	|		ДокДоходы.СтатьяДохода КАК Статья,
	|		Настройки.ВидАналитики КАК ВидАналитики,
	|		Настройки.ВидАналитики.Наименование КАК НаименованиеВидаАналитики,
	|		ДокДоходы.НомерСтроки КАК НомерСтроки,
	|		ДокДоходы.Сумма КАК Сумма,
	|		ДокДоходы.АналитикаСтатьиДохода КАК АналитикаСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюДляСтатьи КАК ЗначениеПоУмолчаниюДляСтатьи,
	|		Настройки.ЗначениеПоУмолчаниюОбщее КАК ЗначениеПоУмолчаниюОбщее
	|	ИЗ
	|		Документ.УниверсальнаяОперация.Доходы КАК ДокДоходы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|			ПО (Настройки.ДляОтдельныхСтатей = ЛОЖЬ
	|					ИЛИ Настройки.ДляОтдельныхСтатей = ИСТИНА
	|						И ДокДоходы.СтатьяДохода = Настройки.Статья)
	|	ГДЕ
	|		ДокДоходы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|		И НЕ ДокДоходы.Ссылка.ЭтоШаблон) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК НаборыАналитик
	|		ПО Подзапрос.АналитикаСтатьи = НаборыАналитик.Ссылка
	|			И Подзапрос.ВидАналитики = НаборыАналитик.ВидАналитики
	|) КАК Подзапрос
	|УПОРЯДОЧИТЬ ПО
	|	Операция.Дата,
	|	Операция,
	|	НомерСтроки,
	|	Подзапрос.НаименованиеВидаАналитики
	|ИТОГИ
	|	МАКСИМУМ(Статья),
	|	МАКСИМУМ(ТипОперации),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоЗначений),
	|	МАКСИМУМ(ЗначениеАналитики),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоСтрок),
	|	МАКСИМУМ(Сумма),
	|	МАКСИМУМ(ЗначениеПоУмолчаниюДляСтатьи),
	|	МАКСИМУМ(ЗначениеПоУмолчаниюОбщее),
	|	МАКСИМУМ(Валюта),
	|	МАКСИМУМ(ПометкаУдаления),
	|	МАКСИМУМ(Проведен)
	|ПО
	|	Операция,
	|	НомерСтроки,
	|	ВидАналитики";

КонецФункции

&НаСервереБезКонтекста
Функция РезультатыЗапроса(ВидыСтатей, Период)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Если ВидыСтатей = "Расход" Тогда
		Запрос.Текст = ТекстЗапросаРасходы();
	Иначе
		Запрос.Текст = ТекстЗапросаДоходы();
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

&НаСервере
Функция СтруктураМакетов()

	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	Макеты = ЭтаОбработка.ПолучитьМакет("Макет");
	
	Результат = Новый Структура;
	
	МассивСтрок = Новый Массив;
	Массивколонок = Новый Массив;
	Для каждого Область Из Макеты.Области Цикл
		Если Лев(Область.Имя, 6) = "Строка"  Тогда
			МассивСтрок.Добавить(Сред(Область.Имя, 7));
		ИначеЕсли Лев(Область.Имя, 7) = "Колонка"  Тогда
			Массивколонок.Добавить(Сред(Область.Имя, 8));
		Иначе
			// Добавляем область как есть 
			Результат.Вставить(Область.Имя, Область);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Строка Из МассивСтрок Цикл
		
		КолонкиСтроки = Новый Структура;
		Для каждого Колонка Из Массивколонок Цикл
			КолонкиСтроки.Вставить(Колонка, Макеты.ПолучитьОбласть("Строка" + Строка + "|Колонка" + Колонка));
		КонецЦикла;
		
		Результат.Вставить(Строка, КолонкиСтроки);
		
	КонецЦикла;
	
	// Один из макетов поправим вручную
	Результат.Операция.Операция = Макеты.ПолучитьОбласть("ОбластьОперация");
	
	Возврат Результат;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НоваяРасшифровка(ВидСтроки, ВидКолонки, Выборка, ТабличныйДокумент, СтрокаТаблицы)

	Результат = Новый Структура;
	
	Результат.Вставить("ВидСтроки",     ВидСтроки);
	Результат.Вставить("ВидКолонки",    ВидКолонки);
	Результат.Вставить("НомерСтроки",   ТабличныйДокумент.ВысотаТаблицы + 1);
	Результат.Вставить("НомерКолонки",  СтрокаТаблицы.ШиринаТаблицы + 1);
	
	Если ВидКолонки = "Аналитика" Тогда
		Результат.Вставить("ВидАналитики",  Выборка.ВидАналитики);
		
		Если ВидСтроки <> "ШапкаТаблицы" Тогда
			Результат.Вставить("ЗначениеАналитики", Выборка.ЗначениеАналитики);
		КонецЕсли;
		
		Если ВидСтроки = "Операция" Или  ВидСтроки = "Статья" Тогда
			Результат.Вставить("ЗначениеПоУмолчаниюОбщее", Выборка.ЗначениеПоУмолчаниюОбщее);
		КонецЕсли;
		
		Если ВидСтроки = "Статья" Тогда
			Результат.Вставить("ЗначениеПоУмолчаниюДляСтатьи", Выборка.ЗначениеПоУмолчаниюДляСтатьи);
		КонецЕсли;
		
		Результат.Вставить("ПредставлениеАналитики",  Строка(Выборка.ЗначениеАналитики));
		
	КонецЕсли;
	
	Если ВидКолонки = "Сумма" Тогда
		Результат.Вставить("Сумма",         Выборка.Сумма);
		Результат.Вставить("ПредставлениеСуммы", Формат(Выборка.Сумма, "ЧДЦ=2; ЧН=0,00") + " " + Выборка.Валюта);
	КонецЕсли;
	
	Если ВидСтроки = "Операция" Или ВидСтроки = "Статья" Тогда
		Результат.Вставить("Операция", Выборка.Операция);
	КонецЕсли;
	
	Если ВидСтроки = "Операция" И ВидКолонки = "Операция" Тогда
		Результат.Вставить("Проведен", Выборка.Проведен);
		Результат.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
		Результат.Вставить("Дата", Выборка.Дата);
	КонецЕсли;
	
	Если ВидСтроки = "Статья" Тогда
		Результат.Вставить("Статья", Выборка.Статья);
		Результат.Вставить("НомерСтрокиДокумента", Выборка.НомерСтроки);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Функция ИмяКартинкиОперации(ТипОперации, Проведен, ПометкаУдаления)

	Возврат ТипОперации + ?(Проведен, "1", ?(ПометкаУдаления, "2", "0"));

КонецФункции
 

&НаСервере
Процедура ОбновитьТаблицуСервер()

	Результат = РезультатыЗапроса(ВидыСтатей, Период);
	МакетыОтчета = СтруктураМакетов();
	
	Список.Очистить();
	
	// Выводим шапку
	СтрокаОтчета = Новый ТабличныйДокумент;
	СтрокаОтчета.Вывести(МакетыОтчета.ШапкаТаблицы.Операция);
	СтрокаОтчета.Присоединить(МакетыОтчета.ШапкаТаблицы.Сумма);
	
	МакетАналитики = МакетыОтчета.ШапкаТаблицы.Аналитика;
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидАналитики", "ВСЕ");
	Пока Выборка.Следующий() Цикл
		МакетАналитики.Параметры.ВидАналитики = Выборка.ВидАналитики;
		МакетАналитики.Параметры.Расшифровка = НоваяРасшифровка("ШапкаТаблицы", "Аналитика", Выборка, Список, СтрокаОтчета);
		СтрокаОтчета.Присоединить(МакетАналитики);
	КонецЦикла;
	ВсегоАналитик = Выборка.Количество();
	
	Список.Вывести(СтрокаОтчета);
	
	// Выводим операции
	ВыборкаОпераций = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Операция");
	Пока ВыборкаОпераций.Следующий() Цикл
		
		СтрокаОтчета = Новый ТабличныйДокумент;
		
		МакетНачала = МакетыОтчета.Операция.Операция;
		МакетНачала.Параметры.Операция = ВыборкаОпераций.Операция;
		МакетНачала.Параметры.Расшифровка = НоваяРасшифровка("Операция", "Операция", ВыборкаОпераций, Список, СтрокаОтчета);
		МакетНачала.Параметры.КартинкаОперации = МакетыОтчета[ИмяКартинкиОперации(ВыборкаОпераций.ТипОперации, ВыборкаОпераций.Проведен, ВыборкаОпераций.ПометкаУдаления)].Картинка;
		СтрокаОтчета.Вывести(МакетНачала);
		
		МакетАналитики = МакетыОтчета.Операция.Аналитика;
		ВыборкаАналитики = ВыборкаОпераций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидАналитики", "ВСЕ");
		Пока ВыборкаАналитики.Следующий() Цикл
			
			МакетАналитики.Параметры.Расшифровка = НоваяРасшифровка("Операция", "Аналитика", ВыборкаАналитики, Список, СтрокаОтчета);
			
			Если ВыборкаАналитики.КоличествоЗначений = 0 Тогда
				МакетАналитики.Параметры.ЗначениеАналитики = "";
				МакетАналитики.Параметры.Расшифровка.Вставить("ЗначениеАналитики", Неопределено);
			ИначеЕсли ВыборкаАналитики.КоличествоЗначений = 1 Тогда
				МакетАналитики.Параметры.ЗначениеАналитики = ВыборкаАналитики.ЗначениеАналитики;
				МакетАналитики.Параметры.Расшифровка.Вставить("ЗначениеАналитики", Выборка.ЗначениеАналитики);
			Иначе
				МакетАналитики.Параметры.ЗначениеАналитики = "";
				МакетАналитики.Параметры.Расшифровка.Вставить("ЗначениеАналитики", Неопределено);
			КонецЕсли;
			МакетАналитики.Параметры.Расшифровка.ПредставлениеАналитики = Строка(МакетАналитики.Параметры.Расшифровка.ЗначениеАналитики);
			
			СтрокаОтчета.Присоединить(МакетАналитики);
			
		КонецЦикла;
		
		Список.Вывести(СтрокаОтчета);
		НомерСтрокиОперации = Список.ВысотаТаблицы;
		
		// Выводим строки операции
		ВыборкаСтрок = ВыборкаОпераций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерСтроки");
		Пока ВыборкаСтрок.Следующий() Цикл
			
			СтрокаОтчета = Новый ТабличныйДокумент;
			
			// Статья
			МакетНачала = МакетыОтчета.Статья.Операция;
			МакетНачала.Параметры.Статья = Формат(ВыборкаСтрок.НомерСтроки, "ЧДЦ=; ЧГ=") + ". " + ВыборкаСтрок.Статья;
			МакетНачала.Параметры.Расшифровка = НоваяРасшифровка("Статья", "Операция", ВыборкаСтрок, Список, СтрокаОтчета);
			МакетНачала.Параметры.Расшифровка.Вставить("СтрокаШапкиДокумента", НомерСтрокиОперации);
			СтрокаОтчета.Вывести(МакетНачала);
			
			// Сумма
			МакетСуммы = МакетыОтчета.Статья.Сумма;
			МакетСуммы.Параметры.Сумма = Формат(ВыборкаСтрок.Сумма, "ЧДЦ=2") + " " + ВыборкаСтрок.Валюта;
			МакетСуммы.Параметры.Расшифровка = НоваяРасшифровка("Статья", "Сумма", ВыборкаСтрок, Список, СтрокаОтчета);
			МакетСуммы.Параметры.Расшифровка.Вставить("СтрокаШапкиДокумента", НомерСтрокиОперации);
			СтрокаОтчета.Присоединить(МакетСуммы);
			
			// Добавляем аналитику
			МакетАналитики = МакетыОтчета.Статья.Аналитика;
			ВыборкаАналитики = ВыборкаСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидАналитики", "ВСЕ");
			Пока ВыборкаАналитики.Следующий() Цикл
				
				МакетАналитики.Параметры.ЗначениеАналитики = ВыборкаАналитики.ЗначениеАналитики;
				МакетАналитики.Параметры.Расшифровка = НоваяРасшифровка("Статья", "Аналитика", ВыборкаАналитики, Список, СтрокаОтчета);
				МакетАналитики.Параметры.Расшифровка.Вставить("СтрокаШапкиДокумента", НомерСтрокиОперации);
				СтрокаОтчета.Присоединить(МакетАналитики);
				
			КонецЦикла;
			
			Список.Вывести(СтрокаОтчета);
		
		КонецЦикла;
		
		Если ВыборкаОпераций.КоличествоСтрок = 1 Тогда
			
			// уменьшаем количество полней ввода для однострочных документов
			ВыборкаАналитики = ВыборкаОпераций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидАналитики", "ВСЕ");
			Для СчетчикКолонок = 1 По ВсегоАналитик Цикл
				
				ОбластьАналитики = Список.Область(Список.ВысотаТаблицы - 1, 3 + СчетчикКолонок, Список.ВысотаТаблицы, 3 + СчетчикКолонок);
				ОбластьАналитики.Объединить();
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ВыборкаОпераций.ПометкаУдаления Или Не ВыборкаОпераций.Проведен Тогда
			
			// Изменяем шрифт и цвет черновиков
			ШрифтОперации      = Новый Шрифт(МакетАналитики.Область(1,1).Шрифт, , , , , , ВыборкаОпераций.ПометкаУдаления);
			ЦветТекстаОперации = ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
			НачалоОбласти      = Список.Область(Список.ВысотаТаблицы, 1).Расшифровка.СтрокаШапкиДокумента;
			
			ОбластьОперации = Список.Область(НачалоОбласти, 1, Список.ВысотаТаблицы, Список.ШиринаТаблицы);
			ОбластьОперации.ЦветТекста =  ЦветТекстаОперации;
			ОбластьОперации.Шрифт      =  ШрифтОперации;
			
		КонецЕсли;
		
	КонецЦикла;

	// Добавляем подвал
	СтрокаОтчета = Новый ТабличныйДокумент;
	СтрокаОтчета.Вывести(МакетыОтчета.Подвал.Операция);
	СтрокаОтчета.Присоединить(МакетыОтчета.Подвал.Сумма);
	Для Счетчик = 1 По ВсегоАналитик Цикл
		СтрокаОтчета.Присоединить(МакетыОтчета.Подвал.Аналитика);
	КонецЦикла;
	
	Список.Вывести(СтрокаОтчета);
	
	// Прикрепляем строки
	Список.ФиксацияСверху = 1;
	Список.ФиксацияСлева  = 2;
	
КонецПроцедуры


&НаСервере
Процедура СписокВыборСервер(Верх, Лево, ВидАналитики, УстанавливатьОтбор)

	Область = Список.Область(Верх, Лево);
	УстановитьТипВПолеВВода(Область, ВидАналитики);
	УстанавливатьОтбор = ЗначениеЗаполнено(ВидАналитики) И ВидАналитики.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДополнительныеЗначенияВидовАналитик"));

КонецПроцедуры
 
&НаСервере
Процедура УстановитьТипВПолеВВода(Область, ВидАналитики)

	Если ЗначениеЗаполнено(ВидАналитики) Тогда
		Область.ТипЗначения = ВидАналитики.ТипЗначения;
	Иначе
		Область.ТипЗначения = Метаданные.ПланыВидовХарактеристик.ВидыАналитик.Тип;
	КонецЕсли;
	Область.Значение    = ВидАналитики.ТипЗначения.ПривестиЗначение(Область.Значение);

КонецПроцедуры

&НаКлиенте 
Процедура ВыбратьЗначениеАналитики(Верх, Лево, ВидАналитики)

	// Параметры открываемой формы
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура);
	ПараметрыФормы.Отбор.Вставить("Владелец", ВидАналитики);
	ПараметрыФормы.Отбор.Вставить("Активность", Истина);
	
	Область = Список.Область(Верх, Лево);
	
	// Обработчик оповещения о закрытии формы
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Верх", Верх);
	ДополнительныеПараметры.Вставить("Лево", Лево);
	ДополнительныеПараметры.Вставить("ВидАналитики", ВидАналитики);
	ДополнительныеПараметры.Вставить("ТекущееЗначение", Область.Значение);
	Оповещение = Новый ОписаниеОповещения("ВыбратьЗначениеАналитикиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	// Открытие формы
	ОткрытьФорму("Справочник.ДополнительныеЗначенияВидовАналитик.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначениеАналитикиЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Область = Список.Область(ДополнительныеПараметры.Верх, ДополнительныеПараметры.Лево);
	Область.Значение = Результат;
	СписокПриИзмененииСодержимогоОбласти(Элементы.Список, Область);
	
КонецПроцедуры
 

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьВидАналитики(Область, ВидАналитики = Неопределено)

	Возврат ТипЗнч(Область.Расшифровка) = Тип("Структура") 
		И Область.Расшифровка.Свойство("ВидАналитики", ВидАналитики) И ЗначениеЗаполнено(ВидАналитики);
		
КонецФункции

&НаКлиенте
Процедура ВыборКонтекстногоМенюЗавершение(Выбор, Расшифровка) Экспорт

	Если Выбор = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Выбор.Значение = "ОткрытьОперацию" Тогда
		
		ОткрытьОперацию(Расшифровка.Операция);
		
	ИначеЕсли Выбор.Значение = "ОчиститьВсеЗначения" Или Выбор.Значение = "Очистить" Тогда
		
		Состояние(НСтр("ru='Очистка значений аналитики…'"));
		ИзменитьЗначениеАналитики(Неопределено, Расшифровка, ВыделенныеСтроки(Список.Область(Расшифровка.НомерСтроки, Расшифровка.НомерКолонки), Список));
		
	ИначеЕсли Выбор.Значение = "ЗаполнитьВсеПоУмолчанию" Или Выбор.Значение = "ЗаполнитьПоУмолчанию" Тогда
		
		Состояние(НСтр("ru='Заполнение аналитики значениями по умолчанию…'"));
		ИзменитьЗначениеАналитики(NULL, Расшифровка, ВыделенныеСтроки(Список.Область(Расшифровка.НомерСтроки, Расшифровка.НомерКолонки), Список));
		
	ИначеЕсли Выбор.Значение = "ОчиститьАналитикуОперации" Тогда
		
		Состояние(НСтр("ru='Очистка значений аналитики в операции…'"));
		ИзменитьЗначениеАналитики(Неопределено, Расшифровка, МассивСтрокОперации(Расшифровка, Список));
		
	ИначеЕсли Выбор.Значение = "ЗаполнитьПоУмолчаниюАналитикуОперации" Тогда
		
		Состояние(НСтр("ru='Заполнение аналитики умолчаниями в операции…'"));
		ИзменитьЗначениеАналитики(NULL, Расшифровка, МассивСтрокОперации(Расшифровка, Список));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВыделенныеСтроки(Область, ТабличныйДокумент)

	НомерКолонки = Область.Расшифровка.НомерКолонки;
	Результат = Новый Массив;
	Для каждого ВыделеннаяЯчейка Из ТабличныйДокумент.ВыделенныеОбласти Цикл
		
		Если ТипЗнч(ВыделеннаяЯчейка) <> Тип("ОбластьЯчеекТабличногоДокумента") 
				Или ВыделеннаяЯчейка.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВыделеннаяЯчейка.Лево <= НомерКолонки И ВыделеннаяЯчейка.Право >= НомерКолонки Тогда
			
			НомерСтроки = ВыделеннаяЯчейка.Верх;
			Пока НомерСтроки <= ВыделеннаяЯчейка.Низ Цикл
				
				ЯчейкаВыделения = ТабличныйДокумент.Область(НомерСтроки, НомерКолонки);
				Если ЕстьВидАналитики(ЯчейкаВыделения) И 
						(ЯчейкаВыделения.Расшифровка.ВидСтроки = "Операция" Или ЯчейкаВыделения.Расшифровка.ВидСтроки = "Статья") Тогда
					Результат.Добавить(НомерСтроки);
				КонецЕсли;
				
				НомерСтроки = НомерСтроки + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ИзменитьЗначениеАналитики(НовоеЗначение, Расшифровка, Строки)

	НомерКолонки = Расшифровка.НомерКолонки;
	
	Операции = Новый Соответствие;
	Для каждого НомерСтроки Из Строки Цикл
		
		Область = Список.Область(НомерСтроки, НомерКолонки);
		Если НовоеЗначение = NULL Тогда
			// Заполнение значениями по умолчанию
			
			Если Область.Расшифровка.ВидСтроки = "Статья" Тогда
				ЗначениеАналитики = ?(ЗначениеЗаполнено(Область.Расшифровка.ЗначениеПоУмолчаниюДляСтатьи), 
					Область.Расшифровка.ЗначениеПоУмолчаниюДляСтатьи, Область.Расшифровка.ЗначениеПоУмолчаниюОбщее);
			Иначе
				Продолжить;
			КонецЕсли;
			
		Иначе
			ЗначениеАналитики = НовоеЗначение;
		КонецЕсли;
		
		Если Область.Расшифровка.ВидСтроки = "Операция" И НовоеЗначение <> NULL Тогда
			ДобавитьСтрокуВСписокОпераций(Операции, Область.Расшифровка.НомерСтроки, "ВСЕ", ЗначениеАналитики);
			ЗаполнитьЗначениемВсеСтрокиОперации(Область.Расшифровка, ЗначениеАналитики);
		ИначеЕсли Область.Расшифровка.ВидСтроки = "Статья" Тогда
			ДобавитьСтрокуВСписокОпераций(Операции, Область.Расшифровка.СтрокаШапкиДокумента, Область.Расшифровка.НомерСтрокиДокумента, ЗначениеАналитики);
		КонецЕсли;
		Область.Значение = ЗначениеАналитики;
		Область.Расшифровка.ЗначениеАналитики = ЗначениеАналитики;
		Область.Расшифровка.ПредставлениеАналитики = Строка(Область.Расшифровка.ЗначениеАналитики);
		
	КонецЦикла;
	
	Для каждого КлючИЗначение Из Операции Цикл
		
		ОбластьШапкиОперации = Список.Область(КлючИЗначение.Ключ, НомерКолонки);
		
		// Сохраняем изменения в документах
		СсылкаНаОпеарцию = ОбластьШапкиОперации.Расшифровка.Операция;
		Если ТипЗнч(СсылкаНаОпеарцию) = Тип("ДокументСсылка.Расход") Тогда
			ЗаписатьИзмененияРасхода(СсылкаНаОпеарцию, КлючИЗначение.Ключ);
		ИначеЕсли ТипЗнч(СсылкаНаОпеарцию) = Тип("ДокументСсылка.Доход") Тогда
			ЗаписатьИзмененияДохода(СсылкаНаОпеарцию, КлючИЗначение.Ключ);
		ИначеЕсли ТипЗнч(СсылкаНаОпеарцию) = Тип("ДокументСсылка.УниверсальнаяОперация") Тогда
			ЗаписатьИзмененияУниверсальнойОперации(СсылкаНаОпеарцию, КлючИЗначение.Ключ);
		Иначе
			ЗаписатьИзмененияПеремещений(СсылкаНаОпеарцию, КлючИЗначение.Ключ);
		КонецЕсли;
		
		Если КлючИЗначение.Значение <> "ВСЕ" Тогда
			// Проверяем соответствие значений в шапке документа
			
			СтрокиОперации = МассивСтрокОперации(ОбластьШапкиОперации.Расшифровка, Список);
			Если СтрокиОперации.Количество() <= 2 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначениеАналитики = NULL;
			ПредставлениеАналитики = "";
			Для СчетчикСтрок = 1 По СтрокиОперации.Количество() -1 Цикл
				
				АналитикаСтроки = Список.Область(СтрокиОперации[СчетчикСтрок], НомерКолонки).Расшифровка.ЗначениеАналитики;
				АналитикаСтроки = ?(ЗначениеЗаполнено(АналитикаСтроки), АналитикаСтроки, Неопределено);
				Если ЗначениеАналитики = NULL Тогда
					ЗначениеАналитики = АналитикаСтроки;
					ПредставлениеАналитики = ?(ЗначениеЗаполнено(АналитикаСтроки), Строка(АналитикаСтроки), "");
				ИначеЕсли ЗначениеАналитики <> АналитикаСтроки Тогда
					ПредставлениеАналитики = "";
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЗначениеАналитики <> NULL Тогда
				ОбластьШапкиОперации.Расшифровка.ЗначениеАналитики      = ЗначениеАналитики;
				ОбластьШапкиОперации.Расшифровка.ПредставлениеАналитики = ПредставлениеАналитики;
				ОбластьШапкиОперации.Значение                           = ПредставлениеАналитики;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВСписокОпераций(Соответствие, НомерСтрокиОперации, НомерСтрокиДокумента, Значение)

	Если Соответствие[НомерСтрокиОперации] = Неопределено Тогда
		Соответствие.Вставить(НомерСтрокиОперации, Новый Соответствие);
	КонецЕсли;
	Если Соответствие[НомерСтрокиОперации]["ВСЕ"] <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Соответствие[НомерСтрокиОперации].Вставить(НомерСтрокиДокумента, ?(Значение = Неопределено, " ", Значение));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначениемВсеСтрокиОперации(Расшифровка, НовоеЗначение)

	Для Счетчик = Расшифровка.НомерСтроки + 1 По Список.ВысотаТаблицы Цикл
		
		Область = Список.Область(Счетчик, Расшифровка.НомерКолонки);
		Если ТипЗнч(Область.Расшифровка) <> Тип("Структура") 
			Или Не Область.Расшифровка.Свойство("СтрокаШапкиДокумента") 
			Или Область.Расшифровка.СтрокаШапкиДокумента <> Расшифровка.НомерСтроки Тогда
			Прервать;
		КонецЕсли;
		
		Область.Значение = НовоеЗначение;
		Область.Расшифровка.ЗначениеАналитики = НовоеЗначение;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Функция КонечнаяСтрокаОперации(Расшифровка, Список)

	КонечныйНомерСтроки = Расшифровка.НомерСтроки;
	Пока КонечныйНомерСтроки <= Список.ВысотаТаблицы Цикл
		
		ОбластьСтроки = Список.Область(КонечныйНомерСтроки + 1, Расшифровка.НомерКолонки);
		Если ОбластьСтроки.Расшифровка= Неопределено Или Не ОбластьСтроки.Расшифровка.Свойство("Операция")
			Или ОбластьСтроки.Расшифровка.Операция <> Расшифровка.Операция Тогда
			Прервать;
		КонецЕсли;
		
		КонечныйНомерСтроки = КонечныйНомерСтроки + 1;
		
	КонецЦикла;
	
	Возврат КонечныйНомерСтроки;

КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция НачальнаяСтрокаОперации(Расшифровка, Список)

	Если Расшифровка.Свойство("СтрокаШапкиДокумента") Тогда
		Возврат Расшифровка.СтрокаШапкиДокумента;
	КонецЕсли;
	
	НачальныйНомерСтроки = Расшифровка.НомерСтроки;
	Пока НачальныйНомерСтроки > 1 Цикл
		
		ОбластьСтроки = Список.Область(НачальныйНомерСтроки - 1, Расшифровка.НомерКолонки);
		Если ОбластьСтроки.Расшифровка = Неопределено Или Не ОбластьСтроки.Расшифровка.Свойство("Операция") 
			Или ОбластьСтроки.Расшифровка.Операция <> Расшифровка.Операция Тогда
			Прервать;
		КонецЕсли;
		
		НачальныйНомерСтроки = НачальныйНомерСтроки - 1;
		
	КонецЦикла;
	
	Возврат НачальныйНомерСтроки;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МассивСтрокОперации(Расшифровка, Список)

	Результат = Новый Массив;
	
	КонечнаяСтрока = КонечнаяСтрокаОперации(Расшифровка, Список);
	Счетчик = НачальнаяСтрокаОперации(Расшифровка, Список);
	
	Пока Счетчик <= КонечнаяСтрока Цикл
		Результат.Добавить(Счетчик);
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции
 

#Область ЗаписьАналитикиВДокументы

&НаСервере
Процедура ЗаполнитьАналитикиИСтроки(СтрокаШапкиДокумента, Аналитики, Строки)

	ТаблицаАналитики = АналитикаСтатей.НоваяТаблицаВидИЗначениеАналитики();
	
	Аналитики = Новый Соответствие;
	Строки = Новый Соответствие;
	Для Счетчик = СтрокаШапкиДокумента + 1 По Список.ВысотаТаблицы Цикл
		
		Область = Список.Область(Счетчик, 1);
		Если ТипЗнч(Область.Расшифровка) <> Тип("Структура") 
			Или Не Область.Расшифровка.Свойство("СтрокаШапкиДокумента") 
			Или Область.Расшифровка.СтрокаШапкиДокумента <> СтрокаШапкиДокумента Тогда
			Прервать;
		КонецЕсли;
		
		ТаблицаАналитики.Очистить();
		Для СчетчикАналитики = 1 По ВсегоАналитик Цикл
			
			ОбластьАналитики = Список.Область(Счетчик, 3 + СчетчикАналитики);
			ЗначениеАналитики = ?(ОбластьАналитики.Значение = Неопределено, " ", ОбластьАналитики.Значение);
			
			Если Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] = Неопределено И ЗначениеЗаполнено(ЗначениеАналитики) И ЗначениеАналитики <> " " Тогда
				Аналитики.Вставить(ОбластьАналитики.Расшифровка.ВидАналитики, ЗначениеАналитики);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЗначениеАналитики) И ЗначениеАналитики <> " " Тогда
				
				СтрокаАналитики = ТаблицаАналитики.Добавить();
				СтрокаАналитики.ВидАналитики      = ОбластьАналитики.Расшифровка.ВидАналитики;
				СтрокаАналитики.ЗначениеАналитики = ЗначениеАналитики;
				
				Если Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] <> NULL 
					И Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] <> ЗначениеАналитики Тогда
					Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] = NULL;
				КонецЕсли;
				
			Иначе
				
				Если Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] <> Неопределено 
					И Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] <> NULL 
					И Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] <> ЗначениеАналитики Тогда
					Аналитики[ОбластьАналитики.Расшифровка.ВидАналитики] = NULL;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ТаблицаАналитики.Количество() > 0 Тогда
			СсылкаНаНабор = АналитикаСтатей.ПолучитьСсылкуНаНаборЗначенийАналитик(ТаблицаАналитики);
		Иначе 
			СсылкаНаНабор = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
		КонецЕсли;
		
		Строки.Вставить(Область.Расшифровка.НомерСтрокиДокумента, СсылкаНаНабор);
		
	КонецЦикла;

	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияРасхода(СсылкаНаОперацию, СтрокаШапкиДокумента)

	Аналитики = Неопределено;
	Строки    = Неопределено;
	ЗаполнитьАналитикиИСтроки(СтрокаШапкиДокумента, Аналитики, Строки);
	
	// Обновляем сам документ
	Документ = СсылкаНаОперацию.ПолучитьОбъект();
	ВсегоСтрок = Документ.Расходы.Количество();
	Для каждого КлючИЗначение Из Аналитики Цикл
		
		Если КлючИЗначение.Значение = Неопределено Или КлючИЗначение.Значение = " " Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаАналитики = Документ.АналитикаДокумента.Найти(КлючИЗначение.Ключ,"ВидАналитики");
		Если СтрокаАналитики = Неопределено Тогда
			СтрокаАналитики = Документ.АналитикаДокумента.Добавить();
			СтрокаАналитики.ВидАналитики = КлючИЗначение.Ключ;
		КонецЕсли;
		
		Если КлючИЗначение.Значение = NULL И СтрокаАналитики.РедактироватьВШапке Тогда
			// в документе используется несколько значений одной аналитики.
			//редактирование в шапке невозможно
			СтрокаАналитики.РедактироватьВШапке     = Ложь;
			СтрокаАналитики.ЗначениеАналитикиВШапке = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаДокумента Из Документ.Расходы Цикл
		
		Если Строки[СтрокаДокумента.НомерСтроки] <> Неопределено Тогда
			СтрокаДокумента.АналитикаСтатьи = Строки[СтрокаДокумента.НомерСтроки];
		КонецЕсли;
		
	КонецЦикла;
	
	Документ.Записать(?(Документ.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияПеремещений(СсылкаНаОперацию, СтрокаШапкиДокумента)

	Аналитики = Неопределено;
	Строки    = Неопределено;
	ЗаполнитьАналитикиИСтроки(СтрокаШапкиДокумента, Аналитики, Строки);
	
	// Обновляем сам документ
	Документ = СсылкаНаОперацию.ПолучитьОбъект();
	
	Для каждого СтрокаДокумента Из Документ.ДополнительныеРасходы Цикл
		
		Если Строки[СтрокаДокумента.НомерСтроки] <> Неопределено Тогда
			СтрокаДокумента.АналитикаСтатьи = Строки[СтрокаДокумента.НомерСтроки];
		КонецЕсли;
		
	КонецЦикла;
	
	Документ.Записать(?(Документ.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияДохода(СсылкаНаОперацию, СтрокаШапкиДокумента)

	Аналитики = Неопределено;
	Строки    = Неопределено;
	ЗаполнитьАналитикиИСтроки(СтрокаШапкиДокумента, Аналитики, Строки);
	
	// Обновляем сам документ
	Документ = СсылкаНаОперацию.ПолучитьОбъект();
	Документ.АналитикаДокумента.Очистить();
	Для каждого КлючИЗначение Из Аналитики Цикл
		
		Если КлючИЗначение.Значение = Неопределено Или КлючИЗначение.Значение = " " Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаАналитики = Документ.АналитикаДокумента.Найти(КлючИЗначение.Ключ,"ВидАналитики");
		Если СтрокаАналитики = Неопределено Тогда
			СтрокаАналитики = Документ.АналитикаДокумента.Добавить();
			СтрокаАналитики.ВидАналитики = КлючИЗначение.Ключ;
		КонецЕсли;
		
		Если КлючИЗначение.Значение = NULL И СтрокаАналитики.РедактироватьВШапке Тогда
			// в документе используется несколько значений одной аналитики.
			//редактирование в шапке невозможно
			СтрокаАналитики.РедактироватьВШапке     = Ложь;
			СтрокаАналитики.ЗначениеАналитикиВШапке = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаДокумента Из Документ.Доходы Цикл
		
		Если Строки[СтрокаДокумента.НомерСтроки] <> Неопределено Тогда
			СтрокаДокумента.АналитикаСтатьи = Строки[СтрокаДокумента.НомерСтроки];
		КонецЕсли;
		
	КонецЦикла;
	
	Документ.Записать(?(Документ.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияУниверсальнойОперации(СсылкаНаОперацию, СтрокаШапкиДокумента)

	Аналитики = Неопределено;
	Строки    = Неопределено;
	ЗаполнитьАналитикиИСтроки(СтрокаШапкиДокумента, Аналитики, Строки);
	
	// Обновляем сам документ
	Документ = СсылкаНаОперацию.ПолучитьОбъект();
	СтрокиДокумента = ?(ВидыСтатей = "Доход", Документ.Доходы, Документ.Расходы);
	ИмяПоляАналитики = ?(ВидыСтатей = "Доход", "АналитикаСтатьиДохода", "АналитикаСтатьиРасхода");
	
	Для каждого СтрокаДокумента Из СтрокиДокумента Цикл
		
		Если Строки[СтрокаДокумента.НомерСтроки] <> Неопределено Тогда
			СтрокаДокумента[ИмяПоляАналитики] = Строки[СтрокаДокумента.НомерСтроки];
		КонецЕсли;
		
	КонецЦикла;
	
	Документ.Записать(?(Документ.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));

КонецПроцедуры


#КонецОбласти

&НаКлиенте
Процедура ОткрытьОперацию(Ссылка)

	ПоказатьЗначение(, Ссылка);

КонецПроцедуры

&НаСервере
Процедура НастройкиПриИзмененииСервер()

	Список.Очистить();

КонецПроцедуры
 

#КонецОбласти

