////////////////////////////////////////////////////////////////////////////////
//Обработка.МониторСинхронизации.Форма.Монитор
//  _Назначение_
//  
//Параметры формы:
//	ДействиеПриОбмене - Строка - "Отправка" или "Получение"
//	УзелИнформационнойБазы - ПланОбменаСсылка
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("УзелИнформационнойБазы", УзелИнформационнойБазы) Тогда
		ВызватьИсключение НСтр("ru='Для просмотра результатов обмена следует указать узел плана обмена'");
	КонецЕсли;
	Если Не Параметры.Свойство("ДействиеПриОбмене", ДействиеПриОбмене) Тогда
		ВызватьИсключение НСтр("ru='Для просмотра результатов обмена следует вид результата - ""Получение"" или ""Отправка""'");
	КонецЕсли;
	
	Если ДействиеПриОбмене = "Получение" Тогда
		
		Заголовок = НСтр("ru='Результат получения данных'");
		Элементы.ДекорацияНаправления.Картинка = БиблиотекаКартинок.ПереместитьВлево;
		Элементы.ГруппаКолонкаНастольнойПрограммы.Заголовок = НСтр("ru='Получатель: настольная программа'"); 
		Элементы.ГруппаКолонкаУстройства.Заголовок          = СтрШаблон(НСтр("ru='Отправитель: %1'"), Строка(УзелИнформационнойБазы)); 
		
		Элементы.ДатаРезультата.Заголовок           = НСтр("ru='Последняя загрузка'"); 
		Элементы.ДатаРезультатаУстройства.Заголовок = НСтр("ru='Последняя отправка'"); 
		
		Элементы.ОбъектыЗарегистрированныеКОтправке.Видимость  = Ложь; 
		Элементы.ОбъектыПолученныеСУстройства.Видимость       = Истина; 
		
	Иначе
		
		Заголовок = НСтр("ru='Результат отправки данных'");
		Элементы.ДекорацияНаправления.Картинка = БиблиотекаКартинок.ПереместитьВправо;
		Элементы.ГруппаКолонкаНастольнойПрограммы.Заголовок = НСтр("ru='Отправитель: настольная программа'"); 
		Элементы.ГруппаКолонкаУстройства.Заголовок          = СтрШаблон(НСтр("ru='Получатель: %1'"), Строка(УзелИнформационнойБазы)); 
		
		Элементы.ДатаРезультата.Заголовок           = НСтр("ru='Последняя отправка'"); 
		Элементы.ДатаРезультатаУстройства.Заголовок = НСтр("ru='Последняя загрузка'"); 
		
		Элементы.ОбъектыЗарегистрированныеКОтправке.Видимость  = Истина; 
		Элементы.ОбъектыПолученныеСУстройства.Видимость        = Ложь; 
		
	КонецЕсли;
	
	// Полчаем информацию о последних результатах обмена
	ЗаписьРезультата = РегистрыСведений.КонтрольОбменаДанными.СоздатьМенеджерЗаписи();
	ЗаписьРезультата.УзелИнформационнойБазы = УзелИнформационнойБазы;
	ЗаписьРезультата.Прочитать();
	
	ЕстьОшибкаЭтойБазы  = Ложь;
	ЕстьОшибкаУтройства = Ложь;
	
	Если ЗаписьРезультата.Выбран() Тогда
		
		Элементы.ГруппаРезультат.Видимость     = Истина;
		Элементы.ГруппаНетРезультата.Видимость = Ложь;
		
		Транспорт           = ЗаписьРезультата.Транспорт;
		
		Если ДействиеПриОбмене = "Получение" Тогда
			
			ДатаРезультата = ЗаписьРезультата.ПоследнееПолучение;
			Результат      = ЗаписьРезультата.РезультатПолученияДанных;
			ОписаниеОшибки = ЗаписьРезультата.ТекстОшибокПолучения;
			
			ДатаРезультатаУстройства    = ЗаписьРезультата.ПоследняяОтправкаУзлом;
			ТранспортУстройства         = ЗаписьРезультата.ТранспортОтправкиУзлом;
			РезультатУстройства         = ЗаписьРезультата.РезультатОтправкиДанныхУзлом;
			ОписаниеОшибкиУстройства    = ЗаписьРезультата.ТекстОшибокОтправкиУзлом;
			
		Иначе
			
			ДатаРезультата = ЗаписьРезультата.ПоследняяОтправка;
			Результат      = ЗаписьРезультата.РезультатОтправкиДанных;
			ОписаниеОшибки = ЗаписьРезультата.ТекстОшибокОтправки;
			
			ДатаРезультатаУстройства    = ЗаписьРезультата.ПоследнееПолучениеУзлом;
			ТранспортУстройства         = ЗаписьРезультата.ТранспортПолученияУзлом;
			РезультатУстройства         = ЗаписьРезультата.РезультатПолученияДанныхУзлом;
			ОписаниеОшибкиУстройства    = ЗаписьРезультата.ТекстОшибокПолученияУзлом;
			
		КонецЕсли;
		
		ЕстьОшибкаЭтойБазы  = Не ПустаяСтрока(ОписаниеОшибки);
		ЕстьОшибкаУтройства = Не ПустаяСтрока(ОписаниеОшибкиУстройства);
		
		Элементы.ГруппаОшибки.Доступность  = ЕстьОшибкаЭтойБазы;
		Элементы.ГруппаОшибки1.Доступность = ЕстьОшибкаУтройства;
		
	Иначе
		
		Элементы.ГруппаРезультат.Видимость               = Ложь;
		Элементы.ГруппаНетРезультата.Видимость           = Истина;
		Элементы.ОбъектыПолученныеСУстройства.Видимость  = Ложь; 
		Элементы.ОбъектыЗарегистрированныеКОтправке.Видимость = Ложь; 
		
	КонецЕсли;
	
	Элементы.ГруппаРезультат1.Видимость       = Элементы.ГруппаРезультат.Видимость;
	Элементы.ГруппаНетРезультата1.Видимость   = Элементы.ГруппаНетРезультата.Видимость;
	Элементы.СообщитьВПоддержку.Доступность   = ЕстьОшибкаУтройства Или ЕстьОшибкаЭтойБазы;
	
	Если ЕстьОшибкаУтройства Тогда
		Элементы.РезультатУстройства.ЦветТекста          = ЦветаСтиля.ЦветОсобогоТекста;
		Элементы.ОписаниеОшибкиУстройства.ЦветФона       = ЦветаСтиля.ЦветФонаФормы;
	Иначе
		Элементы.РезультатУстройства.ЦветТекста          = ЦветаСтиля.РезультатУспехЦвет;
	КонецЕсли;
	
	Если ЕстьОшибкаЭтойБазы Тогда
		Элементы.Результат.ЦветТекста          = ЦветаСтиля.ЦветОсобогоТекста;
		Элементы.ОписаниеОшибки.ЦветФона       = ЦветаСтиля.ЦветФонаФормы;
	Иначе
		Элементы.Результат.ЦветТекста          = ЦветаСтиля.РезультатУспехЦвет;
	КонецЕсли;
	
	 
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписиЖурналаРегистрации(Команда)
	ОткрытьЖурналРегистрации(?(ДействиеПриОбмене = "Получение", "ЗагрузкаДанных", "ВыгрузкаДанных"));
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыЗарегистрированныеКОтправке(Команда)
	ОбменДаннымиКлиент.ОткрытьСоставОтправляемыхДанных(УзелИнформационнойБазы);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПолученныеСУстройства(Команда)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("МестоИзменения", УзелИнформационнойБазы);
	
	ОткрытьФорму("РегистрСведений.ИзмененияОбъектовВоВнешнихПрограммах.ФормаСписка", Новый Структура("Отбор, ТолькоПоследниеИзменения", СтруктураОтбора, Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьВПоддержку(Команда)
	
	ОтправитьСообщениеВПоддержку();
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьЖурналРегистрации(ТипДействияПриОбмене)

	Отбор = Новый Структура;
	Отбор.Вставить("СобытиеЖурналаРегистрации", КлючЖурналаРегистрации(ТипДействияПриОбмене));
	Отбор.Вставить("ДатаНачала",                ДатаРезультата - 120);
	Отбор.Вставить("ДатаОкончания",             ДатаРезультата + 10);
	
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма", Отбор, ЭтотОбъект);

КонецПроцедуры

&НаСервереБезКонтекста
Функция КлючЖурналаРегистрации(ТипДействияПриОбмене)

	Возврат ОбменМобильноеПриложение.КлючСобытияЖурналаРегистрации(ТипДействияПриОбмене);

КонецФункции

&НаКлиенте
Процедура ОтправитьСообщениеВПоддержку()

	Состояние(НСтр("ru='Подготовка технологической информации...'"));
	
	ПараметрыФормы = ПараметрыСообщения();
	Если Не ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ПараметрыФормы.Тема = "Ошибка обмена данными на мобильном устройстве";
	Иначе
		ПараметрыФормы.Тема = "Ошибка обмена данными с мобильным приложением";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ПараметрыФормы.Тело = "Обмен данными с мобильным приложением завершился ошибкой. 
			|	* действие при обмене: " + ДействиеПриОбмене + ", 
			|	* транспорт: " + Транспорт + "
			|	* дата: " + ДатаРезультата + "
			|	* результат: " + Результат + "
			|Описание ошибки: " + Символы.ПС + ОписаниеОшибки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибкиУстройства) Тогда
		ПараметрыФормы.Тело = ПараметрыФормы.Тело + ?(ЗначениеЗаполнено(ОписаниеОшибки), Символы.ПС + Символы.ПС, "");
		ПараметрыФормы.Тело = ПараметрыФормы.Тело + "Обмен данными на мобильном устройстве завершился ошибкой. 
			|	* транспорт: " + ТранспортУстройства + "
			|	* дата: " + ДатаРезультатаУстройства + "
			|	* результат: " + РезультатУстройства + "
			|Описание ошибки: " + Символы.ПС + ОписаниеОшибкиУстройства;
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ОтправкаСообщенияВСлужбуПоддержки", ПараметрыФормы, ЭтотОбъект, Истина);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыСообщения()

	Возврат ПоддержкаПользователейДеньги.НоваяСтруктураСообщения();

КонецФункции

#КонецОбласти
