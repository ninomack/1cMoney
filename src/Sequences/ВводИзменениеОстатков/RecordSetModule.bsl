
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, Замещение)
	
	// Регистрируем в последовательности только ВводИзменениеОстатков
	Если ТипЗнч(Регистратор) <> Тип("ДокументСсылка.ВводИзменениеОстатка") Тогда
		Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	НеВосстанавливатьПоследовательность = Неопределено;
	ДополнительныеСвойства.Свойство("НеВосстанавливатьПоследовательность", НеВосстанавливатьПоследовательность);
	Если НеВосстанавливатьПоследовательность = Истина Тогда
			Возврат;
	КонецЕсли;
	
	// Восстановим нарушенные последовательности
	ПоследовательностьМенеджер = Последовательности.ВводИзменениеОстатков;
	ДокументВводИзменениеОстатковМенеджер = Документы.ВводИзменениеОстатка;
	ОтборГраниц = Новый Структура("РазделУчета, ОбъектУчета");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВводИзменениеОстатков.Регистратор,
	|	ВводИзменениеОстатков.МоментВремени КАК МоментВремени,
	|	ВводИзменениеОстатков.РазделУчета КАК РазделУчета,
	|	ВводИзменениеОстатков.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	Последовательность.ВводИзменениеОстатков КАК ВводИзменениеОстатков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Последовательность.ВводИзменениеОстатков.Границы КАК ВводИзменениеОстатковГраницы
	|		ПО ВводИзменениеОстатков.РазделУчета = ВводИзменениеОстатковГраницы.РазделУчета
	|			И ВводИзменениеОстатков.ОбъектУчета = ВводИзменениеОстатковГраницы.ОбъектУчета
	|			И ВводИзменениеОстатков.МоментВремени > ВводИзменениеОстатковГраницы.МоментВремени
	|			И (ВводИзменениеОстатков.Регистратор.Проведен)
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени
	|ИТОГИ ПО
	|	РазделУчета,
	|	ОбъектУчета";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаРазделУчета = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаРазделУчета.Следующий() Цикл
		ВыборкаОбъектУчета = ВыборкаРазделУчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОбъектУчета.Следующий() Цикл
			Выборка = ВыборкаОбъектУчета.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ДокументСсылка = Выборка.Регистратор;
				Если ДокументВводИзменениеОстатковМенеджер.ОстаткиВерны(ДокументСсылка) Тогда
					
					ОтборГраниц.РазделУчета = Выборка.РазделУчета;
					ОтборГраниц.ОбъектУчета = Выборка.ОбъектУчета;
					ПоследовательностьМенеджер.УстановитьГраницу(ДокументСсылка.МоментВремени(), ОтборГраниц);
					
				Иначе
					
					ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
					ДокументОбъект.ДополнительныеСвойства.Вставить("НеВосстанавливатьПоследовательность", Истина);
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
