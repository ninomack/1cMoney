&НаКлиенте
Перем ДополнительныеПараметрыНаКлиенте Экспорт;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	#Область ПрикрепленныеФайлы
	МедиаФайлы = ПрикрепленныеФайлыСервер.ПрочитатьСписокФайлов(Объект.Ссылка);
	#КонецОбласти
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменено расписание" И Параметр.Свойство("ВладелецФормы") И Параметр.ВладелецФормы = УникальныйИдентификатор Тогда
		
		УправлениеФормой(ЭтаФорма);
		
	ИначеЕсли ИмяСобытия = "Записана операция" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор И Параметр.ЭтоШаблон <> Объект.ЭтоШаблон Тогда
			ЗаполнитьДанныеПоШаблону(Параметр.Ссылка);
		КонецЕсли;
	КонецЕсли;
		
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтаФорма, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ДобавитьФайлВСписокФормы(ЭтотОбъект, Параметр); 
	КонецЕсли;
	#КонецОбласти
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Обслуживание плановых операций
	ПлановыеОперацииКлиент.ПередЗаписьюДокумента(ЭтаФорма, Отказ, ПараметрыЗаписи);
	// Общий функционал перед записью документов
	ОбслуживаниеДокументовКлиент.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обслуживание плановых операций
	Документы.МыВернулиДолг.ОбновитьИтоговыеСуммыДокумента(ТекущийОбъект);
	ПлановыеОперации.ПроверкаПлановПередЗаписьюДокумента(ТекущийОбъект, ПараметрыЗаписи, ЭтотОбъект);
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыСервер.ОбработатьИЗаписатьДанныеМультимедиа(МедиаФайлы, ТекущийОбъект.Ссылка);
	#КонецОбласти 
	
	ЗаполнитьДобавленныеКолонки();
	ПараметрыСеанса.ДатаПоследнейОперации = ТекущийОбъект.Дата;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записана операция", Новый Структура("Дата, ВидДокумента, Ссылка, ЭтоШаблон, ВладелецФормы", 
			Объект.Дата, "МыВернулиДолг", Объект.Ссылка, Объект.ЭтоШаблон, 
			?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Общий функционал перед записью документов
	ОбслуживаниеДокументовКлиент.ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы И Открыта() Тогда
		Закрыть(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЗаголовкиКомандФормы(ЭтотОбъект);
	
	Если НачалоМесяца(Объект.Дата) = МесяцДокумента Тогда
		Возврат;
	КонецЕсли; 
	
	МесяцДокумента = НачалоМесяца(Объект.Дата);
	Если ЗначениеЗаполнено(ПараметрыГрафика.СрокМесяцев) И ЗначениеЗаполнено(ПараметрыГрафика.ДеньМесяцаДляРасчетов) Тогда
		ТекстВопроса = НСтр("ru = 'Заполнить суммы погашения из графика платежа?'");
		ОбработчикОтвета = Новый ОписаниеОповещения("ДатаПриИзмененииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КредиторПриИзменении(Элемент)
	
	КредиторПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КредиторНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	КредиторНачалоВыбораИзСпискаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КредитПриИзменении(Элемент)
	
	КредитПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КредитНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	КредитНачалоВыбораИзСпискаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КошелекПриИзменении(Элемент)
	
	КошелекПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансоваяЦельПриИзменении(Элемент)
	ОбновитьОстатки();
КонецПроцедуры


&НаКлиенте
Процедура СуммаПлатежаВсегоПриИзменении(Элемент)
	
	Объект.ВыплаченоКредита = СуммаПлатежаВсего - (Объект.ВыплаченоПроцентов + Объект.ВыплаченоКомиссии + Объект.ДополнительныеРасходы.Итог("СуммаРасхода"));
	ВыплаченоКредитаПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплаченоКредитаПриИзменении(Элемент)
	
	Объект.СуммаКредитаВВалютеКредита = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.ВыплаченоКредита,
		Объект.ВалютаКошелька, Объект.ВалютаКредита, Объект.КурсВалютыКошелька, Объект.КурсВалютыКредита, Объект.КратностьВалютыКошелька, Объект.КратностьВалютыКредита);
	ОстатокЗадолженностиНаКонец = ОстатокДолгаПоКредиту + Объект.СуммаКредитаВВалютеКредита;
	Если Объект.СписаноКредита > ОстатокЗадолженностиНаКонец ИЛИ ОстатокЗадолженностиНаКонец = 0 Тогда
		Объект.СписаноКредита = 0;
		Объект.СтатьяСписания = Неопределено;
		СписатьОстатокДолга   = Ложь;
	КонецЕсли; 
	Если СписатьОстатокДолга Тогда
		Объект.СписаноКредита = ОстатокЗадолженностиНаКонец;
	КонецЕсли;
	
	СуммаПлатежаВсего = СуммаПлатежаВсего(ЭтаФорма);
	
	Элементы.СписатьОстатокДолга.Доступность = ОстатокЗадолженностиНаКонец <> 0;
	
	Элементы.СтатьяСписания.Видимость = СписатьОстатокДолга;
	ОформлениеАналитикиСтатьиСписания(ЭтаФорма);
	
	ОбновитьЗаголовокГруппыОсновнойДолг(ЭтаФорма);
	ОбновитьЗаголовокГруппыОстатокДолгаСписаниеДолга(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаКредитаВВалютеКредитаПриИзменении(Элемент)
	
	ОстатокЗадолженностиНаКонец = ОстатокДолгаПоКредиту + Объект.СуммаКредитаВВалютеКредита;
	Если Объект.СписаноКредита > ОстатокЗадолженностиНаКонец ИЛИ ОстатокЗадолженностиНаКонец = 0 Тогда
		Объект.СписаноКредита = 0;
		Объект.СтатьяСписания = Неопределено;
		СписатьОстатокДолга   = Ложь;
	КонецЕсли; 
	Если СписатьОстатокДолга Тогда
		Объект.СписаноКредита = ОстатокЗадолженностиНаКонец;
	КонецЕсли;
	
	Элементы.СписатьОстатокДолга.Доступность = ОстатокЗадолженностиНаКонец <> 0;
	
	Элементы.СтатьяСписания.Видимость = СписатьОстатокДолга;
	ОформлениеАналитикиСтатьиСписания(ЭтаФорма);
	
	ОбновитьЗаголовокГруппыОсновнойДолг(ЭтаФорма);
	ОбновитьЗаголовокГруппыОстатокДолгаСписаниеДолга(ЭтаФорма);
	 
КонецПроцедуры

&НаКлиенте
Процедура ВыплаченоПроцентовПриИзменении(Элемент)
	
	Объект.СуммаПроцентовВВалютеКредита = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.ВыплаченоПроцентов,
		Объект.ВалютаКошелька, Объект.ВалютаКредита, Объект.КурсВалютыКошелька, Объект.КурсВалютыКредита, Объект.КратностьВалютыКошелька, Объект.КратностьВалютыКредита);
	
	СуммаПлатежаВсего = СуммаПлатежаВсего(ЭтаФорма);
	
	Элементы.СтатьяРасходовПоПроцентам.Доступность = Объект.ВыплаченоПроцентов <> 0;
	ОформлениеАналитикиСтатьиПоПроцентам(ЭтаФорма);
	
	ОбновитьЗаголовокГруппыПроцентыКомиссия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПоПроцентамПриИзменении(Элемент)
	
	// Обслуживание аналитики статей:
	АналитикаСтатейВызовСервера.ПриИзмененииСтатьиВШапке(Объект.СтатьяРасходовПоПроцентам, Объект.АналитикаСтатьиРасходовПоПроцентам);
	
	ОформлениеАналитикиСтатьиПоПроцентам(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПоПроцентамОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаСтатьиРасходовПоПроцентамСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Меню = Новый СписокЗначений;
	Меню.Добавить("Изменить", "Изменить...", , БиблиотекаКартинок.Изменить);
	Меню.Добавить("ЗаполнитьПоСтатьеКомиссии", "Заполнить, как у статьи для комиссии");
	Меню.Добавить("Очистить", , , БиблиотекаКартинок.Очистить);
	ОбработчикВыбора = Новый ОписаниеОповещения("АналитикаСтатьиРасходовПоПроцентамСтрокойНажатиеЗавершение", ЭтотОбъект);
	ПоказатьВыборИзМеню(ОбработчикВыбора, Меню, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплаченоКомиссииПриИзменении(Элемент)
	
	СуммаПлатежаВсего = СуммаПлатежаВсего(ЭтаФорма);
	
	Элементы.СтатьяРасходовПоКомиссии.Доступность = Объект.ВыплаченоКомиссии <> 0;
	ОформлениеАналитикиСтатьиПоКомиссии(ЭтаФорма);
	
	ОбновитьЗаголовокГруппыПроцентыКомиссия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПоКомиссииПриИзменении(Элемент)
	
	// Обслуживание аналитики статей:
	АналитикаСтатейВызовСервера.ПриИзмененииСтатьиВШапке(Объект.СтатьяРасходовПоКомиссии, Объект.АналитикаСтатьиРасходовПоКомиссии);
	
	ОформлениеАналитикиСтатьиПоКомиссии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПоКомиссииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаСтатьиРасходовПоКомиссииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Меню = Новый СписокЗначений;
	Меню.Добавить("Изменить", "Изменить...", , БиблиотекаКартинок.Изменить);
	Меню.Добавить("ЗаполнитьПоСтатьеПроцентов", "Заполнить, как у статьи для процентов");
	Меню.Добавить("Очистить", , , БиблиотекаКартинок.Очистить);
	ОбработчикВыбора = Новый ОписаниеОповещения("АналитикаСтатьиРасходовПоКомиссииНажатиеЗавершение", ЭтотОбъект);
	ПоказатьВыборИзМеню(ОбработчикВыбора, Меню, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписатьОстатокДолгаПриИзменении(Элемент)
	
	Если СписатьОстатокДолга Тогда
		Объект.СписаноКредита = ОстатокЗадолженностиНаКонец;
	Иначе
		Объект.СписаноКредита = 0;
		Объект.СтатьяСписания = Неопределено;
	КонецЕсли; 
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяСписанияПриИзменении(Элемент)
	
	// Обслуживание аналитики статей:
	АналитикаСтатейВызовСервера.ПриИзмененииСтатьиВШапке(Объект.СтатьяСписания, Объект.АналитикаСтатьиСписания);
	
	ОформлениеАналитикиСтатьиСписания(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяСписанияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаСтатьиСписанияСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Меню = Новый СписокЗначений;
	Меню.Добавить("Изменить", "Изменить...", , БиблиотекаКартинок.Изменить);
	Меню.Добавить("Очистить", , , БиблиотекаКартинок.Очистить);
	ОбработчикВыбора = Новый ОписаниеОповещения("АналитикаСтатьиСписанияСтрокойНажатиеЗавершение", ЭтотОбъект);
	ПоказатьВыборИзМеню(ОбработчикВыбора, Меню, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаОткрытьГрафикНажатие(Элемент)
	
	ПлановыеОперацииКлиент.ОткрытьРедакторРасписания(ЭтаФорма);
	
КонецПроцедуры

// Обслуживание плановых операций
&НаКлиенте
Процедура ИзменитьРасписание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПлановыеОперацииКлиент.ОткрытьРедакторРасписания(ЭтаФорма);
	
КонецПроцедуры

// Обслуживание плановых операций
&НаКлиенте
Процедура ИнформацияОШаблонеНажатие(Элемент, СтандартнаяОбработка)
	
	ПлановыеОперацииКлиент.ИнформацияОШаблонеНажатие(ЭтаФорма, Элемент, СтандартнаяОбработка, "МыВернулиДолг");
	
КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура Подключаемый_ПриИзмененииАналитикиВШапке(Элемент)
	
	АналитикаСтатейКлиент.ПриИзмененииАналитикиВШапке(ЭтаФорма, Элемент);
	
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеФайловОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаПредставлениеФайлов(ЭтотОбъект, СтандартнаяОбработка, НавигационнаяСсылкаФорматированнойСтроки);
КонецПроцедуры

#КонецОбласти 


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРасходы

&НаКлиенте
Процедура ДополнительныеРасходыПриИзменении(Элемент)
	
	СуммаПлатежаВсего = СуммаПлатежаВсего(ЭтаФорма);
	
	ОбновитьЗаголовокГруппыДополнительныеРасходы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ДанныеСтроки = Элементы.ДополнительныеРасходы.ТекущиеДанные;
		ДанныеСтроки.КошелекРасхода = Объект.Кошелек;
		ДанныеСтроки.ФинансоваяЦель = Объект.ФинансоваяЦель;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	// Обслуживание аналитики статей:
	ТекущиеДанные = Элементы.ДополнительныеРасходы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И НЕ ЗначениеЗаполнено(ТекущиеДанные.СтатьяРасхода) Тогда
		СтатьяПриИзмененииСервер(Элементы.ДополнительныеРасходы.ТекущаяСтрока);
	КонецЕсли;
	Если НЕ АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
		АналитикаСтатейКлиент.ПриОкончанииРедактированияСтрокиТабличнойЧасти(ЭтаФорма, Истина, "ДополнительныеРасходы", ТекущиеДанные);
	Иначе
		УправлениеРеквизитамиАналитики();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПослеУдаления(Элемент)
	
	// Обслуживание аналитики статей:
	Если НЕ АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
		АналитикаСтатейКлиент.ПослеУдаленияСтрокиТабличнойЧасти(ЭтаФорма, Истина, "ДополнительныеРасходы");
	Иначе
		УправлениеРеквизитамиАналитики();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыСтатьяРасходаПриИзменении(Элемент)
	
	СтатьяПриИзмененииСервер(Элементы.ДополнительныеРасходы.ТекущаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыСтатьяРасходаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСуммамиИзГрафика(Команда)
	
	ЗаполнитьСуммамиГрафикаСервер();
	
КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура Подключаемый_НастройкаКолонокАналитики(Команда)

	АналитикаСтатейКлиент.ИзменитьНастройкиКолонокАналитики(ЭтаФорма, Истина, "МыВернулиДолг");

КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура НастройкаКолонокАналитикиЗавершение(НастройкиИзменены) Экспорт

	Если НастройкиИзменены Тогда
		УправлениеРеквизитамиАналитики(Истина, Истина);
	КонецЕсли; 

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	СтильПоясняющийОшибкуТекст = ЦветаСтиля.ПоясняющийОшибкуТекст;
	СтильЗаголовокГруппыЦвет   = ЦветаСтиля.ЗаголовокГруппыЦвет;
	
	// Подготовка реквизитов формы
	ВалютаУчета  = Константы.ВалютаУчета.Получить();
	СписатьОстатокДолга = ЗначениеЗаполнено(Объект.СписаноКредита);
	МесяцДокумента = НачалоМесяца(Объект.Дата);
	ТекстПоясненияГрафика = НСтр("ru='Реквизиты операции автоматически заполняются из графика платежей.'"); 
	
	// Контакт должен соответствовать долгу
	Если Объект.Кредитор <> Объект.Кредит.Контакт Тогда
		Объект.Кредитор = Объект.Кредит.Контакт;
		Модифицированность = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Кредитор) Тогда
		Массив = Новый Массив();
		Массив.Добавить(Новый СвязьПараметраВыбора("Отбор.Контакт", "Объект.Кредитор", РежимИзмененияСвязанногоЗначения.НеИзменять));
		Элементы.Кредит.СвязиПараметровВыбора = Новый ФиксированныйМассив(Массив);
	Иначе
		Элементы.Кредит.СвязиПараметровВыбора = Новый ФиксированныйМассив(Новый Массив());
	КонецЕсли;
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПриСозданииНаСервере(ЭтаФорма, "", "", "СтатьяРасхода", "АналитикаСтатьи", "ДополнительныеРасходыКоманднаяПанель");
	
	// Заполнение дополнительных колонок
	ЗаполнитьДобавленныеКолонки();
	
	// Проверка работы с шаблонами
	РаботаСФормамиДокументов.ПодготовитьФормуНаСервереПоРаботеСШаблонами(ЭтаФорма);
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Для нового шаблона расчета за кредит поправим настройки расписания:
	Если Объект.ЭтоШаблон И Параметры.Ключ.Пустая() И ЗначениеЗаполнено(Объект.Кредит) Тогда
		ПараметрыРасписания.Периодичность        = Перечисления.СпособыПовторовСобытий.ВУказанныеДаты;
		ПараметрыРасписания.ПорядокПериодов      = 0;
		ПараметрыРасписания.ПорядокДнейНедели    = 0;
		ПараметрыРасписания.ШаблонДнейНедели     = "";
		ПараметрыРасписания.ШаблонЧиселМесяца    = "";
		ПараметрыРасписания.ШаблонНомеровМесяцев = "";
		// получим пустую таблицу произвольных дат:
		ТаблицаДат = ПлановыеОперации.ПолучитьТаблицуПроизвольныхДатДляРедактирования(Объект.Ссылка, ПараметрыРасписания.ДатаНачалаРасписания, ПараметрыРасписания.ДатаНачалаРасписания);
		//Добавим дату и сохраним таблицу во временном хранилище:
		СтрокаДаты = ТаблицаДат.Добавить();
		СтрокаДаты.ПлановаяДата = ДобавитьМесяц(ПараметрыРасписания.ДатаНачалаРасписания, 1);
		СтрокаДаты.СуммаДолга = Объект.СуммаКредитаВВалютеКредита;
		АдресПроизвольныхДатРасписания = ПоместитьВоВременноеХранилище(ТаблицаДат, УникальныйИдентификатор);
		ПараметрыРасписания.ОписаниеРасписания   = ПлановыеОперацииКлиентСервер.ПредставлениеРасписания(ПараметрыРасписания, ТаблицаДат);;
		СохранитьРасписание = Истина;
	КонецЕсли; 
	
	ПрочитатьПараметрыГрафикаПогашения();
	
	Если НЕ Объект.ЭтоШаблон Тогда
		Если Параметры.Ключ.Пустая() Тогда
			Если ЗначениеЗаполнено(ЗаписьПлановойОперации.ВладелецРасписания) И ЗначениеЗаполнено(ЗаписьПлановойОперации.ПлановаяДата) Тогда
				ЗаполнитьСуммамиГрафикаСервер();
			ИначеЕсли ЗначениеЗаполнено(Объект.Кредит) Тогда
				КредитПриИзмененииСервер();
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Кошелек) Тогда
		Объект.Кошелек = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
	КонецЕсли; 
	
	ВидимостьФинансовойЦели = ЗначениеЗаполнено(Объект.Кошелек) И Объект.Кошелек.ИспользоватьДляНакоплений;
	
	СуммаПлатежаВсего = СуммаПлатежаВсего(ЭтаФорма);
	
	ОбновитьОстатки();
	
	// Обслуживание аналитики статей:
	УправлениеРеквизитамиАналитики();
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеМедиафайлов(ЭтотОбъект);
	#КонецОбласти	
	
	// Настройка внешнего вида
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьДобавленныеКолонки()

	// Обслуживание аналитики статей:
	АналитикаСтатей.ЗаполнитьРеквизитыАналитикой(ЭтаФорма);
	
КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста 
Процедура УправлениеФормой(Форма)

	Элементы               = Форма.Элементы;
	ПараметрыГрафика       = Форма.ПараметрыГрафика;
	ПараметрыРасписания    = Форма.ПараметрыРасписания;
	Объект                 = Форма.Объект;
	
	// Обслуживание плановых операций
	ПлановыеОперацииКлиентСервер.ОбновитьИнформациюОСвязиОперацииСРасписанием(Форма);
	РаботаСФормамиДокументовКлиентСервер.ОбновитьСостояниеОперации(Форма);
	
	Элементы.ФормаЗаполнитьСуммамиИзГрафика.Доступность = НЕ Объект.ЭтоШаблон И ЗначениеЗаполнено(ПараметрыГрафика.ШаблонОперации);
		
	Элементы.ГруппаКошелекФинансоваяЦельОстаток.Видимость = НЕ Объект.ЭтоШаблон;
	Элементы.ГруппаСуммаПлатежаВсегоВалюта.Видимость      = НЕ Объект.ЭтоШаблон;
	Элементы.ГруппаОсновнойДолг.Видимость                 = НЕ Объект.ЭтоШаблон;
	Элементы.ГруппаПроцентыКомиссия.Видимость             = НЕ Объект.ЭтоШаблон;
	Элементы.ГруппаОстатокДолгаСписаниеДолга.Видимость    = НЕ Объект.ЭтоШаблон;
	Элементы.ГруппаНадписьОткрытиеГрафика.Видимость       = Объект.ЭтоШаблон;
	Элементы.ГруппаКошелекИзГрафика.Видимость             = Объект.ЭтоШаблон;
	Элементы.НадписьСуммаПлатежаВсегоИзГрафика.Видимость  = Объект.ЭтоШаблон;
	Элементы.ГруппаСуммыИзГрафика.Видимость               = Объект.ЭтоШаблон;
	
	ОбновитьЗаголовокГруппыДополнительныеРасходы(Форма);
	
	Если НЕ Объект.ЭтоШаблон Тогда
		
		ОбновитьЗаголовокГруппыОсновнойДолг(Форма);
		ОбновитьЗаголовокГруппыПроцентыКомиссия(Форма);
		ОбновитьЗаголовокГруппыОстатокДолгаСписаниеДолга(Форма);
		
		Элементы.ФинансоваяЦель.Видимость = Форма.ВидимостьФинансовойЦели;
		
		ВидимостьСуммВВалютеДолга = ВалютыПлатежаИДолгаОтличаются(Объект);
		Элементы.ГруппаОсновнойДолгВВалютеДолга.Видимость = ВидимостьСуммВВалютеДолга;
		Элементы.ГруппаПроцентыВВалютеДолга.Видимость     = ВидимостьСуммВВалютеДолга;
		Элементы.ОтступКомиссия.Видимость                 = ВидимостьСуммВВалютеДолга;
		
		Элементы.СтатьяРасходовПоПроцентам.Доступность = Объект.ВыплаченоПроцентов <> 0;
		Элементы.СтатьяРасходовПоКомиссии.Доступность  = Объект.ВыплаченоКомиссии <> 0;
		
		Элементы.СписатьОстатокДолга.Доступность       = Форма.ОстатокЗадолженностиНаКонец <> 0;
		Элементы.СтатьяСписания.Видимость              = Форма.СписатьОстатокДолга;
		
		ОформлениеАналитикиСтатьиПоПроцентам(Форма);
		ОформлениеАналитикиСтатьиПоКомиссии(Форма);
		ОформлениеАналитикиСтатьиСписания(Форма);
		
	Иначе
		
		Форма.НадписьСуммаИзГрафика          = НСтр("ru='По графику платежей'"); 
		Форма.НадписьСуммаПроцентовИзГрафика = ?(ПараметрыГрафика.ПроцентнаяСтавка = 0, НСтр("ru='Без процентов'") , Форма.НадписьСуммаИзГрафика); 
		Форма.НадписьСуммаКомиссииИзГрафика  = ?(ПараметрыГрафика.СуммаЕжемесячнойКомиссии = 0, НСтр("ru='Без комиссии'") , Форма.НадписьСуммаИзГрафика); 
		
	КонецЕсли;
		
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЭлементыФормыПоСостояниюОперации(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыГрафикаПогашения()

	ЗаписьПараметровГрафика      = РегистрыСведений.ПараметрыГрафикаПогашенияДолгов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(ПараметрыГрафика, ЗаписьПараметровГрафика);
	ЗаписьПараметровГрафика.Долг = Объект.Кредит;
	ЗаписьПараметровГрафика.Прочитать();
	Если ЗаписьПараметровГрафика.Выбран() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыГрафика, ЗаписьПараметровГрафика);
	КонецЕсли;
	ПараметрыГрафика.Долг = Объект.Кредит;

	Если ЗначениеЗаполнено(ЗаписьПараметровГрафика.ШаблонОперации) Тогда
		
		// Найдем запись по текущему документу или месяцу документа
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВладелецРасписания", ЗаписьПараметровГрафика.ШаблонОперации);
		Запрос.УстановитьПараметр("ЭтотДокумент", Объект.Ссылка);
		Запрос.УстановитьПараметр("ЭтотДокументСуществует", НЕ Объект.Ссылка.Пустая());
		Запрос.УстановитьПараметр("МесяцДокумента", НачалоМесяца(Объект.Дата));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатыРасписаний.ВладелецРасписания,
		|	ДатыРасписаний.ПлановаяДата КАК ПлановаяДата,
		|	1 КАК Приоритет
		|ПОМЕСТИТЬ Измерения
		|ИЗ
		|	РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
		|ГДЕ
		|	&ЭтотДокументСуществует И ДатыРасписаний.ПлановаяОперация = &ЭтотДокумент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыРасписаний.ВладелецРасписания,
		|	ДатыРасписаний.ПлановаяДата,
		|	2
		|ИЗ
		|	РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
		|ГДЕ
		|	ДатыРасписаний.ВладелецРасписания = &ВладелецРасписания
		|	И НАЧАЛОПЕРИОДА(ДатыРасписаний.ПлановаяДата, МЕСЯЦ) = &МесяцДокумента
		|	И ДатыРасписаний.ПлановаяОперация <> &ЭтотДокумент
		|	И НЕ ДатыРасписаний.Пропустить
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДатыРасписаний.ВладелецРасписания,
		|	ДатыРасписаний.ПлановаяДата КАК ПлановаяДата,
		|	ДатыРасписаний.АктуальнаяДата КАК АктуальнаяДата,
		|	ДатыРасписаний.Пропустить,
		|	ДатыРасписаний.СуммаДолга,
		|	ДатыРасписаний.СуммаПроцентов,
		|	ДатыРасписаний.СуммаКомиссии,
		|	ДатыРасписаний.ПлановаяОперация
		|ИЗ
		|	Измерения КАК Измерения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
		|		ПО Измерения.ВладелецРасписания = ДатыРасписаний.ВладелецРасписания
		|			И Измерения.ПлановаяДата = ДатыРасписаний.ПлановаяДата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Измерения.Приоритет,
		|	ПлановаяДата,
		|	АктуальнаяДата";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЗаписьПлановойОперации, Выборка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСуммамиГрафикаСервер()
	
	Если НЕ ЗначениеЗаполнено(Объект.Кредит) ИЛИ НЕ ЗначениеЗаполнено(ЗаписьПлановойОперации.ПлановаяДата) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ПараметрыГрафика.КошелекДляПогашения) Тогда
		Объект.Кошелек = ПараметрыГрафика.КошелекДляПогашения;
		Объект.ВалютаКошелька = Объект.Кошелек.Валюта;
	КонецЕсли;
	Если Объект.Кошелек.ИспользоватьДляНакоплений Тогда
		Объект.ФинансоваяЦель = ?(ЗначениеЗаполнено(ПараметрыГрафика.ФинансоваяЦель), ПараметрыГрафика.ФинансоваяЦель, Справочники.ФинансовыеЦели.ОбщиеНакопления);
	Иначе
		Объект.ФинансоваяЦель = Неопределено;
	КонецЕсли; 
	
	Объект.СуммаКредитаВВалютеКредита = Макс(0, ЗаписьПлановойОперации.СуммаДолга);

	Объект.СуммаПроцентовВВалютеКредита = Макс(0, ЗаписьПлановойОперации.СуммаПроцентов);
	Объект.СтатьяРасходовПоПроцентам    = ПараметрыГрафика.СтатьяДляУчетаПроцентов;
	АналитикаСтатей.ПриИзмененииСтатьиВШапке(Объект.СтатьяРасходовПоПроцентам, Объект.АналитикаСтатьиРасходовПоПроцентам);
	
	Объект.ВыплаченоКомиссии          = Макс(0, ЗаписьПлановойОперации.СуммаКомиссии);
	Объект.СтатьяРасходовПоКомиссии   = ПараметрыГрафика.СтатьяЕжемесячнойКомиссии;
	АналитикаСтатей.ПриИзмененииСтатьиВШапке(Объект.СтатьяРасходовПоКомиссии, Объект.АналитикаСтатьиРасходовПоКомиссии);
	
	// Пересчет сумм в валюту кошелька
	КошелекПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстатки()

	ПериодОстатков = ?(Объект.Проведен, Объект.Ссылка.МоментВремени(), КонецДня(ТекущаяДатаКлиентСервер()));
	
	РаботаСФормамиДокументов.ОбновитьОстатокПоОбъектуУчета(ЭтотОбъект, "ОстатокВКошельке", 
			ПланыСчетов.РазделыУчета.Деньги, Объект.Кошелек, , Объект.ФинансоваяЦель, "ОстатокФинансоваяЦель");
	
	ОстатокДолгаПоКредиту = РазделыУчета.ПолучитьОстатокПоСубконто(ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов, Объект.Кредит, ПериодОстатков);
	СуммаПогашено = ?(НЕ ВалютыПлатежаИДолгаОтличаются(Объект), Объект.ВыплаченоКредита, Объект.СуммаКредитаВВалютеКредита);
	ОстатокЗадолженностиНаКонец = ОстатокДолгаПоКредиту + СуммаПогашено;
	Если СписатьОстатокДолга Тогда
		Объект.СписаноКредита = ОстатокЗадолженностиНаКонец;
	КонецЕсли;
	
	ОстатокПроцентов = РазделыУчета.ПолучитьОстатокПоСубконто(ПланыСчетов.РазделыУчета.ПроцентыПоДолгам, Объект.Кредит, ПериодОстатков);
	Элементы.ГруппаОстатокПроцентов.Видимость = (ОстатокПроцентов <> 0);
	
	ОбновитьЗаголовокГруппыОстатокДолгаСписаниеДолга(ЭтаФорма);

КонецПроцедуры
 
&НаСервере
Процедура КредиторПриИзмененииСервер()

	Если Объект.Кредит.Контакт <> Объект.Кредитор Тогда
		Объект.Кредит = Неопределено;
	КонецЕсли;
	
	ДолгиКонтакта = Новый СписокЗначений;
	ДатаОстатков = ?(Объект.Проведен, Объект.Ссылка.МоментВремени(), КонецДня(ТекущаяДатаКлиентСервер()));
	РазделыУчета.ЗаполнитьСписокВыбораДолговКонтакта(ДолгиКонтакта, Объект.Кредитор, ДатаОстатков, Ложь, Истина);
	Если ДолгиКонтакта.Количество() = 1 Тогда
		Объект.Кредит = ДолгиКонтакта[0].Значение;
	КонецЕсли;
	
	КредитПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура КредиторНачалоВыбораИзСпискаСервер()
	
	СписокВыбора = Элементы.Кредитор.СписокВыбора;
	
	ДатаОстатков = ?(Объект.Проведен, Объект.Ссылка.МоментВремени(), КонецДня(ТекущаяДатаКлиентСервер()));
	РазделыУчета.ЗаполнитьСписокВыбораЗаемщиковКредиторов(СписокВыбора, ДатаОстатков, ВалютаУчета, Ложь, Истина);
	
	Если НЕ ЗначениеЗаполнено(СписокВыбора) Тогда
		ДатаОстатков = ?(Объект.Проведен, Объект.Ссылка.Дата, КонецДня(ТекущаяДатаКлиентСервер()));
		Представление = НСтр("ru = '<Нет кредиторов на %1>'");
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Представление, Формат(ДатаОстатков, "ДФ='дд.ММ.гггг (ЧЧ:мм)'"));
		СписокВыбора.Добавить(Неопределено, Представление);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КредитПриИзмененииСервер()

	Объект.ВалютаКредита              = Объект.Кредит.Валюта;
	Если ЗначениеЗаполнено(Объект.Кредит) Тогда
		Объект.Кредитор = Объект.Кредит.Контакт;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Кредитор) Тогда
		Массив = Новый Массив();
		Массив.Добавить(Новый СвязьПараметраВыбора("Отбор.Контакт", "Объект.Кредитор", РежимИзмененияСвязанногоЗначения.НеИзменять));
		Элементы.Кредит.СвязиПараметровВыбора  = Новый ФиксированныйМассив(Массив);
	Иначе
		Элементы.Кредит.СвязиПараметровВыбора  = Новый ФиксированныйМассив(Новый Массив());
	КонецЕсли;
	
	ПрочитатьПараметрыГрафикаПогашения();
	
	Если Объект.ВыплаченоКредита = 0 И Объект.ВыплаченоПроцентов = 0 И Объект.ВыплаченоКомиссии = 0 Тогда
		ЗаполнитьСуммамиГрафикаСервер();
	КонецЕсли; 
	
	Если Объект.ВалютаКредита = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(Объект.ВалютаКредита) Тогда
		Объект.КурсВалютыКредита      = 1;
		Объект.КратностьВалютыКредита = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаКредита, Объект.Дата, ВалютаУчета);
		Объект.КурсВалютыКредита      = Макс(КурсИКратность.Курс, 1);
		Объект.КратностьВалютыКредита = Макс(КурсИКратность.Кратность, 1);;
	КонецЕсли; 
	
	ДоступностьСпособа = ЗначениеЗаполнено(Объект.Кредит) И 
		(ПараметрыГрафика.ПроцентнаяСтавка <> 0 ИЛИ ПараметрыГрафика.СуммаЕжемесячнойКомиссии <> 0);
	ДоступностьКомиссии  = ДоступностьСпособа И ПараметрыГрафика.СуммаЕжемесячнойКомиссии <> 0;
	ДоступностьПроцентов = ДоступностьСпособа И ПараметрыГрафика.ПроцентнаяСтавка <> 0;
	Если НЕ ДоступностьПроцентов Тогда
		Объект.ВыплаченоПроцентов = 0;
		Объект.СуммаПроцентовВВалютеКредита = 0;
	КонецЕсли; 
	Если НЕ ДоступностьКомиссии Тогда
		Объект.ВыплаченоКомиссии  = 0;
	КонецЕсли; 
	
	ОбновитьОстатки();
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура КредитНачалоВыбораИзСпискаСервер()
	
	СписокВыбора = Элементы.Кредит.СписокВыбора;
	
	ДатаОстатков = ?(Объект.Проведен, Объект.Ссылка.МоментВремени(), КонецДня(ТекущаяДатаКлиентСервер()));
	РазделыУчета.ЗаполнитьСписокВыбораДолговКонтакта(СписокВыбора, Объект.Кредитор, ДатаОстатков, Ложь, Истина);
	
	Если НЕ ЗначениеЗаполнено(СписокВыбора) Тогда
		ДатаОстатков = ?(Объект.Проведен, Объект.Ссылка.Дата, КонецДня(ТекущаяДатаКлиентСервер()));
		Представление = НСтр("ru = '<Нет кредитов контакта %1 на %2>'");
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Представление, 
			?(ЗначениеЗаполнено(Объект.Кредитор), """" + Объект.Кредитор + """", НСтр("ru = '<Контакт не задан>'")), 
			Формат(ДатаОстатков, "ДФ='дд.ММ.гггг (ЧЧ:мм)'"));
		СписокВыбора.Добавить(Неопределено, Представление);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КошелекПриИзмененииСервер()
	
	Для Каждого СтрокаРасхода Из Объект.ДополнительныеРасходы Цикл
		СтрокаРасхода.КошелекРасхода = Объект.Кошелек;
	КонецЦикла; 
	
	ВидимостьФинансовойЦели = ЗначениеЗаполнено(Объект.Кошелек) И Объект.Кошелек.ИспользоватьДляНакоплений;
	
	Объект.ВалютаКошелька = Объект.Кошелек.Валюта;

	Если Объект.ВалютаКошелька = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(Объект.ВалютаКошелька) Тогда
		Объект.КурсВалютыКошелька      = 1;
		Объект.КратностьВалютыКошелька = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаКошелька, Объект.Дата, ВалютаУчета);
		Объект.КурсВалютыКошелька      = Макс(КурсИКратность.Курс, 1);
		Объект.КратностьВалютыКошелька = Макс(КурсИКратность.Кратность, 1);
	КонецЕсли;
	
	Объект.ВыплаченоКредита = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.СуммаКредитаВВалютеКредита,
		Объект.ВалютаКредита, Объект.ВалютаКошелька, 
		Объект.КурсВалютыКредита, Объект.КурсВалютыКошелька,
		Объект.КратностьВалютыКредита, Объект.КратностьВалютыКошелька);
	Объект.ВыплаченоПроцентов = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.СуммаПроцентовВВалютеКредита,
		Объект.ВалютаКредита, Объект.ВалютаКошелька, 
		Объект.КурсВалютыКредита, Объект.КурсВалютыКошелька,
		Объект.КратностьВалютыКредита, Объект.КратностьВалютыКошелька);
	
	СуммаПлатежаВсего = СуммаПлатежаВсего(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.ФинансоваяЦель) Тогда
		Объект.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
	КонецЕсли; 
	
	ОбновитьОстатки();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияРедактораАналитикиСтатьи(Результат, ИмяРеквизитаАналитикаСтатьи) Экспорт
	
	Если ТипЗнч(Результат) = Тип("СправочникСсылка.ЗначенияСубконтоАналитика") Тогда
		
		Объект[ИмяРеквизитаАналитикаСтатьи] = Результат;
		Модифицированность = Истина;
		
		Если ИмяРеквизитаАналитикаСтатьи = "АналитикаСтатьиРасходовПоПроцентам" Тогда
			ОформлениеАналитикиСтатьиПоПроцентам(ЭтаФорма);
		ИначеЕсли ИмяРеквизитаАналитикаСтатьи = "АналитикаСтатьиРасходовПоКомиссии" Тогда
			ОформлениеАналитикиСтатьиПоКомиссии(ЭтаФорма);
		ИначеЕсли ИмяРеквизитаАналитикаСтатьи = "АналитикаСтатьиСписания" Тогда
			ОформлениеАналитикиСтатьиСписания(ЭтаФорма);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОформлениеАналитикиСтатьиПоПроцентам(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	// Текст гиперссылки
	Форма.АналитикаСтатьиРасходовПоПроцентамСтрокой = ?(ЗначениеЗаполнено(Объект.АналитикаСтатьиРасходовПоПроцентам), Объект.АналитикаСтатьиРасходовПоПроцентам, НСтр("ru = '<не задана>'"));
	
	// Видимость, доступность
	Элементы.АналитикаСтатьиРасходовПоПроцентамСтрокой.Видимость   = Элементы.СтатьяРасходовПоПроцентам.Видимость;
	Элементы.АналитикаСтатьиРасходовПоПроцентамСтрокой.Доступность = Элементы.СтатьяРасходовПоПроцентам.Доступность И ЗначениеЗаполнено(Объект.СтатьяРасходовПоПроцентам);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОформлениеАналитикиСтатьиПоКомиссии(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	// Текст гиперссылки
	Форма.АналитикаСтатьиРасходовПоКомиссииСтрокой = ?(ЗначениеЗаполнено(Объект.АналитикаСтатьиРасходовПоКомиссии), Объект.АналитикаСтатьиРасходовПоКомиссии, НСтр("ru = '<не задана>'"));
	
	// Видимость, доступность
	Элементы.АналитикаСтатьиРасходовПоКомиссииСтрокой.Видимость   = Элементы.СтатьяРасходовПоКомиссии.Видимость;
	Элементы.АналитикаСтатьиРасходовПоКомиссииСтрокой.Доступность = Элементы.СтатьяРасходовПоКомиссии.Доступность И ЗначениеЗаполнено(Объект.СтатьяРасходовПоКомиссии);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОформлениеАналитикиСтатьиСписания(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	// Текст гиперссылки
	Форма.АналитикаСтатьиСписанияСтрокой = ?(ЗначениеЗаполнено(Объект.АналитикаСтатьиСписания), Объект.АналитикаСтатьиСписания, НСтр("ru = '<не задана>'"));
	
	// Видимость, доступность
	Элементы.АналитикаСтатьиСписанияСтрокой.Видимость   = Элементы.СтатьяСписания.Видимость;
	Элементы.АналитикаСтатьиСписанияСтрокой.Доступность = Элементы.СтатьяСписания.Доступность И ЗначениеЗаполнено(Объект.СтатьяСписания);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Функция СуммаПлатежаВсего(Форма)
	
	Объект = Форма.Объект;
	
	Возврат Объект.ВыплаченоКредита 
			+ Объект.ВыплаченоПроцентов 
			+ Объект.ВыплаченоКомиссии 
			+ Объект.ДополнительныеРасходы.Итог("СуммаРасхода");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ВалютыПлатежаИДолгаОтличаются(Объект)
	
	Возврат ЗначениеЗаполнено(Объект.ВалютаКошелька) 
			И ЗначениеЗаполнено(Объект.ВалютаКредита)
			И Объект.ВалютаКошелька <> Объект.ВалютаКредита;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ОбновитьЗаголовокГруппыОсновнойДолг(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	СтрСуммаДолга = Формат(Объект.ВыплаченоКредита, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКошелька), " " + Объект.ВалютаКошелька, "");
	Если ВалютыПлатежаИДолгаОтличаются(Объект) И Объект.СуммаКредитаВВалютеКредита <> 0 Тогда
		СтрСуммаДолга = СтрСуммаДолга + " / " + Формат(Объект.СуммаКредитаВВалютеКредита, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКредита), " " + Объект.ВалютаКредита, "");
	КонецЕсли;
	
	ТекстЗаголовка = НСтр("ru = 'Сумма основного долга: %1 '");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, СтрСуммаДолга);
	Элементы.ГруппаОсновнойДолг.ЗаголовокСвернутогоОтображения = "► " + ТекстЗаголовка;
	Элементы.ГруппаОсновнойДолг.Заголовок = "▼ " + ТекстЗаголовка;
	
	Если Объект.ВыплаченоКредита < 0 ИЛИ Объект.СуммаКредитаВВалютеКредита < 0 Тогда
		Элементы.ГруппаОсновнойДолг.ЦветТекстаЗаголовка = Форма.СтильПоясняющийОшибкуТекст;
	Иначе
		Элементы.ГруппаОсновнойДолг.ЦветТекстаЗаголовка = Форма.СтильЗаголовокГруппыЦвет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОбновитьЗаголовокГруппыПроцентыКомиссия(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	СтрСуммаПроцентов = Формат(Объект.ВыплаченоПроцентов, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКошелька), " " + Объект.ВалютаКошелька, "");
	Если ВалютыПлатежаИДолгаОтличаются(Объект) И Объект.СуммаПроцентовВВалютеКредита <> 0 Тогда
		СтрСуммаПроцентов = СтрСуммаПроцентов + " / " + Формат(Объект.СуммаПроцентовВВалютеКредита, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКредита), " " + Объект.ВалютаКредита, "");
	КонецЕсли;
	
	СтрСуммаКомиссии = Формат(Объект.ВыплаченоКомиссии, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКошелька), " " + Объект.ВалютаКошелька, "");
	
	ТекстЗаголовка = НСтр("ru = 'Проценты: %1; Комиссия: %2 '");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, СтрСуммаПроцентов, СтрСуммаКомиссии);
	Элементы.ГруппаПроцентыКомиссия.ЗаголовокСвернутогоОтображения = "► " + ТекстЗаголовка;
	Элементы.ГруппаПроцентыКомиссия.Заголовок = "▼ " + ТекстЗаголовка;
	
	Если Объект.ВыплаченоПроцентов < 0 ИЛИ Объект.СуммаПроцентовВВалютеКредита < 0 ИЛИ Объект.ВыплаченоКомиссии < 0 Тогда
		Элементы.ГруппаПроцентыКомиссия.ЦветТекстаЗаголовка = Форма.СтильПоясняющийОшибкуТекст;
	Иначе
		Элементы.ГруппаПроцентыКомиссия.ЦветТекстаЗаголовка = Форма.СтильЗаголовокГруппыЦвет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОбновитьЗаголовокГруппыДополнительныеРасходы(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ИтогДопРасходов = Объект.ДополнительныеРасходы.Итог("СуммаРасхода");
	ИтогДопРасходовСтрокой = Формат(ИтогДопРасходов, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКошелька), " " + Объект.ВалютаКошелька, "");
	
	ТекстЗаголовка = НСтр("ru = 'Дополнительные расходы: %1 '");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, ИтогДопРасходовСтрокой);
	Элементы.ГруппаДополнительныеРасходы.ЗаголовокСвернутогоОтображения = "► " + ТекстЗаголовка;
	Элементы.ГруппаДополнительныеРасходы.Заголовок = "▼ " + ТекстЗаголовка;
	
	Если ИтогДопРасходов < 0 Тогда
		Элементы.ГруппаДополнительныеРасходы.ЦветТекстаЗаголовка = Форма.СтильПоясняющийОшибкуТекст;
	Иначе
		Элементы.ГруппаДополнительныеРасходы.ЦветТекстаЗаголовка = Форма.СтильЗаголовокГруппыЦвет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОбновитьЗаголовокГруппыОстатокДолгаСписаниеДолга(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ТекстЗаголовка = ?(Форма.СписатьОстатокДолга, НСтр("ru = 'Списать остаток долга %1'"), НСтр("ru = 'Остаток долга: %1'"));
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка,
		Формат(Форма.ОстатокЗадолженностиНаКонец, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКредита), " " + Объект.ВалютаКредита, ""));
	
	Если Форма.ОстатокПроцентов <> 0 Тогда
		ТекстЗаголовка = ТекстЗаголовка + "; " + НСтр("ru = 'Остаток процентов: %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка,
			Формат(Форма.ОстатокПроцентов, "ЧДЦ=2; ЧН=0") + ?(ЗначениеЗаполнено(Объект.ВалютаКредита), " " + Объект.ВалютаКредита, ""));
	КонецЕсли;
	
	Элементы.ГруппаОстатокДолгаСписаниеДолга.ЗаголовокСвернутогоОтображения = "► " + ТекстЗаголовка + " ";
	
	Если Форма.ОстатокЗадолженностиНаКонец > 0 Тогда
		Элементы.ГруппаОстатокДолгаСписаниеДолга.ЦветТекстаЗаголовка = Форма.СтильПоясняющийОшибкуТекст;
	Иначе
		Элементы.ГруппаОстатокДолгаСписаниеДолга.ЦветТекстаЗаголовка = Форма.СтильЗаголовокГруппыЦвет;
	КонецЕсли;
	
КонецПроцедуры

// Обслуживание плановых операций
&НаСервере
Процедура ЗаполнитьДанныеПоШаблону(СсылкаНаШаблон)
	
	РаботаСФормамиДокументов.ОбновитьФормуОперацииПоШаблону(ЭтотОбъект, СсылкаНаШаблон);
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПриСозданииНаСервере(ЭтаФорма, "", "", "СтатьяРасхода", "АналитикаСтатьи", "ДополнительныеРасходыКоманднаяПанель");
	
	// Заполнение дополнительных колонок и реквизитов
	ЗаполнитьДобавленныеКолонки();
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Настройка внешнего вида
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

// Обслуживание аналитики статей:
&НаСервере
Процедура УправлениеРеквизитамиАналитики(ИспользоватьЗначенияПоУмолчанию = Ложь, ПотеряДанныхРазрешена = Ложь)

	АналитикаСтатей.УправлениеФормой(ЭтаФорма, ИспользоватьЗначенияПоУмолчанию, ПотеряДанныхРазрешена);

КонецПроцедуры
 
// Обслуживание аналитики статей:
&НаСервере
Процедура СтатьяПриИзмененииСервер(ИДСтроки)

	СтрокаДокумента = Объект.ДополнительныеРасходы.НайтиПоИдентификатору(ИДСтроки);
	Если СтрокаДокумента <> Неопределено Тогда
		АналитикаСтатей.ПриИзмененииСтатьиВТабличнойЧасти(ЭтаФорма, СтрокаДокумента.СтатьяРасхода, "ДополнительныеРасходы", ИДСтроки);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзмененииЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ВыплаченоКредита = 0;
		Объект.СуммаКредитаВВалютеКредита = 0;
		Объект.ВыплаченоПроцентов = 0;
		Объект.СуммаПроцентовВВалютеКредита = 0;
		Объект.ВыплаченоКомиссии = 0;
		КредитПриИзмененииСервер();
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура АналитикаСтатьиРасходовПоПроцентамСтрокойНажатиеЗавершение(Выбор, ДополнительныеПараметры) Экспорт

	Если Выбор = Неопределено Тогда
		Возврат;
	ИначеЕсли Выбор.Значение = "Изменить" Тогда
		ПараметрыЗаполнения = Новый Структура("Статья,ПакетАналитики", Объект.СтатьяРасходовПоПроцентам, Объект.АналитикаСтатьиРасходовПоПроцентам);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияРедактораАналитикиСтатьи", ЭтаФорма, "АналитикаСтатьиРасходовПоПроцентам");
		ОткрытьФорму("ОбщаяФорма.РедакторАналитикиСтатьи", ПараметрыЗаполнения, ЭтаФорма,,,, ОписаниеОповещения);
		
	ИначеЕсли Выбор.Значение = "ЗаполнитьПоСтатьеКомиссии" Тогда
		Объект.АналитикаСтатьиРасходовПоПроцентам = Объект.АналитикаСтатьиРасходовПоКомиссии;
		Модифицированность = Истина;
		ОформлениеАналитикиСтатьиПоПроцентам(ЭтаФорма);
		
	ИначеЕсли Выбор.Значение = "Очистить" Тогда
		Объект.АналитикаСтатьиРасходовПоПроцентам = Неопределено;
		Модифицированность = Истина;
		ОформлениеАналитикиСтатьиПоПроцентам(ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры
 
&НаКлиенте
Процедура АналитикаСтатьиРасходовПоКомиссииНажатиеЗавершение(Выбор, ДополнительныеПараметры) Экспорт

	Если Выбор = Неопределено Тогда
		Возврат;
	ИначеЕсли Выбор.Значение = "Изменить" Тогда
		ПараметрыЗаполнения = Новый Структура("Статья,ПакетАналитики", Объект.СтатьяРасходовПоКомиссии, Объект.АналитикаСтатьиРасходовПоКомиссии);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияРедактораАналитикиСтатьи", ЭтаФорма, "АналитикаСтатьиРасходовПоКомиссии");
		ОткрытьФорму("ОбщаяФорма.РедакторАналитикиСтатьи", ПараметрыЗаполнения, ЭтаФорма,,,, ОписаниеОповещения);
		
	ИначеЕсли Выбор.Значение = "ЗаполнитьПоСтатьеПроцентов" Тогда
		Объект.АналитикаСтатьиРасходовПоКомиссии = Объект.АналитикаСтатьиРасходовПоПроцентам;
		Модифицированность = Истина;
		ОформлениеАналитикиСтатьиПоКомиссии(ЭтаФорма);
		
	ИначеЕсли Выбор.Значение = "Очистить" Тогда
		Объект.АналитикаСтатьиРасходовПоКомиссии = Неопределено;
		Модифицированность = Истина;
		ОформлениеАналитикиСтатьиПоКомиссии(ЭтаФорма);
		
	КонецЕсли;
	

КонецПроцедуры
 
&НаКлиенте
Процедура АналитикаСтатьиСписанияСтрокойНажатиеЗавершение(Выбор, ДополнительныеПараметры) Экспорт

	Если Выбор = Неопределено Тогда
		Возврат;
	ИначеЕсли Выбор.Значение = "Изменить" Тогда
		ПараметрыЗаполнения = Новый Структура("Статья,ПакетАналитики", Объект.СтатьяСписания, Объект.АналитикаСтатьиСписания);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияРедактораАналитикиСтатьи", ЭтаФорма, "АналитикаСтатьиСписания");
		ОткрытьФорму("ОбщаяФорма.РедакторАналитикиСтатьи", ПараметрыЗаполнения, ЭтаФорма,,,, ОписаниеОповещения);
		
	ИначеЕсли Выбор.Значение = "Очистить" Тогда
		Объект.АналитикаСтатьиСписания = Неопределено;
		Модифицированность = Истина;
		ОформлениеАналитикиСтатьиСписания(ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяДатаКлиентСервер()
	#Если Сервер Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли 
КонецФункции 

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

