#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ОбщегоНазначенияДеньги.ЗаполнитьОбъектПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли; 
	
	// Проверяем реквизиты нового документа в соответствии с настройками пользователя
	ОбслуживаниеДокументов.ПроверитьЗаполнениеНовогоДокумента(ЭтотОбъект);
	
	// Заполняем незаполненные реквизиты значениями по умолчанию:
	Если ЗначениеЗаполнено(Кредит) И НЕ ЗначениеЗаполнено(Кредитор) Тогда
		Кредитор = Кредит.Контакт;
	КонецЕсли;
	Если ЗначениеЗаполнено(Кредит) И НЕ ЗначениеЗаполнено(ВалютаКредита) Тогда
		ВалютаКредита = Кредит.Валюта;
	КонецЕсли;
	Если ЗначениеЗаполнено(Кошелек) И НЕ ЗначениеЗаполнено(ВалютаКошелька) Тогда
		ВалютаКошелька = Кошелек.Валюта;
	КонецЕсли;
	Если ЗначениеЗаполнено(Кошелек) И Кошелек.ИспользоватьДляНакоплений И НЕ ЗначениеЗаполнено(ФинансоваяЦель) Тогда
		ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
	КонецЕсли;
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	
	Если ВалютаКредита = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(ВалютаКредита) Тогда
		КурсВалютыКредита      = 1;
		КратностьВалютыКредита = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаКредита, Дата, ВалютаУчета);
		КурсВалютыКредита      = Макс(КурсИКратность.Курс, 1);
		КратностьВалютыКредита = Макс(КурсИКратность.Кратность, 1);;
	КонецЕсли; 
	Если ВалютаКошелька = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(ВалютаКошелька) Тогда
		КурсВалютыКошелька      = 1;
		КратностьВалютыКошелька = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаКошелька, Дата, ВалютаУчета);
		КурсВалютыКошелька      = Макс(КурсИКратность.Курс, 1);
		КратностьВалютыКошелька = Макс(КурсИКратность.Кратность, 1);;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	// Общий функционал документов:
	ОбщегоНазначенияДеньги.ОбработкаСобытияПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	Если ВалютаКредита = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(ВалютаКредита) Тогда
		КурсВалютыКредита      = 1;
		КратностьВалютыКредита = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаКредита, Дата, ВалютаУчета);
		КурсВалютыКредита      = Макс(КурсИКратность.Курс, 1);
		КратностьВалютыКредита = Макс(КурсИКратность.Кратность, 1);;
	КонецЕсли; 
	Если ВалютаКошелька = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(ВалютаКошелька) Тогда
		КурсВалютыКошелька      = 1;
		КратностьВалютыКошелька = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаКошелька, Дата, ВалютаУчета);
		КурсВалютыКошелька      = Макс(КурсИКратность.Курс, 1);
		КратностьВалютыКошелька = Макс(КурсИКратность.Кратность, 1);;
	КонецЕсли; 
	
	Если ОбъектКопирования.ЭтоШаблон Тогда
		ОписаниеОперации = НСтр("ru = 'Копия'") + ": " + ОбъектКопирования.ОписаниеОперации; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если СписаноКредита = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяСписания");
	КонецЕсли;
	
	Если ВыплаченоКомиссии = 0 И ВыплаченоКредита = 0 И ВыплаченоПроцентов = 0 И ДополнительныеРасходы.Итог("СуммаРасхода") = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Кошелек");
	КонецЕсли; 
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Заполнение итоговых и информационных реквизитов:
	Документы.МыВернулиДолг.ОбновитьИтоговыеСуммыДокумента(ЭтотОбъект);
	
	ВалютаОперации = ?(ЗначениеЗаполнено(Кредит), Кредит.Валюта, Константы.ВалютаУчета.Получить());
	
	ВалютаКредита  = Кредит.Валюта;
	ВалютаКошелька = Кошелек.Валюта;
	Для Каждого СтрокаРасхода Из ДополнительныеРасходы Цикл
		СтрокаРасхода.КошелекРасхода = Кошелек;
	КонецЦикла; 

	// Проверяем корректность заполнения финансовой цели в шапке и в табличной части Доп.расходы
	КошелекДляНакоплений = ЗначениеЗаполнено(Кошелек) И Кошелек.ИспользоватьДляНакоплений;
	Если ЗначениеЗаполнено(ФинансоваяЦель) И Не КошелекДляНакоплений Тогда
		ФинансоваяЦель = Неопределено;
	Иначе
		ФинансоваяЦель = ?(ЗначениеЗаполнено(ФинансоваяЦель), ФинансоваяЦель, Справочники.ФинансовыеЦели.ОбщиеНакопления);
	КонецЕсли;
	Для каждого Строка Из ДополнительныеРасходы Цикл
		Если ЗначениеЗаполнено(Строка.ФинансоваяЦель) И Не КошелекДляНакоплений Тогда
			Строка.ФинансоваяЦель = Неопределено;
		Иначе
			Строка.ФинансоваяЦель = ?(ЗначениеЗаполнено(Строка.ФинансоваяЦель), Строка.ФинансоваяЦель, Справочники.ФинансовыеЦели.ОбщиеНакопления);
		КонецЕсли;
	КонецЦикла;
	
	// Проверяем корректность пересчета сумм
	Если ВыплаченоПроцентов <> 0 И СуммаПроцентовВВалютеКредита = 0 Тогда
		Если ВалютаКошелька = ВалютаКредита Тогда
			СуммаПроцентовВВалютеКредита = ВыплаченоПроцентов;
		Иначе
			СуммаПроцентовВВалютеКредита = РаботаСКурсамиВалют.ПересчитатьВВалюту(ВыплаченоПроцентов, ВалютаКошелька, ВалютаКредита, Дата);
		КонецЕсли;
	КонецЕсли;
	
	Если ВалютаКошелька = ВалютаКредита И СуммаКредитаВВалютеКредита <> ВыплаченоКредита Тогда
		СуммаКредитаВВалютеКредита = ВыплаченоКредита;
	КонецЕсли;
	
	
	// Заполняем итоговые суммы операции
	СуммаДополнительныхРасходов = ДополнительныеРасходы.Итог("СуммаРасхода");
	Если ВыплаченоКредита <> 0 ИЛИ ВыплаченоПроцентов <> 0 Тогда
		СуммаОперации  = ВыплаченоКредита + ВыплаченоПроцентов + ВыплаченоКомиссии + СуммаДополнительныхРасходов;
		ТипИтога = "Списание";
	Иначе
		СуммаОперации  = СуммаПроцентовВВалютеКредита + ВыплаченоКомиссии;
		ТипИтога = "Начисление";
	КонецЕсли; 
	
	Если ЭтоШаблон Тогда
		Проведен = Ложь;
		Если РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ТипИтога = "Начисление" Тогда
		ОписаниеОперации = НСтр("ru = 'Начисления % по долгу [%1]'"); 
	Иначе
		ОписаниеОперации = НСтр("ru = 'Мы вернули долг (кредит) [%1]'"); 
	КонецЕсли; 
	ОписаниеОперации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеОперации, Кредит);
	
	Если ДополнительныеРасходы.Количество() > 0 Тогда
		СписокРасходов = ДополнительныеРасходы.Выгрузить(,"СтатьяРасхода");
		СписокРасходов.Свернуть("СтатьяРасхода");
		ОписаниеРасходов = "";
		Для Каждого СтрокаРасхода Из СписокРасходов Цикл
			Если ЗначениеЗаполнено(СтрокаРасхода.СтатьяРасхода) Тогда
				ОписаниеРасходов = ОписаниеРасходов + ?(ОписаниеРасходов = "", "", ", ") + СтрокаРасхода.СтатьяРасхода;
			КонецЕсли; 
		КонецЦикла; 
		Если ЗначениеЗаполнено(ОписаниеРасходов) Тогда
			ОписаниеОперации = ОписаниеОперации + ". " + НСтр("ru = 'Доп. расходы'") + ": " + ОписаниеРасходов;
		КонецЕсли; 
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Комментарий) Тогда
		ОписаниеОперации = ОписаниеОперации + " (" + Комментарий + ")";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Заполняем дополнительные реквизиты информацией, необходимой для формирования записей в регистры
	Документы.МыВернулиДолг.ПроверитьДополнительныеСвойстваОперации(ЭтотОбъект, ДополнительныеСвойства, Истина);
	ОбслуживаниеДокументов.ПриЗаписиОбъектаДокумента(ЭтотОбъект);
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ОбменДанными.Загрузка ИЛИ ЭтоШаблон Тогда
		Возврат;
	КонецЕсли; 
	
	Документы.МыВернулиДолг.СформироватьДвиженияДокумента(Ссылка, Движения, ДополнительныеСвойства);
	ПлановыеОперации.ПроверитьОборотыПлановойОоперацииПриПроведении(ЭтотОбъект);
	
	Движения.ЖурналОпераций.Записывать            = Истина;
	Движения.ФактическиеОборотыБюджета.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти



#КонецЕсли
