#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда



#Область ПрограммныйИнтерфейс

// Формирует и записывает движения в регистры учета
//
//Параметры:
//	СсылкаНаДокумент       - ДокументСсылка.МыВернулиДолг - регистратор движений
//	ДвиженияДокумента      - КоллекцияДвижений или иная коллекция - наборы записей регистров учета
//	ДополнительныеСвойства - Структура - сордержит дополнительные свойства документа
//
Процедура СформироватьДвиженияДокумента(СсылкаНаДокумент, ДвиженияДокумента, ДополнительныеСвойства) Экспорт

	СчетДолга     = ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов;
	СчетПроцентов = ПланыСчетов.РазделыУчета.ПроцентыПоДолгам;
	СчетКапитала  = ПланыСчетов.РазделыУчета.Капитал;
	
	// Получаем таблицу для формирования движений
	Если ТипЗнч(ДополнительныеСвойства) <> Тип("Структура") Или Не ДополнительныеСвойства.Свойство("ТаблицыДокумента") Тогда
		ПроверитьДополнительныеСвойстваОперации(СсылкаНаДокумент, ДополнительныеСвойства, Истина);
	КонецЕсли;
	ТаблицыДокумента = ДополнительныеСвойства.ТаблицыДокумента;
	
	// Проводки для самого займа
	Для Каждого СтрокаДокумента Из ТаблицыДокумента.Основное Цикл
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		
		Если СтрокаДокумента.СуммаПроцентовВВалютеКредита <> 0 Тогда
			// Начисление процентов
			РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
				СчетКапитала, СтрокаДокумента.СтатьяРасходовПоПроцентам, СтрокаДокумента.АналитикаСтатьиРасходовПоПроцентам, 
					СтрокаДокумента.СуммаПроцентовВВалютеКредита, СтрокаДокумента.ВалютаКредита,
				СчетПроцентов, СтрокаДокумента.Кредит, , 
					СтрокаДокумента.СуммаПроцентовВВалютеКредита, СтрокаДокумента.ВалютаКредита, 
				СтрокаДокумента.Комментарий);
		КонецЕсли; 
		
		Если СтрокаДокумента.ВыплаченоКредита <> 0 ИЛИ СтрокаДокумента.СуммаКредитаВВалютеКредита <> 0 Тогда
			// Возврат тела кредита
			РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
				СчетДолга, СтрокаДокумента.Кредит, , 
					СтрокаДокумента.СуммаКредитаВВалютеКредита, СтрокаДокумента.ВалютаКредита,
				СчетДенег, СтрокаДокумента.Кошелек, СтрокаДокумента.ФинансоваяЦель, 
					СтрокаДокумента.ВыплаченоКредита, СтрокаДокумента.ВалютаКошелька,
				СтрокаДокумента.Комментарий);
		КонецЕсли; 
		
		Если СтрокаДокумента.ВыплаченоПроцентов <> 0 ИЛИ СтрокаДокумента.СуммаПроцентовВВалютеКредита <> 0 Тогда
			// Возврат процентов
			РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
				СчетПроцентов, СтрокаДокумента.Кредит, , 
					СтрокаДокумента.СуммаПроцентовВВалютеКредита, СтрокаДокумента.ВалютаКредита,
				СчетДенег, СтрокаДокумента.Кошелек, СтрокаДокумента.ФинансоваяЦель, 
					СтрокаДокумента.ВыплаченоПроцентов, СтрокаДокумента.ВалютаКошелька,
				СтрокаДокумента.Комментарий);
		КонецЕсли; 
		
		Если СтрокаДокумента.СписаноКредита <> 0 Тогда
			// Списание тела кредита
			РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
				СчетДолга, СтрокаДокумента.Кредит, , 
					-СтрокаДокумента.СписаноКредита, СтрокаДокумента.ВалютаКредита,
				СчетКапитала, СтрокаДокумента.СтатьяСписания, СтрокаДокумента.АналитикаСтатьиСписания, 
					-СтрокаДокумента.СписаноКредита, СтрокаДокумента.ВалютаКредита,
				СтрокаДокумента.Комментарий);
		КонецЕсли; 
		
		Если СтрокаДокумента.ВыплаченоКомиссии <> 0 Тогда
			// Выплата комиссии
			РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
				СчетКапитала, СтрокаДокумента.СтатьяРасходовПоКомиссии, СтрокаДокумента.АналитикаСтатьиРасходовПоКомиссии, 
					СтрокаДокумента.ВыплаченоКомиссии,СтрокаДокумента.ВалютаКошелька, 
				СчетДенег, СтрокаДокумента.Кошелек, СтрокаДокумента.ФинансоваяЦель, 
					СтрокаДокумента.ВыплаченоКомиссии,СтрокаДокумента.ВалютаКошелька, 
				СтрокаДокумента.Комментарий);
		КонецЕсли; 
		
	КонецЦикла; 

	// Проводки по доп.расходам при погашении кредита
	Для Каждого СтрокаДокумента Из ТаблицыДокумента.ДополнительныеРасходы Цикл
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		
		РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
			СчетКапитала, СтрокаДокумента.СтатьяРасхода, СтрокаДокумента.АналитикаСтатьи, 
				СтрокаДокумента.СуммаРасхода, СтрокаДокумента.ВалютаКошелька,
			СчетДенег, СтрокаДокумента.КошелекРасхода, СтрокаДокумента.ФинансоваяЦель, 
				СтрокаДокумента.СуммаРасхода, СтрокаДокумента.ВалютаКошелька,
			СтрокаДокумента.Комментарий);
		
	КонецЦикла; 
	
	
	// Записываем движения в регистр фактических оборотов бюджета
	Если ТаблицыДокумента.Свойство("ОборотыБюджета") Тогда
		ДвиженияДокумента.ФактическиеОборотыБюджета.Загрузить(ТаблицыДокумента.ОборотыБюджета);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет структуру ДополнительныеСвойства значениями, необходимыми для дальнейшей обработки документа
//
//Параметры:
//	Операция               - ссылка или объект документа, зависит от контекста вызова этой процедуры
//	ДополнительныеСвойства - Структура или Неопределено - сордержит дополнительные свойства документа
//	ПроверятьТаблицыДокумента - Булево - заполнять ли таблицы для формирования движений
//
Процедура ПроверитьДополнительныеСвойстваОперации(Операция, ДополнительныеСвойства, ПроверятьТаблицыДокумента = Ложь) Экспорт

	// Выполняем проверку, одинаковую для всех документов
	ОбслуживаниеДокументов.ОбщаяПроверкаДополнительныхСвойствДокумента(Операция, ДополнительныеСвойства);
	
	Если НЕ ДополнительныеСвойства.Свойство("ВалютаОперации") ИЛИ НЕ ЗначениеЗаполнено(ДополнительныеСвойства.ВалютаОперации) Тогда
		ДополнительныеСвойства.Вставить("ВалютаОперации", ?(ЗначениеЗаполнено(Операция.Кредит), Операция.Кредит.Валюта, Константы.ВалютаУчета.Получить()))
	КонецЕсли;
	
	Если ПроверятьТаблицыДокумента И Не ДополнительныеСвойства.Свойство("ТаблицыДокумента") Тогда
		ДополнительныеСвойства.Вставить("ТаблицыДокумента", ПолучитьВыборкиДляФормированияДвижений(Операция.Ссылка, ДополнительныеСвойства));
	КонецЕсли;
	
КонецПроцедуры

// Обновляет итоговые суммы и описание операции
Процедура ОбновитьИтоговыеСуммыДокумента(ДокументОбъект) Экспорт
	
	ВалютаОперации = ?(ЗначениеЗаполнено(ДокументОбъект.Кредит), ДокументОбъект.Кредит.Валюта, Константы.ВалютаУчета.Получить());
	
	ДокументОбъект.ВалютаКредита  = ДокументОбъект.Кредит.Валюта;
	ДокументОбъект.ВалютаКошелька = ДокументОбъект.Кошелек.Валюта;
	Для Каждого СтрокаРасхода Из ДокументОбъект.ДополнительныеРасходы Цикл
		СтрокаРасхода.КошелекРасхода = ДокументОбъект.Кошелек;
	КонецЦикла; 

	// Проверяем корректность заполнения финансовой цели в шапке и в табличной части Доп.расходы
	КошелекДляНакоплений = ЗначениеЗаполнено(ДокументОбъект.Кошелек) И ДокументОбъект.Кошелек.ИспользоватьДляНакоплений;
	Если ЗначениеЗаполнено(ДокументОбъект.ФинансоваяЦель) И Не КошелекДляНакоплений Тогда
		ДокументОбъект.ФинансоваяЦель = Неопределено;
	Иначе
		ДокументОбъект.ФинансоваяЦель = ?(ЗначениеЗаполнено(ДокументОбъект.ФинансоваяЦель), 
				ДокументОбъект.ФинансоваяЦель, Справочники.ФинансовыеЦели.ОбщиеНакопления);
	КонецЕсли;
	Для каждого Строка Из ДокументОбъект.ДополнительныеРасходы Цикл
		Если ЗначениеЗаполнено(Строка.ФинансоваяЦель) И Не КошелекДляНакоплений Тогда
			Строка.ФинансоваяЦель = Неопределено;
		Иначе
			Строка.ФинансоваяЦель = ?(ЗначениеЗаполнено(Строка.ФинансоваяЦель), Строка.ФинансоваяЦель, Справочники.ФинансовыеЦели.ОбщиеНакопления);
		КонецЕсли;
	КонецЦикла;
	
	// Проверяем корректность пересчета сумм
	Если ДокументОбъект.ВыплаченоПроцентов <> 0 И ДокументОбъект.СуммаПроцентовВВалютеКредита = 0 Тогда
		Если ДокументОбъект. ВалютаКошелька = ДокументОбъект.ВалютаКредита Тогда
			ДокументОбъект.СуммаПроцентовВВалютеКредита = ДокументОбъект.ВыплаченоПроцентов;
		Иначе
			ДокументОбъект.СуммаПроцентовВВалютеКредита = РаботаСКурсамиВалют.ПересчитатьВВалюту(ДокументОбъект.ВыплаченоПроцентов, ДокументОбъект.ВалютаКошелька, ДокументОбъект.ВалютаКредита, ДокументОбъект.Дата);
		КонецЕсли;
	КонецЕсли;
	
	Если ДокументОбъект.ВалютаКошелька = ДокументОбъект.ВалютаКредита И ДокументОбъект.СуммаКредитаВВалютеКредита <> ДокументОбъект.ВыплаченоКредита Тогда
		ДокументОбъект.СуммаКредитаВВалютеКредита = ДокументОбъект.ВыплаченоКредита;
	КонецЕсли;
	
	
	// Заполняем итоговые суммы операции
	ДокументОбъект.СуммаДополнительныхРасходов = ДокументОбъект.ДополнительныеРасходы.Итог("СуммаРасхода");
	Если ДокументОбъект.ВыплаченоКредита <> 0 ИЛИ ДокументОбъект.ВыплаченоПроцентов <> 0 Тогда
		ДокументОбъект.СуммаОперации  = ДокументОбъект.ВыплаченоКредита + ДокументОбъект.ВыплаченоПроцентов 
							+ ДокументОбъект.ВыплаченоКомиссии + ДокументОбъект.СуммаДополнительныхРасходов;
		ТипИтога = "Списание";
	Иначе
		ДокументОбъект.СуммаОперации  = ДокументОбъект.СуммаПроцентовВВалютеКредита + ДокументОбъект.ВыплаченоКомиссии;
		ТипИтога = "Начисление";
	КонецЕсли; 
	
	Если ДокументОбъект.ЭтоШаблон Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипИтога = "Начисление" Тогда
		ДокументОбъект.ОписаниеОперации = НСтр("ru = 'Начисления % по долгу [%1]'"); 
	Иначе
		ДокументОбъект.ОписаниеОперации = НСтр("ru = 'Мы вернули долг (кредит) [%1]'"); 
	КонецЕсли; 
	ДокументОбъект.ОписаниеОперации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументОбъект.ОписаниеОперации, ДокументОбъект.Кредит);
	
	Если ДокументОбъект.ДополнительныеРасходы.Количество() > 0 Тогда
		СписокРасходов = ДокументОбъект.ДополнительныеРасходы.Выгрузить(,"СтатьяРасхода");
		СписокРасходов.Свернуть("СтатьяРасхода");
		ОписаниеРасходов = "";
		Для Каждого СтрокаРасхода Из СписокРасходов Цикл
			Если ЗначениеЗаполнено(СтрокаРасхода.СтатьяРасхода) Тогда
				ОписаниеРасходов = ОписаниеРасходов + ?(ОписаниеРасходов = "", "", ", ") + СтрокаРасхода.СтатьяРасхода;
			КонецЕсли; 
		КонецЦикла; 
		Если ЗначениеЗаполнено(ОписаниеРасходов) Тогда
			ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации + ". " + НСтр("ru = 'Доп. расходы'") + ": " + ОписаниеРасходов;
		КонецЕсли; 
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ДокументОбъект.Комментарий) Тогда
		ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации + " (" + ДокументОбъект.Комментарий + ")";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Дата");
	Поля.Добавить("ЭтоШаблон");
	Поля.Добавить("ОписаниеОперации");
	Поля.Добавить("СуммаОперации");
	Поля.Добавить("ВалютаКошелька");
	Поля.Добавить("Кошелек");
	Поля.Добавить("Кредит");
	Поля.Добавить("Кредитор");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Данные.ЭтоШаблон Тогда
		
		Представление = ДеньгиКлиентСервер.СокращенноеПредставление(Данные.ОписаниеОперации, 250, Ложь);
		
	Иначе
		
		Представление = НСтр("ru='Мы вернули долг от'") + " " + Формат(Данные.Дата, "ДФ='дд.ММ.гггг (ЧЧ:мм)'")
				+ ": " + Формат(Данные.СуммаОперации, "ЧДЦ=2; ЧН=0.00") + " " + Данные.ВалютаКошелька
				+ ?(ЗначениеЗаполнено(Данные.Кредитор), " " + ДеньгиКлиентСервер.СокращенноеПредставление(Строка(Данные.Кредитор)) , "")
				+ ?(ЗначениеЗаполнено(Данные.Кредит), " " + НСтр("ru='в счет'") + " " + ДеньгиКлиентСервер.СокращенноеПредставление(Строка(Данные.Кредит)) , "")
				+ " " + НСтр("ru='из'") + " " + ДеньгиКлиентСервер.СокращенноеПредставление(Строка(Данные.Кошелек))
				; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" Тогда
		
		РаботаСФормамиДокументов.ОпределитьФормуСпискаДляВыбора(Тип("ДокументСсылка.МыВернулиДолг"), Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВыборкиДляФормированияДвижений(СсылкаНаДокумент, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Запрос.УстановитьПараметр("ВалютаУчета", ДополнительныеСвойства.ВалютаУчета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеквизитыДокумента.Ссылка КАК Регистратор,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Кредитор,
	|	РеквизитыДокумента.Кредит,
	|	РеквизитыДокумента.ВалютаКредита,
	|	ЕСТЬNULL(ПараметрыГрафика.СтатьяДляУчетаПроцентов, РеквизитыДокумента.СтатьяРасходовПоПроцентам) КАК СтатьяРасходовПоПроцентам,
	|	ЕСТЬNULL(ПараметрыГрафика.СуммаЕжемесячнойКомиссии, РеквизитыДокумента.СтатьяРасходовПоКомиссии) КАК СтатьяРасходовПоКомиссии,
	|	ЕСТЬNULL(ПараметрыГрафика.КошелекДляПогашения, РеквизитыДокумента.Кошелек) КАК Кошелек,
	|	ЕСТЬNULL(ПараметрыГрафика.КошелекДляПогашения.ИспользоватьДляНакоплений, ЕСТЬNULL(РеквизитыДокумента.Кошелек.ИспользоватьДляНакоплений, ЛОЖЬ)) КАК ИспользоватьДляНакоплений,
	|	ЕСТЬNULL(ПараметрыГрафика.КошелекДляПогашения.Валюта, РеквизитыДокумента.ВалютаКошелька) КАК ВалютаКошелька,
	|	РеквизитыДокумента.ВыплаченоКредита,
	|	РеквизитыДокумента.ВыплаченоПроцентов,
	|	РеквизитыДокумента.ВыплаченоКомиссии,
	|	РеквизитыДокумента.Комментарий,
	|	РеквизитыДокумента.СписаноКредита,
	|	РеквизитыДокумента.СтатьяСписания,
	|	РеквизитыДокумента.КурсВалютыКошелька,
	|	РеквизитыДокумента.КратностьВалютыКошелька,
	|	РеквизитыДокумента.КурсВалютыКредита,
	|	РеквизитыДокумента.КратностьВалютыКредита,
	|	РеквизитыДокумента.ФинансоваяЦель,
	|	РеквизитыДокумента.СуммаКредитаВВалютеКредита,
	|	РеквизитыДокумента.СуммаПроцентовВВалютеКредита,
	|	РеквизитыДокумента.АналитикаСтатьиРасходовПоПроцентам,
	|	РеквизитыДокумента.АналитикаСтатьиРасходовПоКомиссии,
	|	РеквизитыДокумента.АналитикаСтатьиСписания,
	|	РеквизитыДокумента.ЭтоШаблон,
	|	РеквизитыДокумента.Проведен,
	|	ЕСТЬNULL(РеквизитыДокумента.Кошелек.ТипСчета, ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Наличность)) КАК ТипСчета
	|ИЗ
	|	Документ.МыВернулиДолг КАК РеквизитыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыГрафикаПогашенияДолгов КАК ПараметрыГрафика
	|		ПО РеквизитыДокумента.Ссылка = ПараметрыГрафика.ШаблонОперации
	|			И (РеквизитыДокумента.ЭтоШаблон)
	|ГДЕ
	|	РеквизитыДокумента.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРасходы.Ссылка КАК Регистратор,
	|	ДопРасходы.Ссылка.Дата КАК Период,
	|	ДопРасходы.КошелекРасхода КАК КошелекРасхода,
	|	ДопРасходы.КошелекРасхода.ТипСчета КАК ТипСчета,
	|	ЕСТЬNULL(ДопРасходы.КошелекРасхода.ИспользоватьДляНакоплений, ЛОЖЬ) КАК ИспользоватьДляНакоплений,
	|	ДопРасходы.СтатьяРасхода,
	|	ДопРасходы.СуммаРасхода,
	|	ЕСТЬNULL(ДопРасходы.Ссылка.Кошелек.Валюта, &ВалютаУчета) КАК ВалютаКошелька,
	|	ЕСТЬNULL(ДопРасходы.Ссылка.Комментарий, """") КАК Комментарий,
	|	ДопРасходы.АналитикаСтатьи,
	|	ДопРасходы.ФинансоваяЦель,
	|	ЕСТЬNULL(ДопРасходы.Ссылка.ЭтоШаблон, ЛОЖЬ) КАК ЭтоШаблон
	|ИЗ
	|	Документ.МыВернулиДолг.ДополнительныеРасходы КАК ДопРасходы
	|ГДЕ
	|	ДопРасходы.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДопРасходы.НомерСтроки";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	СтруктураТаблиц = Новый Структура("Основное, ДополнительныеРасходы, ОбъектыОперации");
	СтруктураТаблиц.Основное              = ПакетРезультатов[0].Выгрузить();
	СтруктураТаблиц.ДополнительныеРасходы = ПакетРезультатов[1].Выгрузить();
	
	// Заполняем таблицу объектов операциии для записи в регистр сведений
	// и таблицу движений для записи фактических оборотов бюджета
	ТаблицаНабора = ОбслуживаниеДокументов.НоваяТаблицаРегистраОбъектыОпераций();
	Если СтруктураТаблиц.Основное.Количество() > 0 И 
			(СтруктураТаблиц.Основное[0].ЭтоШаблон Или СтруктураТаблиц.Основное[0].Проведен ИЛИ ДополнительныеСвойства.ЭтоПлановаяОперация) Тогда
		ОборотыБюджета = ОбслуживаниеДокументов.НоваяТаблицаРегистровОборотовБюджета();
		ОборотыБюджета.Колонки.Добавить("Примечание");
	Иначе
		ОборотыБюджета = Неопределено;
	КонецЕсли;
	 
	Для Каждого СтрокаДокумента Из СтруктураТаблиц.Основное Цикл
		
		СтатьяДолг = ?(ЗначениеЗаполнено(СтрокаДокумента.Кредит), СтрокаДокумента.Кредит, Справочники.ГрафыБюджета.ПогашениеКредита);
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		Если СтрокаДокумента.ИспользоватьДляНакоплений = Истина Тогда
			ФинЦель = ?(Не ЗначениеЗаполнено(СтрокаДокумента.ФинансоваяЦель), Справочники.ФинансовыеЦели.ОбщиеНакопления, СтрокаДокумента.ФинансоваяЦель);
		Иначе
			ФинЦель = Справочники.ФинансовыеЦели.ПустаяСсылка();
		КонецЕсли;
			
		ВалютаКошелька = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаКошелька), СтрокаДокумента.ВалютаКошелька, ДополнительныеСвойства.ВалютаУчета);
		ВалютаКредита  = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаКредита), СтрокаДокумента.ВалютаКредита, ДополнительныеСвойства.ВалютаУчета);
		
		// Основная сумма долга - расход из кошелька
		ЗаписьНабора1 = ТаблицаНабора.Добавить();
		ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора1.Операция          = СсылкаНаДокумент;
		ЗаписьНабора1.РазделУчета       = СчетДенег;
		ЗаписьНабора1.ПредметУчета      = СтрокаДокумента.Кошелек;
		ЗаписьНабора1.ФинансоваяЦель    = ФинЦель;
		ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
		ЗаписьНабора1.СуммаСписания     = СтрокаДокумента.ВыплаченоКредита;
		ЗаписьНабора1.Валюта            = ВалютаКошелька;
		
		// Основная сумма долга - уменьшение задолженности
		ЗаписьНабора2 = ТаблицаНабора.Добавить();
		ЗаписьНабора2.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора2.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора2.Операция          = СсылкаНаДокумент;
		ЗаписьНабора2.РазделУчета       = ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов;
		ЗаписьНабора2.ПредметУчета      = СтрокаДокумента.Кредит;
		ЗаписьНабора2.ФинансоваяЦель    = ФинЦель;
		ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
		ЗаписьНабора2.СуммаСписания     = СтрокаДокумента.СуммаКредитаВВалютеКредита;
		ЗаписьНабора2.Валюта            = ВалютаКредита;
		
		// Фактические обороты бюджета
		Если ОборотыБюджета <> Неопределено Тогда
			
			ЗаписьНабора = ОборотыБюджета.Добавить();
			ЗаписьНабора.Период           = СтрокаДокумента.Период;
			ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
			ЗаписьНабора.РазделБюджета    = ФинЦель;
			ЗаписьНабора.СтатьяБюджета    = СтатьяДолг;
			ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора.Валюта           = ВалютаКошелька;
			ЗаписьНабора.Кошелек          = СтрокаДокумента.Кошелек;
			ЗаписьНабора.Сумма            = СтрокаДокумента.ВыплаченоКредита;
			ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
			ЗаписьНабора.Примечание       = "Основной долг";
			
			// Если оплата произошла с кредитной карты, автоматически добавляем перевод с кредитки в доступные деньги
			Если СтрокаДокумента.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦель;
				ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.Кошелек;
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
				ЗаписьНабора.Валюта           = ВалютаКошелька;
				ЗаписьНабора.Кошелек          = Неопределено;
				ЗаписьНабора.Сумма            = СтрокаДокумента.ВыплаченоКредита;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				ЗаписьНабора.Примечание       = "Основной долг (кредитная карта)";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ФинЦель) Тогда
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
			
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора2);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
		КонецЕсли; 
		
		// Сумма списания долга
		Если ЗначениеЗаполнено(СтрокаДокумента.СписаноКредита) Тогда
			
			ЗаписьНабора3 = ТаблицаНабора.Добавить();
			ЗаписьНабора3.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора3.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора3.Операция          = СсылкаНаДокумент;
			ЗаписьНабора3.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора3.ПредметУчета      = СтрокаДокумента.СтатьяСписания;
			ЗаписьНабора3.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора3.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора3.СуммаПоступления  = СтрокаДокумента.СписаноКредита;
			ЗаписьНабора3.Валюта            = ВалютаКредита;
			
			ЗаписьНабора4 = ТаблицаНабора.Добавить();
			ЗаписьНабора4.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора4.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора4.Операция          = СсылкаНаДокумент;
			ЗаписьНабора4.РазделУчета       = ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов;
			ЗаписьНабора4.ПредметУчета      = СтрокаДокумента.Кредит;
			ЗаписьНабора4.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора4.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора4.СуммаПоступления  = СтрокаДокумента.СписаноКредита;
			ЗаписьНабора4.Валюта            = ВалютаКредита;
			
			Если ЗначениеЗаполнено(ФинЦель) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора3);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
				
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора4);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
			
		КонецЕсли; 
		
		// Сумма процентов за пользование долгом
		Если ЗначениеЗаполнено(СтрокаДокумента.ВыплаченоПроцентов) Тогда
			
			ЗаписьНабора5 = ТаблицаНабора.Добавить();
			ЗаписьНабора5.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора5.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора5.Операция          = СсылкаНаДокумент;
			ЗаписьНабора5.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора5.ПредметУчета      = СтрокаДокумента.СтатьяРасходовПоПроцентам;
			ЗаписьНабора5.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора5.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора5.СуммаСписания     = СтрокаДокумента.ВыплаченоПроцентов;
			ЗаписьНабора5.Валюта            = ВалютаКошелька;
			
			ЗаписьНабора6 = ТаблицаНабора.Добавить();
			ЗаписьНабора6.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора6.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора6.Операция          = СсылкаНаДокумент;
			ЗаписьНабора6.РазделУчета       = СчетДенег;
			ЗаписьНабора6.ПредметУчета      = СтрокаДокумента.Кошелек;
			ЗаписьНабора6.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора6.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора6.СуммаСписания     = СтрокаДокумента.ВыплаченоПроцентов;
			ЗаписьНабора6.Валюта            = ВалютаКошелька;
			
			Если ЗначениеЗаполнено(ФинЦель) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора5);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
				
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора6);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
			
			// Фактические обороты бюджета
			Если ОборотыБюджета <> Неопределено Тогда
				
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦель;
				ЗаписьНабора.СтатьяБюджета    = СтатьяДолг;
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
				ЗаписьНабора.Валюта           = ВалютаКошелька;
				ЗаписьНабора.Кошелек          = СтрокаДокумента.Кошелек;
				ЗаписьНабора.Сумма            = СтрокаДокумента.ВыплаченоПроцентов;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				ЗаписьНабора.Примечание       = "Проценты";
				
				// Если оплата произошла с кредитной карты, автоматически добавляем перевод с кредитки в доступные деньги
				Если СтрокаДокумента.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦель;
					ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.Кошелек;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаКошелька;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.ВыплаченоПроцентов;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					ЗаписьНабора.Примечание       = "Проценты (кредитная карта)";
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Сумма комиссии за пользование долгом
		Если ЗначениеЗаполнено(СтрокаДокумента.ВыплаченоКомиссии) Тогда
			
			ЗаписьНабора5 = ТаблицаНабора.Добавить();
			ЗаписьНабора5.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора5.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора5.Операция          = СсылкаНаДокумент;
			ЗаписьНабора5.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора5.ПредметУчета      = СтрокаДокумента.СтатьяРасходовПоКомиссии;
			ЗаписьНабора5.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора5.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора5.СуммаСписания     = СтрокаДокумента.ВыплаченоКомиссии;
			ЗаписьНабора5.Валюта            = ВалютаКошелька;
			
			ЗаписьНабора6 = ТаблицаНабора.Добавить();
			ЗаписьНабора6.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора6.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора6.Операция          = СсылкаНаДокумент;
			ЗаписьНабора6.РазделУчета       = СчетДенег;
			ЗаписьНабора6.ПредметУчета      = СтрокаДокумента.Кошелек;
			ЗаписьНабора6.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора6.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора6.СуммаСписания     = СтрокаДокумента.ВыплаченоКомиссии;
			ЗаписьНабора6.Валюта            = ВалютаКошелька;
			
			Если ЗначениеЗаполнено(ФинЦель) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора5);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
				
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора6);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
			
			// Фактические обороты бюджета
			Если ОборотыБюджета <> Неопределено Тогда
				
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦель;
				ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.СтатьяРасходовПоКомиссии), СтрокаДокумента.СтатьяРасходовПоКомиссии, Справочники.СтатьиРасходов.ПрочиеРасходы);
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
				ЗаписьНабора.Валюта           = ВалютаКошелька;
				ЗаписьНабора.Кошелек          = СтрокаДокумента.Кошелек;
				ЗаписьНабора.Сумма            = СтрокаДокумента.ВыплаченоКомиссии;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				ЗаписьНабора.Примечание       = "Комиссия";
				
				// Если оплата произошла с кредитной карты, автоматически добавляем перевод с кредитки в доступные деньги
				Если СтрокаДокумента.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦель;
					ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.Кошелек;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаКошелька;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.ВыплаченоКомиссии;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					ЗаписьНабора.Примечание       = "Комиссия (кредитная карта)";
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли; 
		
		// Если валюта долга отличается от валюты кошелька
		Если ВалютаКошелька <> ВалютаКредита Тогда
			
			// Добавляем строки с обменом валют
			ЗаписьНабора7 = ТаблицаНабора.Добавить();
			ЗаписьНабора7.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора7.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора7.Операция          = СсылкаНаДокумент;
			ЗаписьНабора7.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора7.ПредметУчета      = Справочники.СтатьиДоходов.ОбменВалюты;
			ЗаписьНабора7.ФинансоваяЦель    = ФинЦель;
			ЗаписьНабора7.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Перемещение;
			ЗаписьНабора7.СуммаПоступления  = СтрокаДокумента.СуммаКредитаВВалютеКредита + СтрокаДокумента.СуммаПроцентовВВалютеКредита;
			ЗаписьНабора7.Валюта            = ВалютаКредита;
			
			ЗаписьНабора8 = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора8, ЗаписьНабора7);
			ЗаписьНабора8.ПредметУчета      = Справочники.СтатьиРасходов.ОбменВалюты;
			ЗаписьНабора8.СуммаПоступления  = 0;
			ЗаписьНабора8.СуммаСписания     = СтрокаДокумента.ВыплаченоКредита + СтрокаДокумента.ВыплаченоПроцентов;
			ЗаписьНабора8.Валюта            = ВалютаКошелька;
			
			Если ЗначениеЗаполнено(ФинЦель) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора7);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
				
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора8);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
		
		КонецЕсли; 
		
	КонецЦикла; 
	
	// Дополнительные расходы по возврату долга
	Для Каждого СтрокаДокумента Из СтруктураТаблиц.ДополнительныеРасходы Цикл
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		ФинЦель = ?(ЗначениеЗаполнено(СтрокаДокумента.ФинансоваяЦель) И СтрокаДокумента.ФинансоваяЦель <> Справочники.ФинансовыеЦели.ОбщиеНакопления, 
			СтрокаДокумента.ФинансоваяЦель, Неопределено);
		ВалютаКошелька = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаКошелька), СтрокаДокумента.ВалютаКошелька, ДополнительныеСвойства.ВалютаУчета);
			
		ЗаписьНабора1 = ТаблицаНабора.Добавить();
		ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора1.Операция          = СсылкаНаДокумент;
		ЗаписьНабора1.РазделУчета       = СчетДенег;
		ЗаписьНабора1.ПредметУчета      = СтрокаДокумента.КошелекРасхода;
		ЗаписьНабора1.ФинансоваяЦель    = Финцель;
		ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
		ЗаписьНабора1.СуммаСписания     = СтрокаДокумента.СуммаРасхода;
		ЗаписьНабора1.Валюта            = ВалютаКошелька;
		
		ЗаписьНабора2 = ТаблицаНабора.Добавить();
		ЗаписьНабора2.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора2.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора2.Операция          = СсылкаНаДокумент;
		ЗаписьНабора2.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
		ЗаписьНабора2.ПредметУчета      = СтрокаДокумента.СтатьяРасхода;
		ЗаписьНабора2.ФинансоваяЦель    = Финцель;
		ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Списание;
		ЗаписьНабора2.СуммаСписания     = СтрокаДокумента.СуммаРасхода;
		ЗаписьНабора2.Валюта            = ВалютаКошелька;
		
		Если ЗначениеЗаполнено(ФинЦель) Тогда
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
			
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора2);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
		КонецЕсли; 
		
		// Фактические обороты бюджета
		Если ОборотыБюджета <> Неопределено Тогда
			
			ЗаписьНабора = ОборотыБюджета.Добавить();
			ЗаписьНабора.Период           = СтрокаДокумента.Период;
			ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
			ЗаписьНабора.РазделБюджета    = ФинЦель;
			ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.СтатьяРасхода), СтрокаДокумента.СтатьяРасхода, Справочники.СтатьиРасходов.ПрочиеРасходы);
			ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора.Валюта           = ВалютаКошелька;
			ЗаписьНабора.Кошелек          = СтрокаДокумента.КошелекРасхода;
			ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаРасхода;
			ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
			ЗаписьНабора.Примечание       = "Доп.расходы";
			
			// Если оплата произошла с кредитной карты, автоматически добавляем перевод с кредитки в доступные деньги
			Если СтрокаДокумента.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦель;
				ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.КошелекРасхода;
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
				ЗаписьНабора.Валюта           = ВалютаКошелька;
				ЗаписьНабора.Кошелек          = Неопределено;
				ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаРасхода;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				ЗаписьНабора.Примечание       = "Доп.расходы (кредитная карта)";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; 

	ТаблицаНабора.Свернуть("Дата, ЭтоШаблон, Операция, РазделУчета, ПредметУчета, ФинансоваяЦель, ТипПоказателя, Валюта", "СуммаПоступления, СуммаСписания");
	
	СтруктураТаблиц.ОбъектыОперации = ТаблицаНабора;
	
	Если ОборотыБюджета <> Неопределено Тогда
		ОборотыБюджета.Свернуть("Период,Регистратор,РазделБюджета,СтатьяБюджета,ТипПоказателя,Валюта,Кошелек,Комментарий,Примечание", "Сумма");
		СтруктураТаблиц.Вставить("ОборотыБюджета", ОборотыБюджета);
	КонецЕсли;
	
	Возврат СтруктураТаблиц;

КонецФункции

#КонецОбласти


#КонецЕсли