&НаКлиенте
Перем ДополнительныеПараметрыНаКлиенте Экспорт;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Общий функционал перед записью документов
	ОбслуживаниеДокументовКлиент.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записана операция", Новый Структура("Дата, ВидДокумента, Ссылка, ЭтоШаблон, ВладелецФормы", 
			Объект.Дата, "ВводИзменениеОстатка", Объект.Ссылка, Объект.ЭтоШаблон, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Общий функционал перед записью документов
	ОбслуживаниеДокументовКлиент.ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьТекущимиОстатками();
	
КонецПроцедуры

&НаКлиенте
Процедура КошелекПриИзменении(Элемент)
	
	КошелекПриИзмененииСервер();

КонецПроцедуры

&НаКлиенте
Процедура ФинансоваяЦельПриИзменении(Элемент)
	
	ФинцельПриИзмененииСервер();

КонецПроцедуры

&НаКлиенте
Процедура СубконтоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий", Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНовогоОстатка1ПриИзменении(Элемент)
	
	НовыйОстатокКошелька   = ТекущийОстаток + Объект.СуммаНовогоОстатка - ТекущийОстатокФинцели;
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ВалютаУчета = Константы.ВалютаУчета.Получить();
	
	Если Не ЗначениеЗаполнено(Объект.ОбъектУчета) Тогда
		Объект.ОбъектУчета = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
	КонецЕсли;
	
	ВалютаОперации = ?(ЗначениеЗаполнено(Объект.ОбъектУчета), Объект.ОбъектУчета.Валюта, ВалютаУчета);
	
	ЗаполнитьТекущимиОстатками();
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Настройка внешнего вида
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЭлементыФормыПоСостояниюОперации(ЭтотОбъект);
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()

	ЭтоДолг       = ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.Долги");
	ЭтоКошелек    = ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.КошелькиИСчета");
	ЭтоНакопление = ЭтоКошелек И Объект.ОбъектУчета.ИспользоватьДляНакоплений;
	ВозможенОтрицательныйОстаток = ЭтоКошелек И (Объект.ОбъектУчета.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаДебетовая
		 		ИЛИ Объект.ОбъектУчета.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная
				ИЛИ Объект.ОбъектУчета.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаУниверсальная
				ИЛИ Объект.ОбъектУчета.ТипСчета = Перечисления.ТипыСчетов.БанковскийСчет);
	
	ТекстПодсказкиПоОстатку = "";
	//Элементы.ГруппаФинансоваяЦельОстаток.Видимость = ЭтоНакопление;
	
	Если ЭтоДолг Тогда
		
		Элементы.ГруппаСтраницОстатков.ТекущаяСтраница = Элементы.СтраницаОстатокДолга;
		ТекстПодсказкиПоОстатку = НСтр("ru = 'Положительный остаток - долг контакта нам, отрицательный - наш долг контакту'") ;
		
	ИначеЕсли ЭтоНакопление Тогда
		
		Элементы.ГруппаСтраницОстатков.ТекущаяСтраница = Элементы.СтраницаОстатокНакоплений;
		
	Иначе
		
		Элементы.ГруппаСтраницОстатков.ТекущаяСтраница = Элементы.СтраницаОстатокПрочий;
		Если ВозможенОтрицательныйОстаток Тогда
			ТекстПодсказкиПоОстатку = НСтр("ru = 'Положительный остаток - деньги в наличии, отрицательный - долг банку'") ;
		КонецЕсли;
		
	КонецЕсли;
	
	РаботаСФормамиДокументовКлиентСервер.ОбновитьСостояниеОперации(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура КошелекПриИзмененииСервер()

	ВалютаОперации = ?(ЗначениеЗаполнено(Объект.ОбъектУчета), Объект.ОбъектУчета.Валюта, ВалютаУчета);
	ЭтоНакопления = ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.КошелькиИСчета") И Объект.ОбъектУчета.ИспользоватьДляНакоплений;
	
	Если ЭтоНакопления Тогда
		Объект.ФинансоваяЦель = ФинансоваяЦельКошелька(Объект.ОбъектУчета);
	КонецЕсли; 
	
	ЗаполнитьТекущимиОстатками();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ФинцельПриИзмененииСервер()

	ЗаполнитьТекущимиОстатками();
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущимиОстатками()

	ТекущийОстаток          = 0;
	ТекущийОстатокПроцентов = 0;
	ТекущийОстатокФинцели   = 0;
	НовыйОстатокКошелька    = 0;
	
	ЭтоНакопления           = Ложь;
	ОбновлятьСуммы          = Объект.Ссылка.Пустая();
	
	Если Не ЗначениеЗаполнено(Объект.ОбъектУчета) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.Имущество") Тогда
		Счет = ПланыСчетов.РазделыУчета.Имущество;
	ИначеЕсли ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.Долги") Тогда
		Счет = ПланыСчетов.РазделыУчета.Долги;
	Иначе
		Счет = ПланыСчетов.РазделыУчета.Деньги;
		ЭтоНакопления = ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.КошелькиИСчета") И Объект.ОбъектУчета.ИспользоватьДляНакоплений;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Субконто",        Объект.ОбъектУчета);
	Запрос.УстановитьПараметр("ФинансоваяЦель",  Объект.ФинансоваяЦель);
	Запрос.УстановитьПараметр("Счет",            Счет);
	Запрос.УстановитьПараметр("Период",          ?(Объект.Проведен И Не Модифицированность, 
											Объект.Ссылка.МоментВремени(), КонецДня(ТекущаяДатаСеанса())));
												
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	жОстатки.Счет КАК Счет,
	|	жОстатки.ВалютнаяСуммаНачальныйОстаток КАК Остаток
	|ИЗ
	|	РегистрБухгалтерии.ЖурналОпераций.ОстаткиИОбороты(&Период, &Период, Период, ДвиженияИГраницыПериода, Счет В ИЕРАРХИИ (&Счет), , Субконто1 = &Субконто) КАК жОстатки
	|
	|";
	
	Если ЭтоНакопления Тогда
		
		Запрос.Текст = 	Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////
		|" + 
		"ВЫБРАТЬ
		|	жОстатки.Счет КАК Счет,
		|	жОстатки.ВалютнаяСуммаНачальныйОстаток КАК Остаток
		|ИЗ
		|	РегистрБухгалтерии.ЖурналОпераций.ОстаткиИОбороты(&Период, &Период, Период, ДвиженияИГраницыПериода, Счет В ИЕРАРХИИ (&Счет), , Субконто1 = &Субконто И Субконто2 = &ФинансоваяЦель) КАК жОстатки
		|
		|";
		
	КонецЕсли;
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = ПакетРезультатов[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Счет = ПланыСчетов.РазделыУчета.ПроцентыПоДолгам Тогда
			ТекущийОстатокПроцентов = ?(Выборка.Остаток = NULL, 0, Выборка.Остаток);
		ИначеЕсли ЗначениеЗаполнено(Выборка.Счет) Тогда
			ТекущийОстаток = ?(Выборка.Остаток = NULL, 0, Выборка.Остаток);
		КонецЕсли; 
	КонецЦикла; 
	
	Если ЭтоНакопления Тогда
		Выборка = ПакетРезультатов[1].Выбрать();
		Если Выборка.Следующий() Тогда
			ТекущийОстатокФинцели = ?(Выборка.Остаток = NULL, 0, Выборка.Остаток);
		КонецЕсли;
	КонецЕсли;
	
	Если ОбновлятьСуммы Тогда
		Объект.СуммаНовогоОстаткаПроцентов = ТекущийОстатокПроцентов;
		Объект.СуммаНовогоОстатка          = ?(ЭтоНакопления, ТекущийОстатокФинцели, ТекущийОстаток);
	КонецЕсли;
	
	НовыйОстатокКошелька   = ТекущийОстаток + Объект.СуммаНовогоОстатка - ТекущийОстатокФинцели;
	
	ОбновитьНадписиТекущихОстатков();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписиТекущихОстатков()

	ЭтоНакопления = ТипЗнч(Объект.ОбъектУчета) = Тип("СправочникСсылка.КошелькиИСчета") И Объект.ОбъектУчета.ИспользоватьДляНакоплений;
	
	Если Объект.Проведен И Не Модифицированность Тогда
		Если ЭтоНакопления Тогда
			ТекстОстатка    = НСтр("ru='Всего до изменения: %1 %2'");
		Иначе
			ТекстОстатка    = НСтр("ru='Остаток до изменения: %1 %2'");
		КонецЕсли;
	Иначе
		ТекстОстатка = НСтр("ru='Текущий остаток, всего: %1 %2'");
	КонецЕсли;
	
	ТекстОстатка = СтрШаблон(ТекстОстатка, ТекущийОстаток, ВалютаОперации);
	Элементы.ТекстОстатка.Заголовок  = ТекстОстатка;
	Элементы.ТекстОстатка.ЦветТекста = ?(ТекущийОстаток < 0, ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ИнформационнаяНадписьЦвет);
	
	Если ЭтоНакопления Тогда
		ТекстНакоплений = НСтр("ru='по фин.цели: %1 %2'");
		ТекстНакоплений = СтрШаблон(ТекстНакоплений, ТекущийОстатокФинцели, ВалютаОперации);
		Элементы.ТекстОстаткаФинцели.Заголовок  = ТекстНакоплений;
		Элементы.ТекстОстаткаФинцели.ЦветТекста = ?(ТекущийОстатокФинцели < 0, ЦветаСтиля.ЦветОтрицательногоЧисла, ЦветаСтиля.ИнформационнаяНадписьЦвет);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ФинансоваяЦельКошелька(Кошелек)

	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кошелек", Кошелек);
	Запрос.УстановитьПараметр("Период", КонецДня(ТекущаяДатаКлиентСервер()));
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	ЖурналОперацийОстатки.Субконто2,
	|	ЖурналОперацийОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.ЖурналОпераций.Остатки(&Период, Счет = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления), , Субконто1 = &Кошелек) КАК ЖурналОперацийОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВалютнаяСуммаОстаток";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Субконто2;
	КонецЕсли;
	Возврат ?(ЗначениеЗаполнено(Результат), Результат, Справочники.ФинансовыеЦели.ОбщиеНакопления);

КонецФункции


&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяДатаКлиентСервер()
	#Если Сервер Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли 
КонецФункции 

#КонецОбласти


