&НаКлиенте
Перем ДополнительныеПараметрыНаКлиенте Экспорт;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	#Область ПрикрепленныеФайлы
	МедиаФайлы = ПрикрепленныеФайлыСервер.ПрочитатьСписокФайлов(Объект.Ссылка);
	#КонецОбласти
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыСервер.ОбработатьИЗаписатьДанныеМультимедиа(МедиаФайлы, ТекущийОбъект.Ссылка);
	#КонецОбласти 	
	
	ЗаполнитьДобавленныеКолонки();
	ПараметрыСеанса.ДатаПоследнейОперации = ТекущийОбъект.Дата;
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обслуживание плановых операций
	Документы.Перемещение.ОбновитьИтоговыеСуммыДокумента(ТекущийОбъект);
	ПлановыеОперации.ПроверкаПлановПередЗаписьюДокумента(ТекущийОбъект, ПараметрыЗаписи, ЭтотОбъект);
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записана операция", Новый Структура("Дата, ВидДокумента, Ссылка, ЭтоШаблон, ВладелецФормы", 
		Объект.Дата, "Перемещение", Объект.Ссылка, Объект.ЭтоШаблон,
		?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	
	// Обновляем остатки в кошельках
	ОбновитьОстаткиДенег();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записан элемент справочника" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ИмяСправочника = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ИмяСправочника", ИмяСправочника) И ВРЕГ(ИмяСправочника) = ВРЕГ("КошелькиИСчета")
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ЗначениеЗаполнено(ФормаВладельца)
			И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			Объект.КошелекКуда = Параметр.Ссылка;
			ПриИзмененииКошелькаКудаСервер();
		ИначеЕсли Параметр.Свойство("ИмяСправочника", ИмяСправочника) И ВРЕГ(ИмяСправочника) = ВРЕГ("ФинансовыеЦели")
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ЗначениеЗаполнено(ФормаВладельца)
			И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			Объект.ФинансоваяЦельКуда = Параметр.Ссылка;
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = "Записана операция" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор И Параметр.ЭтоШаблон <> Объект.ЭтоШаблон Тогда
			ЗаполнитьДанныеПоШаблону(Параметр.Ссылка);
		КонецЕсли;
	КонецЕсли;
		
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтаФорма, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ДобавитьФайлВСписокФормы(ЭтотОбъект, Параметр); 
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Обслуживание плановых операций
	ПлановыеОперацииКлиент.ПередЗаписьюДокумента(ЭтаФорма, Отказ, ПараметрыЗаписи);
	// Общий функционал перед записью документов
	ОбслуживаниеДокументовКлиент.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Общий функционал перед закрытием форм документов
	ОбслуживаниеДокументовКлиент.ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы И Открыта() Тогда
		Закрыть(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЗаголовкиКомандФормы(ЭтотОбъект);
КонецПроцедуры

// Обслуживание плановых операций
&НаКлиенте
Процедура ИзменитьРасписание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПлановыеОперацииКлиент.ОткрытьРедакторРасписания(ЭтаФорма);
	
КонецПроцедуры

// Обслуживание плановых операций
&НаКлиенте
Процедура ИнформацияОШаблонеНажатие(Элемент, СтандартнаяОбработка)
	
	ПлановыеОперацииКлиент.ИнформацияОШаблонеНажатие(ЭтаФорма, Элемент, СтандартнаяОбработка, "Перемещение");
	
КонецПроцедуры

&НаКлиенте
Процедура КошелекОткудаПриИзменении(Элемент)
	
	ПриИзмененииКошелькаОткудаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансоваяЦельОткудаПриИзменении(Элемент)
	ОбновитьОстаткиДенег("Откуда");
КонецПроцедуры

&НаКлиенте
Процедура КошелекКудаПриИзменении(Элемент)
	
	ПриИзмененииКошелькаКудаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансоваяЦельКудаПриИзменении(Элемент)
	ОбновитьОстаткиДенег("Куда");
КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура Подключаемый_ПриИзмененииАналитикиВШапке(Элемент)
	
	АналитикаСтатейКлиент.ПриИзмененииАналитикиВШапке(ЭтаФорма, Элемент);
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРасходы

&НаКлиенте
Процедура ДополнительныеРасходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ДанныеСтроки = Элементы.ДополнительныеРасходы.ТекущиеДанные;
		ДанныеСтроки.КошелекРасхода     = Объект.КошелекОткуда;
		ДанныеСтроки.ВидКошелькаРасхода = "Кошелек списания";
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПриИзменении(Элемент)
	
	ТекстЗаголовка = НСтр("ru = 'Дополнительные расходы (%1)'");
	ИтогДопРасходов = Объект.ДополнительныеРасходы.Итог("СуммаРасхода");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, 
		Формат(ИтогДопРасходов, "ЧДЦ=2; ЧН=0; ЧГ=") + ?(ЗначениеЗаполнено(Объект.ВалютаОперации) И ИтогДопРасходов <> 0, " " + Объект.ВалютаОперации, ""));
	Элементы.ГруппаСтраницаДополнительныеРасходы.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыСтатьяРасходаПриИзменении(Элемент)
	
	СтатьяПриИзмененииСервер(Элементы.ДополнительныеРасходы.ТекущаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыСтатьяРасходаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	// Обслуживание аналитики статей:
	ТекущиеДанные = Элементы.ДополнительныеРасходы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И НЕ ЗначениеЗаполнено(ТекущиеДанные.СтатьяРасхода) Тогда
		СтатьяПриИзмененииСервер(Элементы.ДополнительныеРасходы.ТекущаяСтрока);
	КонецЕсли;
	Если НЕ АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
		АналитикаСтатейКлиент.ПриОкончанииРедактированияСтрокиТабличнойЧасти(ЭтаФорма, Истина, "ДополнительныеРасходы", ТекущиеДанные);
	Иначе
		УправлениеРеквизитамиАналитики();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПослеУдаления(Элемент)
	
	// Обслуживание аналитики статей:
	Если НЕ АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
		АналитикаСтатейКлиент.ПослеУдаленияСтрокиТабличнойЧасти(ЭтаФорма, Истина, "ДополнительныеРасходы");
	Иначе
		УправлениеРеквизитамиАналитики();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыВидКошелькаРасходаПриИзменении(Элемент)
	
	ДанныеСтроки = Элементы.ДополнительныеРасходы.ТекущиеДанные;
	ДанныеСтроки.ВидКошелькаРасхода = ?(ДанныеСтроки.ВидКошелькаРасхода = "", "Кошелек списания", ДанныеСтроки.ВидКошелькаРасхода);
	Если ДанныеСтроки.ВидКошелькаРасхода = "Кошелек зачисления" Тогда
		ДанныеСтроки.КошелекРасхода     = Объект.КошелекКуда;
	Иначе
		ДанныеСтроки.КошелекРасхода     = Объект.КошелекОткуда;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыКошелекРасходаПриИзменении(Элемент)
	
	ДанныеСтроки = Элементы.ДополнительныеРасходы.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.КошелекРасхода) Тогда
		ДанныеСтроки.КошелекРасхода = Объект.КошелекОткуда;
	КонецЕсли;
	Если ДанныеСтроки.КошелекРасхода     = Объект.КошелекКуда Тогда
		ДанныеСтроки.ВидКошелькаРасхода = "Кошелек зачисления";
	ИначеЕсли ДанныеСтроки.КошелекРасхода     = Объект.КошелекОткуда Тогда
		ДанныеСтроки.ВидКошелькаРасхода = "Кошелек списания";
	Иначе
		ДанныеСтроки.ВидКошелькаРасхода = "";
	КонецЕсли;
	
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеФайловОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаПредставлениеФайлов(ЭтотОбъект, СтандартнаяОбработка, НавигационнаяСсылкаФорматированнойСтроки);
КонецПроцедуры

#КонецОбласти 

#КонецОбласти


#Область ОбработчикиКомандФормы

// Обслуживание аналитики статей:
&НаКлиенте
Процедура Подключаемый_НастройкаКолонокАналитики(Команда)

	АналитикаСтатейКлиент.ИзменитьНастройкиКолонокАналитики(ЭтаФорма, Истина, "Перемещение");

КонецПроцедуры


// Обслуживание аналитики статей:
&НаКлиенте
Процедура НастройкаКолонокАналитикиЗавершение(НастройкиИзменены) Экспорт

	Если НастройкиИзменены Тогда
		УправлениеРеквизитамиАналитики(Истина, Истина);
	КонецЕсли; 

КонецПроцедуры
 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Подготовка реквизитов формы
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	УстановитьОтборДляКошельковРасхода();
	
	// Обновляем остатки в кошельках
	ОбновитьОстаткиДенег();
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПриСозданииНаСервере(ЭтаФорма, "", "", "СтатьяРасхода", "АналитикаСтатьи", "ДополнительныеРасходыКоманднаяПанель");
	
	// Заполнение дополнительных колонок и реквизитов
	ЗаполнитьДобавленныеКолонки();
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Обслуживание плановых операций
	РаботаСФормамиДокументов.ПодготовитьФормуНаСервереПоРаботеСШаблонами(ЭтаФорма);
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеМедиафайлов(ЭтотОбъект);
	#КонецОбласти	
	
	// Настройка внешнего вида
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонки()

	// Обслуживание аналитики статей:
	АналитикаСтатей.ЗаполнитьРеквизитыАналитикой(ЭтаФорма);
	
	Для Каждого СтрокаРасхода Из Объект.ДополнительныеРасходы Цикл
		Если СтрокаРасхода.КошелекРасхода = Объект.КошелекОткуда Тогда
			СтрокаРасхода.ВидКошелькаРасхода = "Кошелек списания";
		ИначеЕсли СтрокаРасхода.КошелекРасхода = Объект.КошелекКуда Тогда
			СтрокаРасхода.ВидКошелькаРасхода = "Кошелек зачисления";
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()

	// Обслуживание плановых операций
	ПлановыеОперацииКлиентСервер.ОбновитьИнформациюОСвязиОперацииСРасписанием(ЭтотОбъект);
	РаботаСФормамиДокументовКлиентСервер.ОбновитьСостояниеОперации(ЭтотОбъект);
	
	// Обслуживание аналитики статей:
	УправлениеРеквизитамиАналитики();
	
	ЭтоНоваяОперация = НЕ Объект.ЭтоШаблон И Объект.Ссылка.Пустая();
	
	ТекстКомиссииОткуда = "";
	ТекстКомиссииКуда   = "";
	
	ОстатокВКошелькеКуда   = РазделыУчета.ПолучитьОстатокПоСубконто(ПланыСчетов.РазделыУчета.Деньги, Объект.КошелекКуда);
	ОстатокВКошелькеОткуда = РазделыУчета.ПолучитьОстатокПоСубконто(ПланыСчетов.РазделыУчета.Деньги, Объект.КошелекОткуда);
	
	ТекстЗаголовка = НСтр("ru = 'Дополнительные расходы (%1)'");
	ИтогДопРасходов = Объект.ДополнительныеРасходы.Итог("СуммаРасхода");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, 
		Формат(ИтогДопРасходов, "ЧДЦ=2; ЧН=0; ЧГ=") + ?(ЗначениеЗаполнено(Объект.ВалютаОперации) И ИтогДопРасходов <> 0, " " + Объект.ВалютаОперации, ""));
	Элементы.ГруппаСтраницаДополнительныеРасходы.Заголовок = ТекстЗаголовка;
	
	Элементы.ФинансоваяЦельОткуда.Видимость = ЗначениеЗаполнено(Объект.КошелекОткуда) И Объект.КошелекОткуда.ИспользоватьДляНакоплений;
	Элементы.ФинансоваяЦельКуда.Видимость   = ЗначениеЗаполнено(Объект.КошелекКуда) И Объект.КошелекКуда.ИспользоватьДляНакоплений;
	ВидимостьФинансовойЦели = Элементы.ФинансоваяЦельОткуда.Видимость 
		ИЛИ Элементы.ФинансоваяЦельКуда.Видимость;
		
	Элементы.ДополнительныеРасходыКошелекРасхода.СписокВыбора.Очистить();
	Если ЗначениеЗаполнено(Объект.КошелекОткуда) Тогда
		Элементы.ДополнительныеРасходыКошелекРасхода.СписокВыбора.Добавить(Объект.КошелекОткуда);
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.КошелекОткуда) Тогда
		Элементы.ДополнительныеРасходыКошелекРасхода.СписокВыбора.Добавить(Объект.КошелекКуда);
	КонецЕсли; 
	
	МассивКошельков = Новый Массив;
	Если ЗначениеЗаполнено(Объект.КошелекОткуда) Тогда
		МассивКошельков.Добавить(Объект.КошелекОткуда);
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.КошелекКуда) Тогда
		МассивКошельков.Добавить(Объект.КошелекКуда);
	КонецЕсли; 
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивКошельков)));
	Элементы.ДополнительныеРасходыКошелекРасхода.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЭлементыФормыПоСостояниюОперации(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДляКошельковРасхода()

	МассивОтбора =  Новый Массив;
	Если ЗначениеЗаполнено(Объект.КошелекКуда) Тогда
		МассивОтбора.Добавить(Объект.КошелекКуда);
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.КошелекОткуда) Тогда
		МассивОтбора.Добавить(Объект.КошелекОткуда);
	КонецЕсли; 
	
	МассивКошельковДляОтбора = Новый ФиксированныйМассив(МассивОтбора);
	ПараметрДляПоля = Новый ПараметрВыбора("Отбор.Ссылка", МассивКошельковДляОтбора);
	
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(ПараметрДляПоля);
	
	Элементы.ДополнительныеРасходыКошелекРасхода.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

КонецПроцедуры

// Обслуживание аналитики статей:
&НаСервере
Процедура УправлениеРеквизитамиАналитики(ИспользоватьЗначенияПоУмолчанию = Ложь, ПотеряДанныхРазрешена = Ложь)

	АналитикаСтатей.УправлениеФормой(ЭтаФорма, ИспользоватьЗначенияПоУмолчанию, ПотеряДанныхРазрешена);

КонецПроцедуры
 
// Обслуживание аналитики статей:
&НаСервере
Процедура СтатьяПриИзмененииСервер(ИДСтроки)

	СтрокаДокумента = Объект.ДополнительныеРасходы.НайтиПоИдентификатору(ИДСтроки);
	Если СтрокаДокумента <> Неопределено Тогда
		АналитикаСтатей.ПриИзмененииСтатьиВТабличнойЧасти(ЭтаФорма, СтрокаДокумента.СтатьяРасхода, "ДополнительныеРасходы", ИДСтроки);
	КонецЕсли; 

КонецПроцедуры
 
// Обслуживание плановых операций
&НаСервере
Процедура ЗаполнитьДанныеПоШаблону(СсылкаНаШаблон)
	
	РаботаСФормамиДокументов.ОбновитьФормуОперацииПоШаблону(ЭтотОбъект, СсылкаНаШаблон);
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПриСозданииНаСервере(ЭтаФорма, "", "", "СтатьяРасхода", "АналитикаСтатьи", "ДополнительныеРасходыКоманднаяПанель");
	
	// Заполнение дополнительных колонок и реквизитов
	ЗаполнитьДобавленныеКолонки();
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Настройка внешнего вида
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКошелькаКудаСервер()

	УстановитьОтборДляКошельковРасхода();
	Для Каждого СтрокаРасхода Из Объект.ДополнительныеРасходы Цикл
		Если СтрокаРасхода.ВидКошелькаРасхода = "Кошелек зачисления" Тогда
			СтрокаРасхода.КошелекРасхода = Объект.КошелекКуда;
		КонецЕсли; 
	КонецЦикла; 
	
	УправлениеФормой();
	ОбновитьОстаткиДенег("Куда");

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКошелькаОткудаСервер()

	ПрежнийКошелекКуда = Объект.КошелекКуда;
	
	Если ЗначениеЗаполнено(Объект.КошелекОткуда) Тогда
		Объект.ВалютаОперации = Объект.КошелекОткуда.Валюта;
	Иначе
		Объект.ВалютаОперации = Неопределено;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.КошелекКуда) И Объект.КошелекКуда.Валюта <> Объект.ВалютаОперации Тогда
		Объект.КошелекКуда = Неопределено;
	КонецЕсли; 
	
	Для Каждого СтрокаРасхода Из Объект.ДополнительныеРасходы Цикл
		Если СтрокаРасхода.ВидКошелькаРасхода = "Кошелек списания" Тогда
			СтрокаРасхода.КошелекРасхода = Объект.КошелекОткуда;
		КонецЕсли; 
	КонецЦикла; 
	
	УстановитьОтборДляКошельковРасхода();
	УправлениеФормой();
	ОбновитьОстаткиДенег("Откуда");

КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиДенег(Сторона = "")

	Если Сторона = "" Или Сторона = "Откуда" Тогда
		РаботаСФормамиДокументов.ОбновитьОстатокПоОбъектуУчета(ЭтотОбъект, "НадписьОстатокКошелекОткуда", 
				ПланыСчетов.РазделыУчета.Деньги, Объект.КошелекОткуда, , Объект.ФинансоваяЦельОткуда, "НадписьОстатокФинцелиКошелекОткуда");
	КонецЕсли; 
	Если Сторона = "" Или Сторона = "Куда" Тогда
		РаботаСФормамиДокументов.ОбновитьОстатокПоОбъектуУчета(ЭтотОбъект, "НадписьОстатокКошелекКуда", 
				ПланыСчетов.РазделыУчета.Деньги, Объект.КошелекКуда, , Объект.ФинансоваяЦельКуда, "НадписьОстатокФинцелиКошелекКуда");
	КонецЕсли; 

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства


#КонецОбласти


