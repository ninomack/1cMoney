#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ОбщегоНазначенияДеньги.ЗаполнитьОбъектПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
	Иначе
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли; 
	
	// Проверяем реквизиты нового документа в соответствии с настройками пользователя
	ОбслуживаниеДокументов.ПроверитьЗаполнениеНовогоДокумента(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Долг) И НЕ ЗначениеЗаполнено(Контакт) Тогда
		Контакт = Долг.Контакт;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Долг) Тогда
		ВалютаДолга = Долг.Валюта;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Кошелек) Тогда
		ВалютаПолучено = Кошелек.Валюта;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	// Общий функционал документов:
	ОбщегоНазначенияДеньги.ОбработкаСобытияПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ЭтоШаблон Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Кошелек");
		МассивНепроверяемыхРеквизитов.Добавить("Долг");
	КонецЕсли; 
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если ЗначениеЗаполнено(Долг) И Долг.Контакт <> Контакт Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Указанный заем не соответствует контакту. Выберите другой заем или контакт.'"), 
		ЭтотОбъект, "Долг", , Отказ);
	КонецЕсли;
	
	Если СуммаСписания <> 0 Тогда
		ПроверяемыеРеквизиты.Добавить("СтатьяСписания");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Проверяем/заполняем итоговые и информационные реквизиты
	Документы.НамВернулиДолг.ОбновитьИтоговыеСуммыДокумента(ЭтотОбъект);
	
	Если ЭтоШаблон Тогда
		Проведен = Ложь;
		Если РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Заполняем дополнительные реквизиты информацией, необходимой для формирования записей в регистры
	Документы.НамВернулиДолг.ПроверитьДополнительныеСвойстваОперации(ЭтотОбъект, ДополнительныеСвойства, Истина);
	ОбслуживаниеДокументов.ПриЗаписиОбъектаДокумента(ЭтотОбъект);
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ОбменДанными.Загрузка ИЛИ ЭтоШаблон Тогда
		Возврат;
	КонецЕсли; 
	
	Документы.НамВернулиДолг.СформироватьДвиженияДокумента(Ссылка, Движения, ДополнительныеСвойства);
	ПлановыеОперации.ПроверитьОборотыПлановойОоперацииПриПроведении(ЭтотОбъект);
	
	Движения.ЖурналОпераций.Записывать            = Истина;
	Движения.ФактическиеОборотыБюджета.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.МыДалиВДолг") Тогда
		
		Контакт        = ДанныеЗаполнения.Контакт;
		Долг           = ДанныеЗаполнения.Долг;
		Кошелек        = ДанныеЗаполнения.Кошелек;
		ВалютаПолучено = Кошелек.Валюта;
		ВалютаДолга    = Долг.Валюта;
		
		ОстатокЗадолженности = РазделыУчета.ПолучитьОстатокПоСубконто(ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов, Долг, КонецДня(ТекущаяДатаСеанса()));
		СуммаВозвратаДолга = ОстатокЗадолженности;
		ВалютаУчета = Константы.ВалютаУчета.Получить();
		Если ВалютаПолучено = ВалютаДолга Тогда
			СуммаПолучено = СуммаВозвратаДолга;
		Иначе
			Если ВалютаПолучено = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(ВалютаПолучено) Тогда
				КурсВыдано      = 1;
				КратностьВыдано = 1;
			Иначе
				КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаПолучено, Дата, ВалютаУчета);
				КурсВыдано      = КурсИКратность.Курс;
				КратностьВыдано = КурсИКратность.Кратность;
			КонецЕсли; 
			Если ВалютаДолга = ВалютаУчета ИЛИ НЕ ЗначениеЗаполнено(ВалютаДолга) Тогда
				КурсЗайма      = 1;
				КратностьЗайма = 1;
			Иначе
				КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДолга, Дата, ВалютаУчета);
				КурсЗайма      = КурсИКратность.Курс;
				КратностьЗайма = КурсИКратность.Кратность;
			КонецЕсли; 
			СуммаПолучено = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(СуммаВозвратаДолга,
				 ВалютаДолга, ВалютаПолучено, КурсЗайма, КурсВыдано, КратностьЗайма, КратностьВыдано);
		КонецЕсли; 
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти	


#КонецЕсли
