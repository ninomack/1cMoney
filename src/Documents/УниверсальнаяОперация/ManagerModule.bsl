#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс

// Формирует и записывает движения в регистры учета
//
//Параметры:
//	СсылкаНаДокумент       - ДокументСсылка.УниверсальнаяОперация - регистратор движений
//	ДвиженияДокумента      - КоллекцияДвижений или иная коллекция - наборы записей регистров учета
//	ДополнительныеСвойства - Структура - сордержит дополнительные свойства документа
//
Процедура СформироватьДвиженияДокумента(СсылкаНаДокумент, ДвиженияДокумента, ДополнительныеСвойства) Экспорт
	
	ТипСтатьяРасходов = Тип("СправочникСсылка.СтатьиРасходов");
	
	// Получаем таблицу для формирования движений
	Если ТипЗнч(ДополнительныеСвойства) <> Тип("Структура") Или Не ДополнительныеСвойства.Свойство("ТаблицыДокумента") Тогда
		ПроверитьДополнительныеСвойстваОперации(СсылкаНаДокумент, ДополнительныеСвойства, Истина);
	КонецЕсли;
	ТаблицыДокумента = ДополнительныеСвойства.ТаблицыДокумента;
	
	Для Каждого СтрокаДокумента Из ТаблицыДокумента.СводТаблиц Цикл
		
		РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
			СтрокаДокумента.РазделУчетаКуда, СтрокаДокумента.ОбъектУчетаКуда, СтрокаДокумента.Субконто2Куда, СтрокаДокумента.СуммаКуда, СтрокаДокумента.ВалютаКуда,
			СтрокаДокумента.РазделУчетаОткуда, СтрокаДокумента.ОбъектУчетаОткуда, СтрокаДокумента.Субконто2Откуда, СтрокаДокумента.СуммаОткуда, СтрокаДокумента.ВалютаОткуда,
			СтрокаДокумента.Комментарий);
			
		Если СтрокаДокумента.ИмяТаблицы = "Расходы" И СтрокаДокумента.Количество <> 0 Тогда
			// Обороты по количеству статей расходов
			
			Запись = ДвиженияДокумента.КоличественныеОборотыПоСтатьямРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаДокумента);
			Запись.ВалютнаяСумма       = СтрокаДокумента.СуммаКуда;
			Запись.Валюта              = СтрокаДокумента.ВалютаКуда;
			Запись.СтатьяРасхода       = СтрокаДокумента.ОбъектУчетаКуда;
			Запись.АналитикаСтатьи     = СтрокаДокумента.Субконто2Куда;
			Запись.НомерСтрокиЖурнала  = ДвиженияДокумента.ЖурналОпераций.Количество();
			
		КонецЕсли;
		
	КонецЦикла; 
	

	Для Каждого СтрокаДокумента Из ТаблицыДокумента.РасходыНаЦель Цикл
		
		Если ЗначениеЗаполнено(СтрокаДокумента.ФинансоваяЦель) И ЗначениеЗаполнено(СтрокаДокумента.Валюта) Тогда
			ЗаписьРасхода = ДвиженияДокумента.ИспользованиеСуммФинансовыхЦелей.Добавить();
			ЗаписьРасхода.Регистратор                   = СтрокаДокумента.Регистратор;
			ЗаписьРасхода.Период                        = СтрокаДокумента.Период;
			ЗаписьРасхода.ФинансоваяЦель                = СтрокаДокумента.ФинансоваяЦель;
			ЗаписьРасхода.Валюта                        = СтрокаДокумента.Валюта;
			ЗаписьРасхода.ИспользованоНакоплений        = СтрокаДокумента.ИспользованоНакоплений;
			ЗаписьРасхода.ИспользованоСвободныхСредств  = СтрокаДокумента.ИспользованоСвободныхСредств;
		КонецЕсли; 
		
	КонецЦикла; 
	
	// Записываем движения в регистр фактических оборотов бюджета
	Если ТаблицыДокумента.Свойство("ОборотыБюджета") Тогда
		ДвиженияДокумента.ФактическиеОборотыБюджета.Загрузить(ТаблицыДокумента.ОборотыБюджета);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет структуру ДополнительныеСвойства значениями, необходимыми для дальнейшей обработки документа
//
//Параметры:
//	Операция               - ссылка или объект документа, зависит от контекста вызова этой процедуры
//	ДополнительныеСвойства - Структура или Неопределено - сордержит дополнительные свойства документа
//	ПроверятьТаблицыДокумента - Булево - заполнять ли таблицы для формирования движений
//
Процедура ПроверитьДополнительныеСвойстваОперации(Операция, ДополнительныеСвойства, ПроверятьТаблицыДокумента = Ложь) Экспорт

	// Выполняем проверку, одинаковую для всех документов
	ОбслуживаниеДокументов.ОбщаяПроверкаДополнительныхСвойствДокумента(Операция, ДополнительныеСвойства);
	
	Если ПроверятьТаблицыДокумента И Не ДополнительныеСвойства.Свойство("ТаблицыДокумента") Тогда
		ДополнительныеСвойства.Вставить("ТаблицыДокумента", ПолучитьВыборкиДляФормированияДвижений(Операция.Ссылка, ДополнительныеСвойства));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИтоговыеСуммыДокумента(ДокументОбъект) Экспорт
	
	СтруктураТаблиц = ПолучитьТаблицыДляОписанияОпераций(ДокументОбъект);
	
	ОписаниеДоходов     = Новый Соответствие;
	ОписаниеРасходов    = Новый Соответствие;
	ОписаниеПеремещений = Новый Соответствие;
	ОписаниеНакоплений  = Новый Соответствие;
	
	ДокументОбъект.СуммаДоходовОперации     = 0;
	ДокументОбъект.СуммаРасходовОперации    = 0;
	СуммаПеремещенийОперации = 0;
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	ДокументОбъект.ВалютаДоходовОперации     = ВалютаУчета;
	ДокументОбъект.ВалютаРасходовОперации    = ВалютаУчета;
	
	ОбъектыОперации   = Новый Соответствие;
	СтатьиОперации    = Новый Соответствие;
	АналитикаОперации = Новый Соответствие;
	
	Для Каждого СтрокаОписания Из СтруктураТаблиц.Доходы Цикл
		
		КлючОписания = "[" +  СтрокаОписания.Статья + "] " + НСтр("ru='в'") + " [" + СтрокаОписания.ОбъектУчета + "]";
		Если ОписаниеДоходов.Получить(КлючОписания) = Неопределено Тогда
			ОписаниеДоходов.Вставить(КлючОписания, "");
		КонецЕсли;
		Если Не ПустаяСтрока(СтрокаОписания.КомментарийСтроки) Тогда
			ОписаниеДоходов[КлючОписания] = ОписаниеДоходов[КлючОписания] 
					+ ?(ЗначениеЗаполнено(ОписаниеДоходов[КлючОписания]), ", ", "")
					+ СокрЛП(СтрокаОписания.КомментарийСтроки);
		КонецЕсли;
		
		ОбъектыОперации.Вставить(СтрокаОписания.ОбъектУчета);
		СтатьиОперации.Вставить(СтрокаОписания.Статья);
		АналитикаОперации.Вставить(СтрокаОписания.АналитикаСтатьи);
		
	КонецЦикла; 
	
	Для Каждого СтрокаОписания Из СтруктураТаблиц.Расходы Цикл
		
		КлючОписания = "[" +  СтрокаОписания.Статья + "] " + НСтр("ru='в'") + " [" + СтрокаОписания.ОбъектУчета + "]";
		Если ОписаниеРасходов.Получить(КлючОписания) = Неопределено Тогда
			ОписаниеРасходов.Вставить(КлючОписания, "");
		КонецЕсли;
		Если Не ПустаяСтрока(СтрокаОписания.КомментарийСтроки) Тогда
			ОписаниеРасходов[КлючОписания] = ОписаниеРасходов[КлючОписания] 
					+ ?(ЗначениеЗаполнено(ОписаниеРасходов[КлючОписания]), ", ", "")
					+ СокрЛП(СтрокаОписания.КомментарийСтроки);
		КонецЕсли;
		
		ОбъектыОперации.Вставить(СтрокаОписания.ОбъектУчета);
		СтатьиОперации.Вставить(СтрокаОписания.Статья);
		АналитикаОперации.Вставить(СтрокаОписания.АналитикаСтатьи);
		
	КонецЦикла;
	
	Для Каждого СтрокаОписания Из СтруктураТаблиц.Перемещения Цикл
		
		КлючОписания =НСтр("ru='из'") + "[" +  СтрокаОписания.ОбъектУчетаКт + "] " 
				+ НСтр("ru='в'") + " [" + СтрокаОписания.ОбъектУчетаДт + "]";
		Если ОписаниеПеремещений.Получить(КлючОписания) = Неопределено Тогда
			ОписаниеПеремещений.Вставить(КлючОписания, "");
		КонецЕсли;
		Если Не ПустаяСтрока(СтрокаОписания.КомментарийСтроки) Тогда
			ОписаниеПеремещений[КлючОписания] = ОписаниеПеремещений[КлючОписания] 
					+ ?(ЗначениеЗаполнено(ОписаниеПеремещений[КлючОписания]), ", ", "")
					+ СокрЛП(СтрокаОписания.КомментарийСтроки);
		КонецЕсли;
		
		ОбъектыОперации.Вставить(СтрокаОписания.ОбъектУчетаКт);
		СтатьиОперации.Вставить(СтрокаОписания.ОбъектУчетаДт);
		
	КонецЦикла;
	
	
	ТекстДоходов = "";
	Если ОписаниеДоходов.Количество() > 0 Тогда
		
		ТекстОписания = "";
		Для каждого КлючИЗначение Из ОписаниеДоходов Цикл
			ТекстОписания = ТекстОписания + ?(ТекстОписания = "", "", ", ") 
				+ КлючИЗначение.Ключ + ?(ЗначениеЗаполнено(КлючИЗначение.Значение), " (" + КлючИЗначение.Значение + ")", "");
		КонецЦикла;
		
		ТекстДоходов = СтрШаблон("%1: %2", 
				?(ОписаниеДоходов.Количество() = 1, НСтр("ru='Доход'"), НСтр("ru='Доходы'")),
				ТекстОписания);
				
		
		ИтогиПоВалютам = ДокументОбъект.Доходы.Выгрузить(, "Валюта, Сумма");
		ИтогиПоВалютам.Свернуть("Валюта", "Сумма");
		Если ИтогиПоВалютам.Количество() = 1 Тогда
			ДокументОбъект.ВалютаДоходовОперации = ИтогиПоВалютам[0].Валюта;
			ДокументОбъект.СуммаДоходовОперации = ИтогиПоВалютам[0].Сумма;
		Иначе
			ДокументОбъект.ВалютаДоходовОперации = ВалютаУчета;
			Для Каждого СтрокаИтога Из ИтогиПоВалютам Цикл
				ДокументОбъект.СуммаДоходовОперации = ДокументОбъект.СуммаРасходовОперации + ПересчитатьСуммуСтрокиВВалютуУчета(СтрокаИтога, СтруктураТаблиц.ТаблицаКурсов, ВалютаУчета);
			КонецЦикла; 
		КонецЕсли; 
		
	КонецЕсли;
	
	ТекстРасходов = "";
	Если ОписаниеРасходов.Количество() > 0 Тогда
		
		ТекстОписания = "";
		Для каждого КлючИЗначение Из ОписаниеРасходов Цикл
			ТекстОписания = ТекстОписания + ?(ТекстОписания = "", "", ", ") 
				+ КлючИЗначение.Ключ + ?(ЗначениеЗаполнено(КлючИЗначение.Значение), " (" + КлючИЗначение.Значение + ")", "");
		КонецЦикла;
		
		ТекстРасходов = СтрШаблон("%1: %2", 
				?(ОписаниеРасходов.Количество() = 1, НСтр("ru='Расход'"), НСтр("ru='Расходы'")),
				ТекстОписания);
		
		ИтогиПоВалютам = ДокументОбъект.Расходы.Выгрузить(, "Валюта, Сумма");
		ИтогиПоВалютам.Свернуть("Валюта", "Сумма");
		Если ИтогиПоВалютам.Количество() = 1 Тогда
			ДокументОбъект.ВалютаРасходовОперации = ИтогиПоВалютам[0].Валюта;
			ДокументОбъект.СуммаРасходовОперации = ИтогиПоВалютам[0].Сумма;
		Иначе
			ДокументОбъект.ВалютаРасходовОперации = ВалютаУчета;
			Для Каждого СтрокаИтога Из ИтогиПоВалютам Цикл
				ДокументОбъект.СуммаРасходовОперации = ДокументОбъект.СуммаРасходовОперации + ПересчитатьСуммуСтрокиВВалютуУчета(СтрокаИтога, СтруктураТаблиц.ТаблицаКурсов, ВалютаУчета);
			КонецЦикла; 
		КонецЕсли; 
		
	КонецЕсли;
	
	ТекстПеремещения = "";
	Если ОписаниеПеремещений.Количество() > 0 Тогда
		
		ТекстОписания = "";
		Для каждого КлючИЗначение Из ОписаниеПеремещений Цикл
			ТекстОписания = ТекстОписания + ?(ТекстОписания = "", "", ", ") 
				+ КлючИЗначение.Ключ + ?(ЗначениеЗаполнено(КлючИЗначение.Значение), " (" + КлючИЗначение.Значение + ")", "");
		КонецЦикла;
		
		ТекстПеремещения = СтрШаблон("%1: %2", 
				?(ОписаниеПеремещений.Количество() = 1, НСтр("ru='Перемещение'"), НСтр("ru='Перемещения'")),
				ТекстОписания);
		
		ИтогиПоВалютам = ДокументОбъект.Перемещения.Выгрузить(, "Валюта, Сумма");
		ИтогиПоВалютам.Свернуть("Валюта", "Сумма");
		
		Если ОписаниеДоходов.Количество() = 0 Тогда
			ДокументОбъект.ВалютаДоходовОперации = ?(ИтогиПоВалютам.Количество() = 1, ИтогиПоВалютам[0].Валюта, ВалютаУчета);
		КонецЕсли;
		Если ОписаниеРасходов.Количество() = 0 Тогда
			ДокументОбъект.ВалютаРасходовОперации = ?(ИтогиПоВалютам.Количество() = 1, ИтогиПоВалютам[0].Валюта, ВалютаУчета);
		КонецЕсли;
		
		Для каждого СтрокаИтога Из ИтогиПоВалютам Цикл
			
			ДокументОбъект.СуммаДоходовОперации = ДокументОбъект.СуммаДоходовОперации 
					+ ПересчитатьСуммуСтрокиВВалютуУчета(СтрокаИтога, СтруктураТаблиц.ТаблицаКурсов, ВалютаУчета);
			ДокументОбъект.СуммаРасходовОперации = ДокументОбъект.СуммаРасходовОперации 
					+ ПересчитатьСуммуСтрокиВВалютуУчета(СтрокаИтога, СтруктураТаблиц.ТаблицаКурсов, ВалютаУчета);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстНакоплений = "";
	Для каждого СтрокаОписания Из СтруктураТаблиц.Накопления Цикл
		
		ТекстНакоплений = ТекстНакоплений + ?(ЗначениеЗаполнено(ТекстНакоплений), ", ", "")
			+ СтрШаблон("%1 %2 %3%4", СтрокаОписания.ФинансоваяЦель, СтрокаОписания.ИспользованоСвободныхСредств,
					СтрокаОписания.Валюта, ?(ЗначениеЗаполнено(СтрокаОписания.КомментарийСтроки), "(" + СтрокаОписания.КомментарийСтроки + ")", ""));
		
	КонецЦикла;
	Если ЗначениеЗаполнено(ТекстНакоплений) Тогда
		ТекстНакоплений = НСтр("ru='Потрачено на цели: '") + ТекстНакоплений; 
	КонецЕсли;
	
	Если Не ДокументОбъект.ЭтоШаблон Тогда
		ДокументОбъект.ОписаниеОперации = ТекстДоходов;
		ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации 
				+ ?(ЗначениеЗаполнено(ДокументОбъект.ОписаниеОперации) И ЗначениеЗаполнено(ТекстРасходов), ". ", "") + ТекстРасходов; 
		ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации 
				+ ?(ЗначениеЗаполнено(ДокументОбъект.ОписаниеОперации) И ЗначениеЗаполнено(ТекстПеремещения), ". ", "") + ТекстПеремещения; 
		ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации 
				+ ?(ЗначениеЗаполнено(ДокументОбъект.ОписаниеОперации) И ЗначениеЗаполнено(ТекстНакоплений), ". ", "") + ТекстНакоплений; 
	КонецЕсли; 
	
	ДокументОбъект.ПредставлениеОбъектов  = "";
	ДокументОбъект.ПредставлениеСтатей    = "";
	ДокументОбъект.ПредставлениеАналитики = "";
	
	Для каждого КлючИЗначение Из ОбъектыОперации Цикл
		ДокументОбъект.ПредставлениеОбъектов = ДокументОбъект.ПредставлениеОбъектов + ?(ДокументОбъект.ПредставлениеОбъектов = "", "", ", ") 
					+ ДеньгиКлиентСервер.СокращенноеПредставление(Строка(КлючИЗначение.Значение), 30, Ложь);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из СтатьиОперации Цикл
		ДокументОбъект.ПредставлениеСтатей = ДокументОбъект.ПредставлениеСтатей + ?(ДокументОбъект.ПредставлениеСтатей = "", "", ", ") 
					+ ДеньгиКлиентСервер.СокращенноеПредставление(Строка(КлючИЗначение.Значение), 30, Ложь);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из АналитикаОперации Цикл
		ДокументОбъект.ПредставлениеАналитики = ДокументОбъект.ПредставлениеАналитики 
					+ ?(ДокументОбъект.ПредставлениеАналитики = "", "", ", ") 
							+ ДеньгиКлиентСервер.СокращенноеПредставление(Строка(КлючИЗначение.Значение), 30, Ложь);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Дата");
	Поля.Добавить("ЭтоШаблон");
	Поля.Добавить("ОписаниеОперации");
	Поля.Добавить("СуммаДоходовОперации");
	Поля.Добавить("ВалютаДоходовОперации");
	Поля.Добавить("СуммаРасходовОперации");
	Поля.Добавить("ВалютаРасходовОперации");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Данные.ЭтоШаблон Тогда
		Представление = ДеньгиКлиентСервер.СокращенноеПредставление(Данные.ОписаниеОперации, 250, Ложь);
	Иначе
		
		Представление = НСтр("ru='Универсальная операция от'") + " " + Формат(Данные.Дата, "ДФ='дд.ММ.гггг (ЧЧ:мм)'");
		Если Данные.СуммаДоходовОперации <> 0 Тогда
			Представление = Представление + " " + НСтр("ru='получено'") + ": " 
					+ Формат(Данные.СуммаДоходовОперации, "ЧДЦ=2; ЧН=0.00") + " " + Данные.ВалютаДоходовОперации;
		КонецЕсли;
		Если Данные.СуммаРасходовОперации <> 0 Тогда
			Представление = Представление + " " + НСтр("ru='потрачено'") + ": " 
					+ Формат(Данные.СуммаРасходовОперации, "ЧДЦ=2; ЧН=0.00") + " " + Данные.ВалютаРасходовОперации;
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" Тогда
		
		РаботаСФормамиДокументов.ОпределитьФормуСпискаДляВыбора(Тип("ДокументСсылка.УниверсальнаяОперация"), Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВыборкиДляФормированияДвижений(СсылкаНаДокумент, ДополнительныеСвойства) 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.Ссылка КАК Регистратор,
	|	""Доходы"" КАК ИмяТаблицы,
	|	Доходы.Ссылка.Дата КАК Период,
	|	ЕСТЬNULL(Доходы.Ссылка.ЭтоШаблон, ЛОЖЬ) КАК ЭтоШаблон,
	|	ЕСТЬNULL(Доходы.Ссылка.Проведен, ЛОЖЬ) КАК Проведен,
	|	ВЫБОР
	|		КОГДА Доходы.ОбъектУчета ССЫЛКА Справочник.КошелькиИСчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Доходы.ОбъектУчета.ИспользоватьДляНакоплений, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.СвободныеДеньги)
	|				КОНЕЦ
	|		ИНАЧЕ Доходы.РазделУчета
	|	КОНЕЦ КАК РазделУчетаКуда,
	|	Доходы.ОбъектУчета КАК ОбъектУчетаКуда,
	|	ЕСТЬNULL(Доходы.ОбъектУчета.ИспользоватьДляНакоплений, ЛОЖЬ) КАК ИспользоватьДляНакопленийКуда,
	|	ЕСТЬNULL(Доходы.ОбъектУчета.ТипСчета, НЕОПРЕДЕЛЕНО) КАК ТипСчетаКуда,
	|	ЕСТЬNULL(Доходы.ОбъектУчета.ИспользоватьДляУчетаВзятыхДолгов, ЛОЖЬ) КАК ИспользоватьДляУчетаВзятыхДолговКуда,
	|	ЕСТЬNULL(Доходы.ОбъектУчета.ИспользоватьДляУчетаВыданныхДолгов, ЛОЖЬ) КАК ИспользоватьДляУчетаВыданныхДолговКуда,
	|	Доходы.Валюта КАК ВалютаКуда,
	|	Доходы.Сумма КАК СуммаКуда,
	|	ВЫБОР
	|		КОГДА Доходы.ФинансоваяЦель = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ОбщиеНакопления)
	|		ИНАЧЕ Доходы.ФинансоваяЦель
	|	КОНЕЦ КАК Субконто2Куда,
	|	ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Капитал) КАК РазделУчетаОткуда,
	|	Доходы.СтатьяДохода КАК ОбъектУчетаОтКуда,
	|	ЛОЖЬ КАК ИспользоватьДляНакопленийОткуда,
	|	НЕОПРЕДЕЛЕНО КАК ТипСчетаОткуда,
	|	ЛОЖЬ КАК ИспользоватьДляУчетаВзятыхДолговОткуда,
	|	ЛОЖЬ КАК ИспользоватьДляУчетаВыданныхДолговОткуда,
	|	Доходы.Валюта КАК ВалютаОткуда,
	|	Доходы.Сумма КАК СуммаОткуда,
	|	Доходы.АналитикаСтатьиДохода КАК Субконто2Откуда,
	|	0 КАК Количество,
	|	Доходы.КомментарийСтроки КАК Комментарий
	|ИЗ
	|	Документ.УниверсальнаяОперация.Доходы КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расходы.Ссылка,
	|	""Расходы"",
	|	Расходы.Ссылка.Дата,
	|	Расходы.Ссылка.ЭтоШаблон,
	|	Расходы.Ссылка.Проведен,
	|	ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Капитал),
	|	Расходы.СтатьяРасхода,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	Расходы.Валюта,
	|	Расходы.Сумма,
	|	Расходы.АналитикаСтатьиРасхода,
	|	ВЫБОР
	|		КОГДА Расходы.ОбъектУчета ССЫЛКА Справочник.КошелькиИСчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Расходы.ОбъектУчета.ИспользоватьДляНакоплений, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.СвободныеДеньги)
	|				КОНЕЦ
	|		ИНАЧЕ Расходы.РазделУчета
	|	КОНЕЦ,
	|	Расходы.ОбъектУчета,
	|	ЕСТЬNULL(Расходы.ОбъектУчета.ИспользоватьДляНакоплений, ЛОЖЬ),
	|	ЕСТЬNULL(Расходы.ОбъектУчета.ТипСчета, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Расходы.ОбъектУчета.ИспользоватьДляУчетаВзятыхДолгов, ЛОЖЬ),
	|	ЕСТЬNULL(Расходы.ОбъектУчета.ИспользоватьДляУчетаВыданныхДолгов, ЛОЖЬ),
	|	Расходы.Валюта,
	|	Расходы.Сумма,
	|	ВЫБОР
	|		КОГДА Расходы.ФинансоваяЦельОткуда = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА Расходы.ФинансоваяЦель = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ОбщиеНакопления)
	|					ИНАЧЕ Расходы.ФинансоваяЦель
	|				КОНЕЦ
	|		ИНАЧЕ Расходы.ФинансоваяЦельОткуда
	|	КОНЕЦ,
	|	Расходы.Количество КАК Количество,
	|	Расходы.КомментарийСтроки
	|ИЗ
	|	Документ.УниверсальнаяОперация.Расходы КАК Расходы
	|ГДЕ
	|	Расходы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Переводы.Ссылка,
	|	""Переводы"",
	|	Переводы.Ссылка.Дата,
	|	Переводы.Ссылка.ЭтоШаблон,
	|	Переводы.Ссылка.Проведен,
	|	ВЫБОР
	|		КОГДА Переводы.ОбъектУчетаДт ССЫЛКА Справочник.КошелькиИСчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Переводы.ОбъектУчетаДт.ИспользоватьДляНакоплений, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.СвободныеДеньги)
	|				КОНЕЦ
	|		ИНАЧЕ Переводы.РазделУчетаДт
	|	КОНЕЦ,
	|	Переводы.ОбъектУчетаДт,
	|	ЕСТЬNULL(Переводы.ОбъектУчетаДт.ИспользоватьДляНакоплений, ЛОЖЬ),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаДт.ТипСчета, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаДт.ИспользоватьДляУчетаВзятыхДолгов, ЛОЖЬ),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаДт.ИспользоватьДляУчетаВыданныхДолгов, ЛОЖЬ),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаДт.Валюта, Переводы.Валюта),
	|	Переводы.Сумма,
	|	ВЫБОР
	|		КОГДА Переводы.ФинансоваяЦельДт = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ОбщиеНакопления)
	|		ИНАЧЕ Переводы.ФинансоваяЦельДт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Переводы.ОбъектУчетаКт ССЫЛКА Справочник.КошелькиИСчета
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Переводы.ОбъектУчетаКт.ИспользоватьДляНакоплений, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.СвободныеДеньги)
	|				КОНЕЦ
	|		ИНАЧЕ Переводы.РазделУчетаКт
	|	КОНЕЦ,
	|	Переводы.ОбъектУчетаКт,
	|	ЕСТЬNULL(Переводы.ОбъектУчетаКт.ИспользоватьДляНакоплений, ЛОЖЬ),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаКт.ТипСчета, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаКт.ИспользоватьДляУчетаВзятыхДолгов, ЛОЖЬ),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаКт.ИспользоватьДляУчетаВыданныхДолгов, ЛОЖЬ),
	|	ЕСТЬNULL(Переводы.ОбъектУчетаКт.Валюта, Переводы.Валюта),
	|	Переводы.Сумма,
	|	ВЫБОР
	|		КОГДА Переводы.ФинансоваяЦельКт = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ОбщиеНакопления)
	|		ИНАЧЕ Переводы.ФинансоваяЦельКт
	|	КОНЕЦ,
	|	0 КАК Количество,
	|	Переводы.КомментарийСтроки
	|ИЗ
	|	Документ.УниверсальнаяОперация.Перемещения КАК Переводы
	|ГДЕ
	|	Переводы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Накопления.Ссылка КАК Регистратор,
	|	""Накопления"" КАК ИмяТаблицы,
	|	Накопления.Ссылка.Дата КАК Период,
	|	Накопления.ФинансоваяЦель КАК ФинансоваяЦель,
	|	Накопления.Валюта КАК Валюта,
	|	СУММА(Накопления.ИспользованоНакоплений) КАК ИспользованоНакоплений,
	|	СУММА(Накопления.ИспользованоСвободныхСредств) КАК ИспользованоСвободныхСредств
	|ИЗ
	|	Документ.УниверсальнаяОперация.Накопления КАК Накопления
	|ГДЕ
	|	Накопления.Ссылка = &Ссылка
	|	И Накопления.ФинансоваяЦель <> ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Накопления.Ссылка,
	|	Накопления.Ссылка.Дата,
	|	Накопления.ФинансоваяЦель,
	|	Накопления.Валюта
	|";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	СтруктураТаблиц = Новый Структура("СводТаблиц, РасходыНаЦель, ОбъектыОперации");
	СтруктураТаблиц.СводТаблиц              = ПакетРезультатов[0].Выгрузить();
	СтруктураТаблиц.РасходыНаЦель           = ПакетРезультатов[1].Выгрузить();
	
	ЗаполнитьОбъектыОперацииИФактическиеОборотыБюджета(СсылкаНаДокумент, СтруктураТаблиц, ДополнительныеСвойства);
	
	Возврат СтруктураТаблиц;

КонецФункции

// Записывает в регистр сведений информацию об использованных в документе объектах учета.
//	Данная информация является вспомогательной и не зависит от проведенности или пометки на удаление документа
//
//Параметры:
//	СсылкаНаДокумент       - ДокументСсылка.УниверсальнаяОперация - регистратор движений
//	ДополнительныеСвойства - Структура - сордержит дополнительные свойства документа
//	ТаблицыДокумента       - Структура - набор таблиц с информацией о документе (см. СтруктураТаблицФормированияДвижений())
//
Процедура ЗаполнитьОбъектыОперацииИФактическиеОборотыБюджета(СсылкаНаДокумент, ТаблицыДокумента, ДополнительныеСвойства)

	ТаблицаНабора = ОбслуживаниеДокументов.НоваяТаблицаРегистраОбъектыОпераций();
	
	Если ТаблицыДокумента.СводТаблиц.Количество() > 0 
			И (ТаблицыДокумента.СводТаблиц[0].ЭтоШаблон ИЛИ ТаблицыДокумента.СводТаблиц[0].Проведен ИЛИ ДополнительныеСвойства.ЭтоПлановаяОперация) Тогда
		ОборотыБюджета = ОбслуживаниеДокументов.НоваяТаблицаРегистровОборотовБюджета();
	Иначе
		ОборотыБюджета = Неопределено;
	КонецЕсли;
	
	ТипКошелек    = Тип("СправочникСсылка.КошелькиИСчета");
	ТипДолг       = Тип("СправочникСсылка.Долги");
	ТипИмущество  = Тип("СправочникСсылка.Имущество");
	
	Для Каждого СтрокаДокумента Из ТаблицыДокумента.СводТаблиц Цикл
		
		ЗаписьНабора1 = ТаблицаНабора.Добавить();
		ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора1.Операция          = СсылкаНаДокумент;
		ЗаписьНабора1.РазделУчета       = СтрокаДокумента.РазделУчетаКуда;
		ЗаписьНабора1.ПредметУчета      = СтрокаДокумента.ОбъектУчетаКуда;
		
		ЗаписьНабора2 = ТаблицаНабора.Добавить();
		ЗаписьНабора2.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора2.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора2.Операция          = СсылкаНаДокумент;
		ЗаписьНабора2.РазделУчета       = СтрокаДокумента.РазделУчетаОтКуда;
		ЗаписьНабора2.ПредметУчета      = СтрокаДокумента.ОбъектУчетаОтКуда;
		
		ВалютаКуда   = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаКуда), СтрокаДокумента.ВалютаКуда, ДополнительныеСвойства.ВалютаУчета);
		ВалютаОткуда = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаОткуда), СтрокаДокумента.ВалютаОткуда, ДополнительныеСвойства.ВалютаУчета);
		
		Если СтрокаДокумента.ИмяТаблицы = "Доходы" Тогда
			
			ФинЦельКуда = ?(СтрокаДокумента.ИспользоватьДляНакопленийКуда, 
						?(ЗначениеЗаполнено(СтрокаДокумента.Субконто2Куда), СтрокаДокумента.Субконто2Куда, Справочники.ФинансовыеЦели.ОбщиеНакопления),
						Неопределено); 
			
			ЗаписьНабора1.ФинансоваяЦель    = ФинЦельКуда;
			ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора1.СуммаПоступления  = СтрокаДокумента.СуммаКуда;
			ЗаписьНабора1.СуммаСписания     = 0;
			ЗаписьНабора1.Валюта            = ВалютаКуда;
			
			ЗаписьНабора2.ФинансоваяЦель    = ФинЦельКуда; 
			ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора2.СуммаПоступления  = СтрокаДокумента.СуммаОткуда;
			ЗаписьНабора2.СуммаСписания     = 0;
			ЗаписьНабора2.Валюта            = ВалютаОткуда;
			
			// Фактические обороты бюджета
			Если ОборотыБюджета <> Неопределено И ТипЗнч(СтрокаДокумента.ОбъектУчетаКуда) = ТипКошелек Тогда
				
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦельКуда;
				ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.ОбъектУчетаОтКуда), СтрокаДокумента.ОбъектУчетаОтКуда, Справочники.СтатьиДоходов.ПрочиеДоходы);
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
				ЗаписьНабора.Валюта           = ВалютаКуда;
				ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаКуда;
				ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаКуда;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				
				// Для кредитных карт записываем еще одну операцию факта: пополнение кредитной карты
				Если СтрокаДокумента.ТипСчетаКуда = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельКуда;
					ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.ОбъектУчетаКуда;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
					ЗаписьНабора.Валюта           = ВалютаКуда;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаКуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли СтрокаДокумента.ИмяТаблицы = "Расходы" Тогда
			
			ФинЦельОткуда = ?(СтрокаДокумента.ИспользоватьДляНакопленийОткуда, 
						?(ЗначениеЗаполнено(СтрокаДокумента.Субконто2Откуда), СтрокаДокумента.Субконто2Откуда, Справочники.ФинансовыеЦели.ОбщиеНакопления),
						Неопределено); 
			 
			ЗаписьНабора1.ФинансоваяЦель    = ФинЦельОткуда;
			ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора1.СуммаПоступления  = 0;
			ЗаписьНабора1.СуммаСписания     = СтрокаДокумента.СуммаКуда;
			ЗаписьНабора1.Валюта            = ВалютаКуда;
			
			ЗаписьНабора2.ФинансоваяЦель    = ФинЦельОткуда; 
			ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора2.СуммаПоступления  = 0;
			ЗаписьНабора2.СуммаСписания     = СтрокаДокумента.СуммаОткуда;
			ЗаписьНабора2.Валюта            = ВалютаОткуда;
			
			// Фактические обороты бюджета
			ОплатаИзКошелька = ТипЗнч(СтрокаДокумента.ОбъектУчетаОткуда) = ТипКошелек;
			ОплатаВДолг      = ТипЗнч(СтрокаДокумента.ОбъектУчетаОткуда) = ТипДолг;
			ОплатаКредиткой  = ОплатаИзКошелька И СтрокаДокумента.ТипСчетаОткуда = Перечисления.ТипыСчетов.БанковскаяКартаКредитная;
			Если ОборотыБюджета <> Неопределено И (ОплатаИзКошелька Или ОплатаВДолг) Тогда
				
				// В случае оплаты в долг или кредиткой автоматически фиксируем увеличение задолженности
				Если ОплатаВДолг Тогда
					
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
					ЗаписьНабора.СтатьяБюджета    = Справочники.ГрафыБюджета.ПолучениеКредита;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаОткуда;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
					ЗаписьНабора.Комментарий      = НСтр("ru='Увеличение долга на сумму расхода, совершенного в долг'");
					
				ИначеЕсли ОплатаКредиткой Тогда
					
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
					ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.ОбъектУчетаОткуда;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаОткуда;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
					ЗаписьНабора.Комментарий      = НСтр("ru='Учтена сумма оплаты кредитной карты'");
					
				КонецЕсли;
				
				// Фиксируем расход по статье
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
				ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.ОбъектУчетаКуда), СтрокаДокумента.ОбъектУчетаКуда, Справочники.СтатьиРасходов.ПрочиеРасходы);
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
				ЗаписьНабора.Валюта           = ВалютаОткуда;
				ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаОткуда;
				ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
				
			КонецЕсли;
			
		Иначе
			
			ФинЦельКуда = ?(СтрокаДокумента.ИспользоватьДляНакопленийКуда, 
						?(ЗначениеЗаполнено(СтрокаДокумента.Субконто2Куда), СтрокаДокумента.Субконто2Куда, Справочники.ФинансовыеЦели.ОбщиеНакопления),
						Неопределено); 
			ФинЦельОткуда = ?(СтрокаДокумента.ИспользоватьДляНакопленийОткуда, 
						?(ЗначениеЗаполнено(СтрокаДокумента.Субконто2Откуда), СтрокаДокумента.Субконто2Откуда, Справочники.ФинансовыеЦели.ОбщиеНакопления),
						Неопределено); 
				
			ЗаписьНабора1.ФинансоваяЦель    = ФинЦельКуда;
			ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора1.СуммаПоступления  = СтрокаДокумента.СуммаКуда;
			ЗаписьНабора1.СуммаСписания     = 0;
			ЗаписьНабора1.Валюта            = ВалютаКуда;
			
			ЗаписьНабора2.ФинансоваяЦель    = ФинЦельОткуда; 
			ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора2.СуммаПоступления  = 0;
			ЗаписьНабора2.СуммаСписания     = СтрокаДокумента.СуммаОткуда;
			ЗаписьНабора2.Валюта            = ВалютаОткуда;
			
			ТипОбъектКуда   = ТипЗнч(СтрокаДокумента.ОбъектУчетаКуда);
			ТипОбъектОткуда = ТипЗнч(СтрокаДокумента.ОбъектУчетаОткуда);
			
			// Фактические обороты бюджета фиксируются только по кошелькам
			Если ОборотыБюджета <> Неопределено И (ТипОбъектКуда = ТипКошелек ИЛИ ТипОбъектОткуда = ТипКошелек) Тогда
				
				КредиткаОткуда = СтрокаДокумента.ТипСчетаОткуда = Перечисления.ТипыСчетов.БанковскаяКартаКредитная;
				КредиткаКуда   = СтрокаДокумента.ТипСчетаКуда = Перечисления.ТипыСчетов.БанковскаяКартаКредитная;
				
				Если ТипОбъектКуда = ТипДолг Тогда
					
					// Из кошелька в погашение долга или выдача взаймы
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
					ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.ОбъектУчетаКуда), СтрокаДокумента.ОбъектУчетаКуда, Справочники.ГрафыБюджета.ПогашениеКредита);
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
					ЗаписьНабора.Валюта           = ВалютаОткуда;
					ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаОткуда;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				ИначеЕсли ТипОбъектОткуда = ТипДолг Тогда
					
					// В кошелек из долга
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельКуда;
					ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.ОбъектУчетаОткуда), СтрокаДокумента.ОбъектУчетаОткуда, Справочники.ГрафыБюджета.ВозвратВыданногоЗайма);
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаКуда;
					ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаКуда;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаКуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				ИначеЕсли ТипОбъектКуда = ТипИмущество Тогда
					
					// Из кошелька в имущество
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
					ЗаписьНабора.СтатьяБюджета    = Справочники.ГрафыБюджета.ПокупкаИмущества;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
					ЗаписьНабора.Валюта           = ВалютаОткуда;
					ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаОткуда;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				ИначеЕсли ТипОбъектОткуда = ТипИмущество Тогда
					
					// В кошелек из имущества
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельКуда;
					ЗаписьНабора.СтатьяБюджета    = Справочники.ГрафыБюджета.ВыручкаЗаИмущество;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаКуда;
					ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаКуда;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаКуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				ИначеЕсли ФинЦельОткуда <> ФинЦельКуда Тогда
					
					// Перемещение между финансовыми целями
					
					// Расход из свободных денег или накоплений на цель-источник
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
					ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(ФинЦельКуда), ФинЦельКуда, Справочники.ГрафыБюджета.ФинЦельВозвратИзНакопления);
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
					ЗаписьНабора.Валюта           = ВалютаОткуда;
					ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаОткуда;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
					// Приход в свободные деньги или в накопления на цель-получатель
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельКуда;
					ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(ФинЦельОткуда), ФинЦельОткуда, Справочники.ГрафыБюджета.СвободныеДеньгиПереводВНакопление);
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаКуда;
					ЗаписьНабора.Кошелек          = СтрокаДокумента.ОбъектУчетаКуда;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаКуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				КонецЕсли;
				
				// Если используется кредитная карта, автоматически добавляем перевод из доступных денег на кредитку
				Если ТипОбъектКуда = ТипКошелек И КредиткаКуда И (КредиткаКуда <> КредиткаОткуда Или ФинЦельКуда <> ФинЦельОткуда) Тогда
					
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельКуда;
					ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.ОбъектУчетаКуда;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
					ЗаписьНабора.Валюта           = ВалютаКуда;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаКуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				КонецЕсли;
				
				Если ТипОбъектОткуда = ТипКошелек И КредиткаОткуда И (КредиткаКуда <> КредиткаОткуда Или ФинЦельКуда <> ФинЦельОткуда) Тогда
					
					ЗаписьНабора = ОборотыБюджета.Добавить();
					ЗаписьНабора.Период           = СтрокаДокумента.Период;
					ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
					ЗаписьНабора.РазделБюджета    = ФинЦельОткуда;
					ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.ОбъектУчетаОткуда;
					ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
					ЗаписьНабора.Валюта           = ВалютаОткуда;
					ЗаписьНабора.Кошелек          = Неопределено;
					ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаОткуда;
					ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗаписьНабора1.ФинансоваяЦель) Тогда
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
			ЗаписьНабора.ФинансоваяЦель    = Неопределено;
		КонецЕсли; 
			
		Если ЗначениеЗаполнено(ЗаписьНабора2.ФинансоваяЦель) Тогда
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора2);
			ЗаписьНабора.ФинансоваяЦель    = Неопределено;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ВалютаОткуда) И ЗначениеЗаполнено(ВалютаКуда) 
			И ВалютаОткуда <> ВалютаКуда  Тогда
			
			// Добавляем строки с обменом валют
			ЗаписьНабора1 = ТаблицаНабора.Добавить();
			ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора1.Операция          = СсылкаНаДокумент;
			ЗаписьНабора1.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора1.ПредметУчета      = Справочники.СтатьиРасходов.ОбменВалюты;
			ЗаписьНабора1.ФинансоваяЦель    = ФинЦельОткуда;
			ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Перемещение;
			ЗаписьНабора1.СуммаСписания     = СтрокаДокумента.СуммаОткуда;
			ЗаписьНабора1.Валюта            = СтрокаДокумента.ВалютаОтКуда;
			Если ЗначениеЗаполнено(ФинЦельОткуда) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
			
			ЗаписьНабора1 = ТаблицаНабора.Добавить();
			ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора1.Операция          = СсылкаНаДокумент;
			ЗаписьНабора1.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора1.ПредметУчета      = Справочники.СтатьиДоходов.ОбменВалюты;
			ЗаписьНабора1.ФинансоваяЦель    = ФинЦельОткуда;
			ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Перемещение;
			ЗаписьНабора1.СуммаПоступления  = СтрокаДокумента.СуммаКуда;
			ЗаписьНабора1.Валюта            = ВалютаКуда;
			Если ЗначениеЗаполнено(ФинЦельОткуда) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
			
		КонецЕсли; 
				
	КонецЦикла; 
	
	ТаблицаНабора.Свернуть("Дата, ЭтоШаблон, Операция, РазделУчета, ПредметУчета, ФинансоваяЦель, ТипПоказателя, Валюта", "СуммаПоступления, СуммаСписания");
	ТаблицыДокумента.Вставить("ОбъектыОперации", ТаблицаНабора);
	
	Если ОборотыБюджета <> Неопределено Тогда
		ОборотыБюджета.Свернуть("Период,Регистратор,РазделБюджета,СтатьяБюджета,ТипПоказателя,Валюта,Кошелек,Комментарий", "Сумма");
		ТаблицыДокумента.Вставить("ОборотыБюджета", ОборотыБюджета);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТаблицыДляОписанияОпераций(ДокументОбъект)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДоходы", ДокументОбъект.Доходы.Выгрузить(,"СтатьяДохода,РазделУчета,ОбъектУчета,АналитикаСтатьиДохода,КомментарийСтроки"));
	Запрос.УстановитьПараметр("СписокРасходы", ДокументОбъект.Расходы.Выгрузить(,"СтатьяРасхода,РазделУчета,ОбъектУчета,АналитикаСтатьиРасхода,КомментарийСтроки"));
	Запрос.УстановитьПараметр("СписокПеремещения", ДокументОбъект.Перемещения.Выгрузить(,"РазделУчетаДт,ОбъектУчетаДт,РазделУчетаКт,ОбъектУчетаКт,КомментарийСтроки"));
	Запрос.УстановитьПараметр("СписокНакоплений", ДокументОбъект.Накопления.Выгрузить(,"ФинансоваяЦель,Валюта,ИспользованоСвободныхСредств,КомментарийСтроки"));
	Запрос.УстановитьПараметр("Дата2", КонецДня(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДоходы.РазделУчета,
	|	СписокДоходы.ОбъектУчета,
	|	СписокДоходы.СтатьяДохода КАК Статья,
	|	ВЫРАЗИТЬ(СписокДоходы.КомментарийСтроки КАК Строка(120)) КАК КомментарийСтроки,
	|	СписокДоходы.АналитикаСтатьиДохода КАК АналитикаСтатьи
	|ПОМЕСТИТЬ ВсеДоходы
	|ИЗ &СписокДоходы КАК СписокДоходы
	|;
	|
	|//1///////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДоходы.РазделУчета,
	|	ВсеДоходы.ОбъектУчета,
	|	ВсеДоходы.КомментарийСтроки,
	|	ВсеДоходы.Статья,
	|	ВсеДоходы.АналитикаСтатьи,
	|	ВсеДоходы.АналитикаСтатьи.Наименование
	|ИЗ
	|	ВсеДоходы КАК ВсеДоходы
	|УПОРЯДОЧИТЬ ПО Статья
	|;
	|
	|//2///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокРасходы.РазделУчета,
	|	СписокРасходы.ОбъектУчета,
	|	СписокРасходы.СтатьяРасхода КАК Статья,
	|	ВЫРАЗИТЬ(СписокРасходы.КомментарийСтроки КАК Строка(120)) КАК КомментарийСтроки,
	|	СписокРасходы.АналитикаСтатьиРасхода КАК АналитикаСтатьи
	|ПОМЕСТИТЬ ВсеРасходы
	|ИЗ &СписокРасходы КАК СписокРасходы
	|;
	|
	|//3///////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеРасходы.РазделУчета,
	|	ВсеРасходы.ОбъектУчета,
	|	ВсеРасходы.КомментарийСтроки КАК КомментарийСтроки,
	|	ВсеРасходы.Статья,
	|	ВсеРасходы.АналитикаСтатьи,
	|	ВсеРасходы.АналитикаСтатьи.Наименование
	|ИЗ
	|	ВсеРасходы КАК ВсеРасходы
	|УПОРЯДОЧИТЬ ПО Статья
	|;
	|
	|//4///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокПеремещения.РазделУчетаДт,
	|	СписокПеремещения.ОбъектУчетаДт,
	|	СписокПеремещения.РазделУчетаКт,
	|	СписокПеремещения.ОбъектУчетаКт,
	|	ВЫРАЗИТЬ(СписокПеремещения.КомментарийСтроки КАК Строка(120)) КАК КомментарийСтроки
	|ПОМЕСТИТЬ ВсеПеремещения
	|ИЗ &СписокПеремещения КАК СписокПеремещения
	|;
	|
	|//5///////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеПеремещения.РазделУчетаДт,
	|	ВсеПеремещения.ОбъектУчетаДт,
	|	ВсеПеремещения.РазделУчетаКт,
	|	ВсеПеремещения.ОбъектУчетаКт,
	|	ВсеПеремещения.КомментарийСтроки
	|ИЗ
	|	ВсеПеремещения КАК ВсеПеремещения
	|УПОРЯДОЧИТЬ ПО ОбъектУчетаКт
	|;
	|
	
	|//6///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНакоплений.ФинансоваяЦель,
	|	СписокНакоплений.Валюта,
	|	СписокНакоплений.ИспользованоСвободныхСредств,
	|	ВЫРАЗИТЬ(СписокНакоплений.КомментарийСтроки КАК Строка(120)) КАК КомментарийСтроки
	|ПОМЕСТИТЬ ВсеНакопления
	|ИЗ &СписокНакоплений КАК СписокНакоплений
	|;
	|
	|//7///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеНакопления.ФинансоваяЦель,
	|	ВсеНакопления.Валюта,
	|	СУММА(ВсеНакопления.ИспользованоСвободныхСредств) КАК ИспользованоСвободныхСредств,
	|	ВсеНакопления.КомментарийСтроки
	|ИЗ
	|	ВсеНакопления КАК ВсеНакопления
	|СГРУППИРОВАТЬ ПО
	|	ВсеНакопления.ФинансоваяЦель,
	|	ВсеНакопления.Валюта,
	|	ВсеНакопления.КомментарийСтроки
	|УПОРЯДОЧИТЬ ПО ФинансоваяЦель
	|;
	|
	
	|//8///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность,
	|	КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность КАК Коэфф
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата2, БазоваяВалюта = &ВалютаУчета) КАК КурсыВалютСрезПоследних
	|";

	Результаты = Запрос.ВыполнитьПакет();
	
	СтруктураТаблиц = Новый Структура("Доходы, Расходы, Перемещения, Накопления, ТаблицаКурсов" 
			,Результаты[1].Выгрузить()
			,Результаты[3].Выгрузить()
			,Результаты[5].Выгрузить()
			,Результаты[7].Выгрузить()
			,Результаты[8].Выгрузить());
			
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПересчитатьСуммуСтрокиВВалютуУчета(СтрокаИтога, КурсыВалют, ВалютаУчета)

	Если СтрокаИтога.Валюта = ВалютаУчета Тогда
		Возврат СтрокаИтога.Сумма;
	Иначе
		СтрокаКурса = КурсыВалют.Найти(СтрокаИтога.Валюта, "Валюта");
		Если СтрокаКурса = Неопределено Тогда
			Возврат 0;
		Иначе
			Возврат СтрокаИтога.Сумма * СтрокаКурса.Коэфф;
		КонецЕсли; 
	КонецЕсли; 

КонецФункции


#КонецОбласти	

#КонецЕсли