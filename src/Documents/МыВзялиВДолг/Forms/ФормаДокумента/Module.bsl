&НаКлиенте
Перем ДополнительныеПараметрыНаКлиенте Экспорт;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	#Область ПрикрепленныеФайлы
	МедиаФайлы = ПрикрепленныеФайлыСервер.ПрочитатьСписокФайлов(Объект.Ссылка);
	#КонецОбласти
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Записан элемент справочника" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ИмяСправочника = Неопределено;
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ИмяСправочника", ИмяСправочника) И ЗначениеЗаполнено(ИмяСправочника)
			И Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ЗначениеЗаполнено(ФормаВладельца)
			И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор Тогда
			Если ИмяСправочника = "Контакты" Тогда
				Объект.Кредитор = Параметр.Ссылка;
				КредиторПриИзмененииСервер();
				ТекущийЭлемент = Элементы.Кредитор;
			ИначеЕсли ИмяСправочника = "Долги" Тогда
				Объект.Кредит = Параметр.Ссылка;
				КредитПриИзмененииСервер();
				ТекущийЭлемент = Элементы.Кредит;
			ИначеЕсли ВРег(ИмяСправочника) = "КОШЕЛЬКИИСЧЕТА" Тогда
				Объект.Кошелек = Параметр.Ссылка;
				КошелекПриИзмененииСервер();
				ТекущийЭлемент = Элементы.Кошелек;
			КонецЕсли; 
		ИначеЕсли Параметр.Свойство("ИмяСправочника", ИмяСправочника) И ЗначениеЗаполнено(ИмяСправочника) Тогда
			Если ИмяСправочника = "Долги" И Объект.Кредит = Параметр.Ссылка Тогда
				КредитПриИзмененииСервер();
			ИначеЕсли ВРег(ИмяСправочника) = "КОШЕЛЬКИИСЧЕТА" И Объект.Кошелек = Параметр.Ссылка Тогда
				КошелекПриИзмененииСервер();
			КонецЕсли;
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = "Записана операция" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		
		ФормаВладельца = Неопределено;
		Если Параметр.Свойство("ВладелецФормы", ФормаВладельца) И ФормаВладельца = ЭтаФорма.УникальныйИдентификатор И Параметр.ЭтоШаблон <> Объект.ЭтоШаблон Тогда
			ЗаполнитьДанныеПоШаблону(Параметр.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	#Область ПрикрепленныеФайлы
	Если (ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтаФорма, ИмяСобытия, Источник))Тогда
		ПрикрепленныеФайлыКлиент.ДобавитьФайлВСписокФормы(ЭтотОбъект, Параметр); 
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Обслуживание плановых операций
	ПлановыеОперацииКлиент.ПередЗаписьюДокумента(ЭтаФорма, Отказ, ПараметрыЗаписи);
	// Общий функционал перед записью документов
	ОбслуживаниеДокументовКлиент.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Обслуживание плановых операций
	Документы.МыВзялиВДолг.ОбновитьИтоговыеСуммыДокумента(ТекущийОбъект);
	ПлановыеОперации.ПроверкаПлановПередЗаписьюДокумента(ТекущийОбъект, ПараметрыЗаписи, ЭтотОбъект);
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыСервер.ОбработатьИЗаписатьДанныеМультимедиа(МедиаФайлы, ТекущийОбъект.Ссылка);
	#КонецОбласти 
	
	ЗаполнитьДобавленныеКолонки();
	ПараметрыСеанса.ДатаПоследнейОперации = ТекущийОбъект.Дата;
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Записана операция", Новый Структура("Дата, ВидДокумента, Ссылка, ЭтоШаблон, ВладелецФормы", 
			Объект.Дата, "МыВзялиВДолг", Объект.Ссылка, Объект.ЭтоШаблон, 
			?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
			
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Общий функционал перед закрытием форм документов
	ОбслуживаниеДокументовКлиент.ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы И Открыта() Тогда
		Закрыть(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЗаголовкиКомандФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КредиторПриИзменении(Элемент)
	
	КредиторПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КредиторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура КредитСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыГрафика.СуммаДолга = ?(ЗначениеЗаполнено(Объект.Кредит), Объект.СуммаКредита, Объект.СуммаПолучено);
	ПараметрыГрафика.ДатаВозникновенияДолга = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ПараметрыГрафика.СпособПогашения) Тогда
		ПараметрыГрафика.СпособПогашения = ПредопределенноеЗначение("Перечисление.СпособыПогашенияКредита.РазовыйПлатеж");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрыГрафика.КошелекДляПогашения) Тогда
		ПараметрыГрафика.КошелекДляПогашения = Объект.Кошелек;
	КонецЕсли;
	
	Валюта = ?(ЗначениеЗаполнено(Объект.Кредит), Объект.ВалютаКредита, Объект.ВалютаПолучено);
	ПараметрыЗаполнения = Новый Структура("Контакт,ИспользоватьДляУчетаВыданныхДолгов,ИспользоватьДляУчетаВзятыхДолгов,Валюта,ПараметрыГрафика", 
		Объект.Кредитор, Ложь, Истина, Валюта, ПараметрыГрафика);
	ОткрытьФорму("Обработка.ПомощникСозданияДолга.Форма", 
		Новый Структура("ЗначенияЗаполнения,СкрыватьОстатокНаНачало, ТекстЗаполнения", ПараметрыЗаполнения, Истина, Элемент.ТекстРедактирования), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КредитНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыГрафика.СуммаДолга = ?(ЗначениеЗаполнено(Объект.Кредит), Объект.СуммаКредита, Объект.СуммаПолучено);
	ПараметрыГрафика.ДатаВозникновенияДолга = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ПараметрыГрафика.СпособПогашения) Тогда
		ПараметрыГрафика.СпособПогашения = ПредопределенноеЗначение("Перечисление.СпособыПогашенияКредита.РазовыйПлатеж");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрыГрафика.КошелекДляПогашения) Тогда
		ПараметрыГрафика.КошелекДляПогашения = Объект.Кошелек;
	КонецЕсли;
	
	Валюта = ?(ЗначениеЗаполнено(Объект.Кредит), Объект.ВалютаКредита, Объект.ВалютаПолучено);
	ПараметрыЗаполнения = Новый Структура("Контакт,ИспользоватьДляУчетаВыданныхДолгов,ИспользоватьДляУчетаВзятыхДолгов,Валюта,ПараметрыГрафика", 
		Объект.Кредитор, Ложь, Истина, Валюта, ПараметрыГрафика);
	ПараметрыОтбора = Новый Структура("Контакт,ИспользоватьДляУчетаВзятыхДолгов", Объект.Кредитор, Истина);
	ОткрытьФорму("Справочник.Долги.ФормаВыбора", 
		Новый Структура("ЗначенияЗаполнения,СкрыватьОстатокНаНачало, ТекстЗаполнения, Отбор", 
			ПараметрыЗаполнения, Истина, Элемент.ТекстРедактирования, ПараметрыОтбора), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КредитПриИзменении(Элемент)
	
	КредитПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КошелекПриИзменении(Элемент)

	КошелекПриИзмененииСервер();

КонецПроцедуры

&НаКлиенте
Процедура ФинансоваяЦельПриИзменении(Элемент)
	ОбновитьОстаткиДенег();
КонецПроцедуры

&НаКлиенте
Процедура СуммаПолученоПриИзменении(Элемент)
	
	Объект.СуммаКредита = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.СуммаПолучено,
		Объект.ВалютаПолучено, Объект.ВалютаКредита, КурсПолучено, КурсКредита, КратностьПолучено, КратностьКредита);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаКредитаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.СуммаПолучено) Тогда
		Объект.СуммаПолучено = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.СуммаКредита,
			Объект.ВалютаКредита, Объект.ВалютаПолучено, КурсКредита, КурсПолучено, КратностьКредита, КратностьПолучено);
	КонецЕсли; 
	
КонецПроцедуры

// Обслуживание плановых операций
&НаКлиенте
Процедура ИзменитьРасписание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПлановыеОперацииКлиент.ОткрытьРедакторРасписания(ЭтаФорма);
	
КонецПроцедуры

// Обслуживание плановых операций
&НаКлиенте
Процедура ИнформацияОШаблонеНажатие(Элемент, СтандартнаяОбработка)
	
	ПлановыеОперацииКлиент.ИнформацияОШаблонеНажатие(ЭтаФорма, Элемент, СтандартнаяОбработка, "МыВзялиВДолг");
	
КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура Подключаемый_ПриИзмененииАналитикиВШапке(Элемент)
	
	АналитикаСтатейКлиент.ПриИзмененииАналитикиВШапке(ЭтаФорма, Элемент);
	
КонецПроцедуры

#Область ПрикрепленныеФайлы

&НаКлиенте
Процедура ПредставлениеФайловОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ПрикрепленныеФайлыКлиент.ОбработчикНажатияНаПредставлениеФайлов(ЭтотОбъект, СтандартнаяОбработка, НавигационнаяСсылкаФорматированнойСтроки);
КонецПроцедуры

#КонецОбласти 


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРасходы

&НаКлиенте
Процедура ДополнительныеРасходыПриИзменении(Элемент)
	
	ТекстЗаголовка = НСтр("ru = 'Дополнительные расходы (%1)'");
	ИтогДопРасходов = Объект.ДополнительныеРасходы.Итог("СуммаРасхода");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, 
		Формат(ИтогДопРасходов, "ЧДЦ=2; ЧН=0; ЧГ=") + ?(ЗначениеЗаполнено(Объект.ВалютаПолучено) И ИтогДопРасходов <> 0 , " " + Объект.ВалютаПолучено, ""));
	Элементы.ГруппаСтраницаДополнительныеРасходы.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ДанныеСтроки = Элементы.ДополнительныеРасходы.ТекущиеДанные;
	ДанныеСтроки.КошелекРасхода = Объект.Кошелек;
	ДанныеСтроки.ФинансоваяЦель = Объект.ФинансоваяЦель;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	// Обслуживание аналитики статей:
	ТекущиеДанные = Элементы.ДополнительныеРасходы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И НЕ ЗначениеЗаполнено(ТекущиеДанные.СтатьяРасхода) Тогда
		СтатьяРасходаПриИзмененииСервер(Элементы.ДополнительныеРасходы.ТекущаяСтрока);
	КонецЕсли;
	Если НЕ АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
		АналитикаСтатейКлиент.ПриОкончанииРедактированияСтрокиТабличнойЧасти(ЭтаФорма, Истина, "ДополнительныеРасходы", ТекущиеДанные);
	Иначе
		УправлениеРеквизитамиАналитики();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыПослеУдаления(Элемент)
	
	// Обслуживание аналитики статей:
	Если НЕ АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
		АналитикаСтатейКлиент.ПослеУдаленияСтрокиТабличнойЧасти(ЭтаФорма, Истина, "ДополнительныеРасходы");
	Иначе
		УправлениеРеквизитамиАналитики();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыСтатьяРасходаПриИзменении(Элемент)
	
	СтатьяРасходаПриИзмененииСервер(Элементы.ДополнительныеРасходы.ТекущаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРасходыСтатьяРасходаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОбслуживаниеСправочниковКлиент.РасширенноеПолучениеДанныхОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура Подключаемый_НастройкаКолонокАналитики(Команда)

	АналитикаСтатейКлиент.ИзменитьНастройкиКолонокАналитики(ЭтаФорма, Истина, "МыВзялиВДолг");

КонецПроцедуры

// Обслуживание аналитики статей:
&НаКлиенте
Процедура НастройкаКолонокАналитикиЗавершение(НастройкиИзменены) Экспорт

	Если НастройкиИзменены Тогда
		УправлениеРеквизитамиАналитики(Истина, Истина);
	КонецЕсли; 

КонецПроцедуры
 

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Подготовка реквизитов формы
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	Если Объект.ВалютаКредита = ВалютаУчета Или  НЕ ЗначениеЗаполнено(Объект.ВалютаКредита) Тогда
		КурсКредита      = 1;
		КратностьКредита = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаКредита, Объект.Дата, ВалютаУчета);
		КурсКредита      = КурсИКратность.Курс;
		КратностьКредита = КурсИКратность.Кратность;
	КонецЕсли; 
	Если Объект.ВалютаПолучено = ВалютаУчета Или  НЕ ЗначениеЗаполнено(Объект.ВалютаПолучено) Тогда
		КурсПолучено      = 1;
		КратностьПолучено = 1;
	Иначе
		КурсИКратность    = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаПолучено, Объект.Дата, ВалютаУчета);
		КурсПолучено      = КурсИКратность.Курс;
		КратностьПолучено = КурсИКратность.Кратность;
	КонецЕсли; 
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Кошелек) Тогда
			Объект.Кошелек = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
		КонецЕсли; 
		Объект.ВалютаПолучено  = Объект.Кошелек.Валюта;
	КонецЕсли;
	
	// Контакт должен соответствовать долгу
	Если Объект.Кредитор <> Объект.Кредит.Контакт Тогда
		Объект.Кредитор = Объект.Кредит.Контакт;
		Модифицированность = Истина;
	КонецЕсли;
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПриСозданииНаСервере(ЭтаФорма, "", "", "СтатьяРасхода", "АналитикаСтатьи", "ДополнительныеРасходыКоманднаяПанель");
	
	// Заполнение дополнительных колонок и реквизитов
	ЗаполнитьДобавленныеКолонки();
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Проверка работы с шаблонами
	РаботаСФормамиДокументов.ПодготовитьФормуНаСервереПоРаботеСШаблонами(ЭтаФорма);
	
	#Область ПрикрепленныеФайлы
	ПрикрепленныеФайлыКлиентСервер.ОбновитьПредставлениеМедиафайлов(ЭтотОбъект);
	#КонецОбласти	
	
	ОбновитьОстаткиДенег();
	
	// Настройка внешнего вида
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонки()

	// Обслуживание аналитики статей:
	АналитикаСтатей.ЗаполнитьРеквизитыАналитикой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()

	// Обслуживание плановых операций
	ПлановыеОперацииКлиентСервер.ОбновитьИнформациюОСвязиОперацииСРасписанием(ЭтаФорма);
	
	// Обслуживание аналитики статей:
	УправлениеРеквизитамиАналитики();
	
	РаботаСФормамиДокументовКлиентСервер.ОбновитьСостояниеОперации(ЭтотОбъект);
	
	ПериодОстатков = ?(Объект.Проведен, Объект.Ссылка.МоментВремени(), КонецДня(ТекущаяДатаКлиентСервер()));
	ОстатокДолга     = РазделыУчета.ПолучитьОстатокПоСубконто(ПланыСчетов.РазделыУчета.Долги, Объект.Кредит, ПериодОстатков);
	
	ЭтоНоваяОперация = НЕ Объект.ЭтоШаблон И Объект.Ссылка.Пустая();
	ВидимостьФинансовойЦели = ЗначениеЗаполнено(Объект.Кошелек) И Объект.Кошелек.ИспользоватьДляНакоплений = Истина;
	
	Если ЗначениеЗаполнено(Объект.Кредитор) Тогда
		Массив = Новый Массив();
		Массив.Добавить(Новый СвязьПараметраВыбора("Отбор.Контакт", "Объект.Кредитор", РежимИзмененияСвязанногоЗначения.НеИзменять));
		Элементы.Кредит.СвязиПараметровВыбора  = Новый ФиксированныйМассив(Массив);
	Иначе
		Элементы.Кредит.СвязиПараметровВыбора  = Новый ФиксированныйМассив(Новый Массив());
	КонецЕсли;
	
	ТекстЗаголовка = НСтр("ru = 'Остаток до операции: %1 %2'");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Формат(ОстатокДолга, "ЧДЦ=2; ЧН=0,00"), Объект.Кредит.Валюта);
	Элементы.ОстатокДолга.Заголовок  = ТекстЗаголовка;
	
	// Финансовая цель
	Элементы.ФинансоваяЦель.Видимость = ВидимостьФинансовойЦели;
	
	// Сумма
	ВидимостьПересчетов = ЗначениеЗаполнено(Объект.ВалютаПолучено) 
		И ЗначениеЗаполнено(Объект.ВалютаКредита)
		И Объект.ВалютаПолучено <> Объект.ВалютаКредита;
	Элементы.СуммаКредита.Видимость  = ВидимостьПересчетов;
	Элементы.ВалютаКредита.Видимость = ВидимостьПересчетов;

	// Дополнительные расходы
	ТекстЗаголовка = НСтр("ru = 'Дополнительные расходы (%1)'");
	ИтогДопРасходов = Объект.ДополнительныеРасходы.Итог("СуммаРасхода");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, 
		Формат(ИтогДопРасходов, "ЧДЦ=2; ЧН=0; ЧГ=") + ?(ЗначениеЗаполнено(Объект.ВалютаПолучено) И ИтогДопРасходов <> 0 , " " + Объект.ВалютаПолучено, ""));
	Элементы.ГруппаСтраницаДополнительныеРасходы.Заголовок = ТекстЗаголовка;
	
	РаботаСФормамиДокументовКлиентСервер.ОбновитьЭлементыФормыПоСостояниюОперации(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура КредиторПриИзмененииСервер()

	Если Объект.Кредит.Контакт <> Объект.Кредитор Тогда
		Объект.Кредит = Неопределено;
	КонецЕсли;
	
	ДолгиКонтакта = РазделыУчета.ПолучитьАктуальныеДолгиКонтакта(Объект.Кредитор, Ложь, Истина);
	Если ДолгиКонтакта <> Неопределено И ДолгиКонтакта.Количество() = 1 Тогда
		Объект.Кредит = ДолгиКонтакта[0].Ссылка;
	КонецЕсли;
	КредитПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура КредитПриИзмененииСервер()

	Если ЗначениеЗаполнено(Объект.Кредит) Тогда
		Объект.Кредитор = Объект.Кредит.Контакт;
	КонецЕсли; 
		
	Объект.ВалютаКредита  = Объект.Кредит.Валюта;
	Если Объект.ВалютаКредита = ВалютаУчета ИЛИ  НЕ ЗначениеЗаполнено(Объект.ВалютаКредита) Тогда
		КурсКредита      = 1;
		КратностьКредита = 1;
	Иначе
		КурсИКратность = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаКредита, Объект.Дата, ВалютаУчета);
		КурсКредита      = КурсИКратность.Курс;
		КратностьКредита = КурсИКратность.Кратность;
	КонецЕсли; 
	
	Если Объект.ВалютаПолучено = Объект.ВалютаКредита Тогда
		Объект.СуммаПолучено = Объект.СуммаКредита;
	Иначе
		Объект.СуммаПолучено = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.СуммаКредита,
			Объект.ВалютаКредита, Объект.ВалютаПолучено, КурсКредита, КурсПолучено, КратностьКредита, КратностьПолучено);
	КонецЕсли; 
	
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Процедура КошелекПриИзмененииСервер()

	Объект.ВалютаПолучено = Объект.Кошелек.Валюта;
	Объект.ВалютаКредита  = Объект.Кредит.Валюта;
	Если Объект.ВалютаПолучено = ВалютаУчета Или  НЕ ЗначениеЗаполнено(Объект.ВалютаПолучено) Тогда
		КурсПолучено      = 1;
		КратностьПолучено = 1;
	Иначе
		КурсИКратность    = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Объект.ВалютаПолучено, Объект.Дата, ВалютаУчета);
		КурсПолучено      = КурсИКратность.Курс;
		КратностьПолучено = КурсИКратность.Кратность;
	КонецЕсли; 
	Для Каждого СтрокаРасхода Из Объект.ДополнительныеРасходы Цикл
		СтрокаРасхода.КошелекРасхода = Объект.Кошелек;
	КонецЦикла; 
	Если Объект.ВалютаКредита = Объект.ВалютаПолучено Тогда
		Объект.СуммаКредита = Объект.СуммаПолучено;
	Иначе
		Объект.СуммаКредита = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.СуммаПолучено,
			Объект.ВалютаПолучено, Объект.ВалютаКредита, КурсПолучено, КурсКредита, КратностьПолучено, КратностьКредита);
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.ФинансоваяЦель) Тогда
		Объект.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
	КонецЕсли;
	
	ОбновитьОстаткиДенег();
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиДенег()

	РаботаСФормамиДокументов.ОбновитьОстатокПоОбъектуУчета(ЭтотОбъект, "ОстатокВКошельке", 
			ПланыСчетов.РазделыУчета.Деньги, Объект.Кошелек, , Объект.ФинансоваяЦель, "ОстатокФинансоваяЦель");

КонецПроцедуры
 
// Обслуживание плановых операций
&НаСервере
Процедура ЗаполнитьДанныеПоШаблону(СсылкаНаШаблон)
	
	РаботаСФормамиДокументов.ОбновитьФормуОперацииПоШаблону(ЭтотОбъект, СсылкаНаШаблон);
	
	// Обслуживание аналитики статей:
	АналитикаСтатей.ПриСозданииНаСервере(ЭтаФорма, "", "", "СтатьяРасхода", "АналитикаСтатьи", "ДополнительныеРасходыКоманднаяПанель");
	
	// Заполнение дополнительных колонок и реквизитов
	ЗаполнитьДобавленныеКолонки();
	
	// Общие настройки форм элементов документов
	РаботаСФормамиДокументов.ФормаДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// Настройка внешнего вида
	УправлениеФормой();

КонецПроцедуры

// Обслуживание аналитики статей:
&НаСервере
Процедура УправлениеРеквизитамиАналитики(ИспользоватьЗначенияПоУмолчанию = Ложь, ПотеряДанныхРазрешена = Ложь)

	АналитикаСтатей.УправлениеФормой(ЭтаФорма, ИспользоватьЗначенияПоУмолчанию, ПотеряДанныхРазрешена);

КонецПроцедуры
 
// Обслуживание аналитики статей:
&НаСервере
Процедура СтатьяРасходаПриИзмененииСервер(ИДСтроки)

	СтрокаДокумента = Объект.ДополнительныеРасходы.НайтиПоИдентификатору(ИДСтроки);
	Если СтрокаДокумента <> Неопределено Тогда
		АналитикаСтатей.ПриИзмененииСтатьиВТабличнойЧасти(ЭтаФорма, СтрокаДокумента.СтатьяРасхода, "ДополнительныеРасходы", ИДСтроки);
	КонецЕсли; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяДатаКлиентСервер()
	#Если Сервер Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли 
КонецФункции 


// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

