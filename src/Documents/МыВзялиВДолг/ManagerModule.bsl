#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс

// Формирует и записывает движения в регистры учета
//
//Параметры:
//	СсылкаНаДокумент       - ДокументСсылка.МыВзялиВДолг - регистратор движений
//	ДвиженияДокумента      - КоллекцияДвижений или иная коллекция - наборы записей регистров учета
//	ДополнительныеСвойства - Структура - сордержит дополнительные свойства документа
//
Процедура СформироватьДвиженияДокумента(СсылкаНаДокумент, ДвиженияДокумента, ДополнительныеСвойства) Экспорт

	// Получаем таблицу для формирования движений
	Если ТипЗнч(ДополнительныеСвойства) <> Тип("Структура") Или Не ДополнительныеСвойства.Свойство("ТаблицыДокумента") Тогда
		ПроверитьДополнительныеСвойстваОперации(СсылкаНаДокумент, ДополнительныеСвойства);
	КонецЕсли;
	ТаблицыДокумента = ДополнительныеСвойства.ТаблицыДокумента;
	
	// Проводки для самого кредита
	Для Каждого СтрокаДокумента Из ТаблицыДокумента.Основное Цикл
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		// Добавляем проводки с учетом валют кредита и кошелька:
		РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, 
			СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
			СчетДенег, СтрокаДокумента.Кошелек, СтрокаДокумента.ФинансоваяЦель, СтрокаДокумента.СуммаПолучено, СтрокаДокумента.ВалютаПолучено,
			ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов, СтрокаДокумента.Кредит, Неопределено, СтрокаДокумента.СуммаКредита, СтрокаДокумента.ВалютаКредита,
			СтрокаДокумента.Комментарий);
		
	КонецЦикла;

	// Проводки по доп.расходам на получение кредита
	Для Каждого СтрокаДокумента Из ТаблицыДокумента.ДополнительныеРасходы Цикл
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		// Добавляем проводки с учетом валют кредита и кошелька:
		РазделыУчета.ДобавитьПроводкуВДвижения(ДвиженияДокумента.ЖурналОпераций, 
			СтрокаДокумента.Период, СтрокаДокумента.Регистратор,
			ПланыСчетов.РазделыУчета.Капитал, СтрокаДокумента.СтатьяРасхода, СтрокаДокумента.АналитикаСтатьи, СтрокаДокумента.СуммаРасхода, СтрокаДокумента.ВалютаКошелька,
			СчетДенег, СтрокаДокумента.КошелекРасхода, СтрокаДокумента.ФинансоваяЦель, СтрокаДокумента.СуммаРасхода, СтрокаДокумента.ВалютаКошелька,
			СтрокаДокумента.Комментарий);
		
	КонецЦикла;
	
	// Записываем движения в регистр фактических оборотов бюджета
	Если ТаблицыДокумента.Свойство("ОборотыБюджета") Тогда
		ДвиженияДокумента.ФактическиеОборотыБюджета.Загрузить(ТаблицыДокумента.ОборотыБюджета);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет структуру ДополнительныеСвойства значениями, необходимыми для дальнейшей обработки документа
//
//Параметры:
//	Операция               - ссылка или объект документа, зависит от контекста вызова этой процедуры
//	ДополнительныеСвойства - Структура или Неопределено - сордержит дополнительные свойства документа
//	ПроверятьТаблицыДокумента - Булево - заполнять ли таблицы для формирования движений
//
Процедура ПроверитьДополнительныеСвойстваОперации(Операция, ДополнительныеСвойства, ПроверятьТаблицыДокумента = Ложь) Экспорт

	// Выполняем проверку, одинаковую для всех документов
	ОбслуживаниеДокументов.ОбщаяПроверкаДополнительныхСвойствДокумента(Операция, ДополнительныеСвойства);
	
	Если ПроверятьТаблицыДокумента И Не ДополнительныеСвойства.Свойство("ТаблицыДокумента") Тогда
		ДополнительныеСвойства.Вставить("ТаблицыДокумента", ПолучитьВыборкиДляФормированияДвижений(Операция.Ссылка, ДополнительныеСвойства));
	КонецЕсли;
	
КонецПроцедуры

// Обновляет итоговые суммы и описание операции
Процедура ОбновитьИтоговыеСуммыДокумента(ДокументОбъект) Экспорт
	
	ДокументОбъект.ВалютаКредита               = ДокументОбъект.Кредит.Валюта;
	ДокументОбъект.ВалютаПолучено              = ДокументОбъект.Кошелек.Валюта;
	ДокументОбъект.СуммаДополнительныхРасходов = ДокументОбъект.ДополнительныеРасходы.Итог("СуммаРасхода");
	
	// Контакт должен соответствовать долгу
	Если ЗначениеЗаполнено(ДокументОбъект.Кредит) Тогда
		ДокументОбъект.Кредитор = ДокументОбъект.Кредит.Контакт;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ФинансоваяЦель) Тогда
		ДокументОбъект.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
	КонецЕсли; 
	
	Если ДокументОбъект.ЭтоШаблон Тогда
		Возврат;
	КонецЕсли; 
	
	ДокументОбъект.ОписаниеОперации = НСтр("ru = 'Мы взяли в долг [%1] в кошелек [%2]'");
	ДокументОбъект.ОписаниеОперации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДокументОбъект.ОписаниеОперации, ДокументОбъект.Кредит, ДокументОбъект.Кошелек);
	Если ДокументОбъект.ДополнительныеРасходы.Количество() > 0 Тогда
		ОписаниеРасходов = "";
		Для Каждого СтрокаРасхода Из ДокументОбъект.ДополнительныеРасходы Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаРасхода.ФинансоваяЦель) Тогда
				СтрокаРасхода.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаРасхода.СтатьяРасхода) Тогда
				ОписаниеРасходов = ОписаниеРасходов + ?(ОписаниеРасходов = "", "", ", ") 
					+ СтрокаРасхода.СтатьяРасхода;
			КонецЕсли; 
		КонецЦикла; 
		Если ЗначениеЗаполнено(ОписаниеРасходов) Тогда
			ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации + ". " + НСтр("ru = 'Доп. расходы'") + ": " + ОписаниеРасходов;
		КонецЕсли; 
	КонецЕсли; 
	ДокументОбъект.ОписаниеОперации = ДокументОбъект.ОписаниеОперации + ?(ЗначениеЗаполнено(ДокументОбъект.Комментарий), " (" + ДокументОбъект.Комментарий + ")", "");
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Дата");
	Поля.Добавить("ЭтоШаблон");
	Поля.Добавить("ОписаниеОперации");
	Поля.Добавить("СуммаПолучено");
	Поля.Добавить("ВалютаПолучено");
	Поля.Добавить("Кошелек");
	Поля.Добавить("Кредит");
	Поля.Добавить("Кредитор");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Данные.ЭтоШаблон Тогда
		Представление = ДеньгиКлиентСервер.СокращенноеПредставление(Данные.ОписаниеОперации, 250, Ложь);
	Иначе
		Представление = НСтр("ru='Мы взяли в долг от'") + " " + Формат(Данные.Дата, "ДФ='дд.ММ.гггг (ЧЧ:мм)'")
				+ ": " + Формат(Данные.СуммаПолучено, "ЧДЦ=2; ЧН=0.00") + " " + Данные.ВалютаПолучено
				+ " " + НСтр("ru='в'") + " " + ДеньгиКлиентСервер.СокращенноеПредставление(Строка(Данные.Кошелек))
				+ ?(ЗначениеЗаполнено(Данные.Кредитор), " " + НСтр("ru='от'") + " " + ДеньгиКлиентСервер.СокращенноеПредставление(Строка(Данные.Кредитор)) , "")
				+ ?(ЗначениеЗаполнено(Данные.Кредит), " " + НСтр("ru='в счет'") + " " + ДеньгиКлиентСервер.СокращенноеПредставление(Строка(Данные.Кредит)) , "")
				; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" Тогда
		
		РаботаСФормамиДокументов.ОпределитьФормуСпискаДляВыбора(Тип("ДокументСсылка.МыВзялиВДолг"), Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВыборкиДляФормированияДвижений(СсылкаНаДокумент, ДополнительныеСвойства) 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Запрос.УстановитьПараметр("ВалютаУчета", ДополнительныеСвойства.ВалютаУчета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеквизитыДокумента.Ссылка КАК Регистратор,
	|	РеквизитыДокумента.Дата КАК Период,
	|	РеквизитыДокумента.Кредит,
	|	РеквизитыДокумента.СуммаКредита,
	|	РеквизитыДокумента.ВалютаКредита,
	|	РеквизитыДокумента.СуммаПолучено,
	|	РеквизитыДокумента.ВалютаПолучено,
	|	РеквизитыДокумента.РазделУчета,
	|	РеквизитыДокумента.Кошелек,
	|	ЕСТЬNULL(РеквизитыДокумента.Кошелек.ИспользоватьДляНакоплений, ЛОЖЬ) КАК ИспользоватьДляНакоплений,
	|	РеквизитыДокумента.Комментарий,
	|	РеквизитыДокумента.ФинансоваяЦель,
	|	РеквизитыДокумента.ЭтоШаблон,
	|	ЕСТЬNULL(РеквизитыДокумента.Кошелек.ТипСчета, ЗНАЧЕНИЕ(Справочник.КошелькиИсчета.ПустаяСсылка)) КАК ТипСчета,
	|	РеквизитыДокумента.Проведен
	|ИЗ
	|	Документ.МыВзялиВДолг КАК РеквизитыДокумента
	|ГДЕ
	|	РеквизитыДокумента.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРасходы.Ссылка КАК Регистратор,
	|	ДопРасходы.Ссылка.Дата КАК Период,
	|	ДопРасходы.КошелекРасхода,
	|	ДопРасходы.СтатьяРасхода,
	|	ДопРасходы.СуммаРасхода,
	|	ЕСТЬNULL(ДопРасходы.КошелекРасхода.Валюта, &ВалютаУчета) КАК ВалютаКошелька,
	|	ЕСТЬNULL(ДопРасходы.КошелекРасхода.ИспользоватьДляНакоплений, ЛОЖЬ) КАК ИспользоватьДляНакоплений,
	|	ЕСТЬNULL(ДопРасходы.Ссылка.Комментарий, """") КАК Комментарий,
	|	ДопРасходы.АналитикаСтатьи,
	|	ДопРасходы.ФинансоваяЦель,
	|	ЕСТЬNULL(ДопРасходы.Ссылка.ЭтоШаблон, Ложь) КАК ЭтоШаблон,
	|	ЕСТЬNULL(ДопРасходы.КошелекРасхода.ТипСчета, ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Наличность)) КАК ТипСчета
	|ИЗ
	|	Документ.МыВзялиВДолг.ДополнительныеРасходы КАК ДопРасходы
	|ГДЕ
	|	ДопРасходы.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДопРасходы.НомерСтроки";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	СтруктураТаблиц = Новый Структура("Основное, ДополнительныеРасходы, ОбъектыОперации");
	СтруктураТаблиц.Основное              = ПакетРезультатов[0].Выгрузить();
	СтруктураТаблиц.ДополнительныеРасходы = ПакетРезультатов[1].Выгрузить();
	
	// Таблицы для записи объектов операции и фактических оборотов бюджета
	ТаблицаНабора = ОбслуживаниеДокументов.НоваяТаблицаРегистраОбъектыОпераций();
	Если СтруктураТаблиц.Основное.Количество() > 0 И 
			(СтруктураТаблиц.Основное[0].ЭтоШаблон ИЛИ СтруктураТаблиц.Основное[0].Проведен ИЛИ ДополнительныеСвойства.ЭтоПлановаяОперация) Тогда
		ОборотыБюджета = ОбслуживаниеДокументов.НоваяТаблицаРегистровОборотовБюджета();
	Иначе
		ОборотыБюджета = Неопределено;
	КонецЕсли;
	
	Для Каждого СтрокаДокумента Из СтруктураТаблиц.Основное Цикл
		
		СтатьяДолг = ?(ЗначениеЗаполнено(СтрокаДокумента.Кредит), СтрокаДокумента.Кредит, Справочники.ГрафыБюджета.ПолучениеКредита);
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		Если СтрокаДокумента.ИспользоватьДляНакоплений = Истина Тогда
			ФинЦель = ?(Не ЗначениеЗаполнено(СтрокаДокумента.ФинансоваяЦель), Справочники.ФинансовыеЦели.ОбщиеНакопления, СтрокаДокумента.ФинансоваяЦель);
		Иначе
			ФинЦель = Справочники.ФинансовыеЦели.ПустаяСсылка();
		КонецЕсли;
			
		ВалютаПолучено = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаПолучено), СтрокаДокумента.ВалютаПолучено, ДополнительныеСвойства.ВалютаУчета);
		ВалютаКредита  = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаКредита), СтрокаДокумента.ВалютаКредита, ДополнительныеСвойства.ВалютаУчета);
		
		// Получение денег
		ЗаписьНабора1 = ТаблицаНабора.Добавить();
		ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора1.Операция          = СсылкаНаДокумент;
		ЗаписьНабора1.РазделУчета       = СчетДенег;
		ЗаписьНабора1.ПредметУчета      = СтрокаДокумента.Кошелек;
		ЗаписьНабора1.ФинансоваяЦель    = ФинЦель;
		ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
		ЗаписьНабора1.СуммаПоступления  = СтрокаДокумента.СуммаПолучено;
		ЗаписьНабора1.Валюта            = ВалютаПолучено;
		
		// Увеличение долга
		ЗаписьНабора2 = ТаблицаНабора.Добавить();
		ЗаписьНабора2.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора2.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора2.Операция          = СсылкаНаДокумент;
		ЗаписьНабора2.РазделУчета       = ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов;
		ЗаписьНабора2.ПредметУчета      = СтатьяДолг;
		ЗаписьНабора2.ФинансоваяЦель    = ФинЦель;
		ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
		ЗаписьНабора2.СуммаПоступления  = СтрокаДокумента.СуммаКредита;
		ЗаписьНабора2.Валюта            = ВалютаКредита;
		
		// Фактические обороты бюджета
		Если ОборотыБюджета <> Неопределено Тогда
			
			ЗаписьНабора = ОборотыБюджета.Добавить();
			ЗаписьНабора.Период           = СтрокаДокумента.Период;
			ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
			ЗаписьНабора.РазделБюджета    = ФинЦель;
			ЗаписьНабора.СтатьяБюджета    = СтатьяДолг;
			ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
			ЗаписьНабора.Валюта           = ВалютаПолучено;
			ЗаписьНабора.Кошелек          = СтрокаДокумента.Кошелек;
			ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаПолучено;
			ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
			
			// Если оплата произошла с кредитной карты, автоматически добавляем перевод с кредитки в доступные деньги
			Если СтрокаДокумента.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦель;
				ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.Кошелек;
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
				ЗаписьНабора.Валюта           = ВалютаПолучено;
				ЗаписьНабора.Кошелек          = Неопределено;
				ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаПолучено;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ФинЦель) Тогда
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
			
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора2);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
		КонецЕсли; 
		
		Если ВалютаКредита <> ВалютаПолучено Тогда
			
			// Добавляем строки с обменом валют
			ЗаписьНабора3 = ТаблицаНабора.Добавить();
			ЗаписьНабора3.Дата              = СтрокаДокумента.Период;
			ЗаписьНабора3.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
			ЗаписьНабора3.Операция          = СсылкаНаДокумент;
			ЗаписьНабора3.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
			ЗаписьНабора3.ПредметУчета      = Справочники.СтатьиДоходов.ОбменВалюты;
			ЗаписьНабора3.ФинансоваяЦель    = СтрокаДокумента.ФинансоваяЦель;
			ЗаписьНабора3.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Перемещение;
			ЗаписьНабора3.СуммаПоступления  = СтрокаДокумента.СуммаПолучено;
			ЗаписьНабора3.Валюта            = ВалютаПолучено;
			
			ЗаписьНабора4 = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора4, ЗаписьНабора3);
			ЗаписьНабора4.ПредметУчета      = Справочники.Статьирасходов.ОбменВалюты;
			ЗаписьНабора4.СуммаПоступления  = 0;
			ЗаписьНабора4.СуммаСписания     = СтрокаДокумента.СуммаКредита;
			ЗаписьНабора4.Валюта            = ВалютаКредита;
			
			Если ЗначениеЗаполнено(ФинЦель) Тогда
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора3);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
				
				ЗаписьНабора = ТаблицаНабора.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора4);
				ЗаписьНабора.ФинансоваяЦель = Неопределено;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Для Каждого СтрокаДокумента Из СтруктураТаблиц.ДополнительныеРасходы Цикл
		
		СчетДенег = ?(СтрокаДокумента.ИспользоватьДляНакоплений = Истина, ПланыСчетов.РазделыУчета.Накопления, ПланыСчетов.РазделыУчета.СвободныеДеньги);
		ФинЦель = ?(ЗначениеЗаполнено(СтрокаДокумента.ФинансоваяЦель) И СтрокаДокумента.ФинансоваяЦель <> Справочники.ФинансовыеЦели.ОбщиеНакопления, 
			СтрокаДокумента.ФинансоваяЦель, Неопределено);
		ВалютаКошелька = ?(ЗначениеЗаполнено(СтрокаДокумента.ВалютаКошелька), СтрокаДокумента.ВалютаКошелька, ДополнительныеСвойства.ВалютаУчета);
			
		ЗаписьНабора1 = ТаблицаНабора.Добавить();
		ЗаписьНабора1.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора1.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора1.Операция          = СсылкаНаДокумент;
		ЗаписьНабора1.РазделУчета       = СчетДенег;
		ЗаписьНабора1.ПредметУчета      = СтрокаДокумента.КошелекРасхода;
		ЗаписьНабора1.ФинансоваяЦель    = Финцель;
		ЗаписьНабора1.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
		ЗаписьНабора1.СуммаСписания     = СтрокаДокумента.СуммаРасхода;
		ЗаписьНабора1.Валюта            = ВалютаКошелька;
		
		ЗаписьНабора2 = ТаблицаНабора.Добавить();
		ЗаписьНабора2.Дата              = СтрокаДокумента.Период;
		ЗаписьНабора2.ЭтоШаблон         = СтрокаДокумента.ЭтоШаблон;
		ЗаписьНабора2.Операция          = СсылкаНаДокумент;
		ЗаписьНабора2.РазделУчета       = ПланыСчетов.РазделыУчета.Капитал;
		ЗаписьНабора2.ПредметУчета      = СтрокаДокумента.СтатьяРасхода;
		ЗаписьНабора2.ФинансоваяЦель    = Финцель;
		ЗаписьНабора2.ТипПоказателя     = Перечисления.ТипыБюджетныхПоказателей.Поступление;
		ЗаписьНабора2.СуммаСписания     = СтрокаДокумента.СуммаРасхода;
		ЗаписьНабора2.Валюта            = ВалютаКошелька;
		
		Если ЗначениеЗаполнено(ФинЦель) Тогда
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора1);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
			
			ЗаписьНабора = ТаблицаНабора.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЗаписьНабора2);
			ЗаписьНабора.ФинансоваяЦель = Неопределено;
		КонецЕсли; 
		
		// Фактические обороты бюджета
		Если ОборотыБюджета <> Неопределено Тогда
			
			ЗаписьНабора = ОборотыБюджета.Добавить();
			ЗаписьНабора.Период           = СтрокаДокумента.Период;
			ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
			ЗаписьНабора.РазделБюджета    = ФинЦель;
			ЗаписьНабора.СтатьяБюджета    = ?(ЗначениеЗаполнено(СтрокаДокумента.СтатьяРасхода), СтрокаДокумента.СтатьяРасхода, Справочники.СтатьиРасходов.ПрочиеРасходы);
			ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Списание;
			ЗаписьНабора.Валюта           = ВалютаКошелька;
			ЗаписьНабора.Кошелек          = СтрокаДокумента.КошелекРасхода;
			ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаРасхода;
			ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
			
			// Если оплата произошла с кредитной карты, автоматически добавляем перевод с кредитки в доступные деньги
			Если СтрокаДокумента.ТипСчета = Перечисления.ТипыСчетов.БанковскаяКартаКредитная Тогда
				ЗаписьНабора = ОборотыБюджета.Добавить();
				ЗаписьНабора.Период           = СтрокаДокумента.Период;
				ЗаписьНабора.Регистратор      = СтрокаДокумента.Регистратор;
				ЗаписьНабора.РазделБюджета    = ФинЦель;
				ЗаписьНабора.СтатьяБюджета    = СтрокаДокумента.КошелекРасхода;
				ЗаписьНабора.ТипПоказателя    = Перечисления.ТипыБюджетныхПоказателей.Поступление;
				ЗаписьНабора.Валюта           = ВалютаКошелька;
				ЗаписьНабора.Кошелек          = Неопределено;
				ЗаписьНабора.Сумма            = СтрокаДокумента.СуммаРасхода;
				ЗаписьНабора.Комментарий      = СтрокаДокумента.Комментарий;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; 

	ТаблицаНабора.Свернуть("Дата, ЭтоШаблон, Операция, РазделУчета, ПредметУчета, ФинансоваяЦель, ТипПоказателя, Валюта", "СуммаПоступления, СуммаСписания");
	СтруктураТаблиц.Вставить("ОбъектыОперации", ТаблицаНабора);
	
	Если ОборотыБюджета <> Неопределено Тогда
		ОборотыБюджета.Свернуть("Период,Регистратор,РазделБюджета,СтатьяБюджета,ТипПоказателя,Валюта,Кошелек,Комментарий", "Сумма");
		СтруктураТаблиц.Вставить("ОборотыБюджета", ОборотыБюджета);
	КонецЕсли;
	
	Возврат СтруктураТаблиц;

КонецФункции

#КонецОбласти


#КонецЕсли