#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		// Заполняем из структуры рекивизиты объекта, для которых установлено "Заполнять из данных заполнения"
		ОбщегоНазначенияДеньги.ЗаполнитьОбъектПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
		
		// Если в данных заполнения есть реквизиты для табличной части "Расходы", добавим первую строку
		Если Расходы.Количество() = 0 Тогда
			
			ФинЦельИзДанныхЗаполнения = Неопределено;
			ДанныеЗаполнения.Свойство("ФинансоваяЦель", ФинЦельИзДанныхЗаполнения);
			СтатьяИзДанныхЗаполнения  = Неопределено;
			ДанныеЗаполнения.Свойство("СтатьяРасходаИмущество", СтатьяИзДанныхЗаполнения);
			
			Если ЗначениеЗаполнено(ФинЦельИзДанныхЗаполнения) ИЛИ ЗначениеЗаполнено(СтатьяИзДанныхЗаполнения) Тогда
				СтрокаРасхода = Расходы.Добавить();
				СтрокаРасхода.ФинансоваяЦель = ?(ЗначениеЗаполнено(ФинЦельИзДанныхЗаполнения), ФинЦельИзДанныхЗаполнения, Справочники.ФинансовыеЦели.ОбщиеНакопления);
				СтрокаРасхода.СтатьяРасходаИмущество = ?(ЗначениеЗаполнено(СтатьяИзДанныхЗаполнения), СтатьяИзДанныхЗаполнения, Справочники.СтатьиРасходов.ПустаяСсылка());
				СтрокаРасхода.Сумма = СуммаЧека;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	// Проверяем реквизиты нового документа в соответствии с настройками пользователя
	ОбслуживаниеДокументов.ПроверитьЗаполнениеНовогоДокумента(ЭтотОбъект);
	
	// Заполняем по умолчанию незаполненные реквизиты, значение которых зависит от настроек и прочих условий
	Если Не ЗначениеЗаполнено(КошелекДолг) Тогда
		КошелекДолг = ПользовательскиеНастройкиДеньгиСервер.ОсновнойКошелек();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВалютаОперации) Или ЗначениеЗаполнено(КошелекДолг) И ВалютаОперации <> КошелекДолг.Валюта Тогда
		ВалютаОперации = ?(ЗначениеЗаполнено(КошелекДолг), КошелекДолг.Валюта, Константы.ВалютаУчета.Получить());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Дата) И Не ЭтоШаблон Тогда
		Дата = ОбслуживаниеДокументов.ДатаНовогоДокумента();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	// Общий функционал документов:
	ОбщегоНазначенияДеньги.ОбработкаСобытияПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ЭтоШаблон Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КошелекДолг");
		МассивНепроверяемыхРеквизитов.Добавить("Расходы");
		МассивНепроверяемыхРеквизитов.Добавить("Расходы.СтатьяРасходаИмущество");
	КонецЕсли; 
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Проверяем/заполняем итоговые и информационные реквизиты
	
	// Заполним структуру "ДополнительныеСвойства" значениями, нужными при записи и проведении документа
	Документы.Расход.ПроверитьДополнительныеСвойстваОперации(ЭтотОбъект, ДополнительныеСвойства, Ложь);
	
	// Определим раздел учета, используемый в формировании движений
	Если ТипЗнч(КошелекДолг) = Тип("СправочникСсылка.Долги") Тогда
		РазделУчета = ПланыСчетов.РазделыУчета.ОсновныеСуммыДолгов;
	ИначеЕсли ТипЗнч(КошелекДолг) = Тип("СправочникСсылка.КошелькиИСчета") Тогда
		Если КошелекДолг.ИспользоватьДляНакоплений Тогда
			РазделУчета = ПланыСчетов.РазделыУчета.Накопления;
		Иначе
			РазделУчета = ПланыСчетов.РазделыУчета.СвободныеДеньги;
		КонецЕсли; 
	Иначе
		РазделУчета = ПланыСчетов.РазделыУчета.СвободныеДеньги;
	КонецЕсли; 
	
	// Проверим финансовую цель в строках операции
	Для Каждого СтрокаДокумента Из Расходы Цикл
		Если РазделУчета = ПланыСчетов.РазделыУчета.Накопления И НЕ ЗначениеЗаполнено(СтрокаДокумента.ФинансоваяЦель) Тогда
			СтрокаДокумента.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления;
		ИначеЕсли РазделУчета <> ПланыСчетов.РазделыУчета.Накопления И СтрокаДокумента.ФинансоваяЦель = Справочники.ФинансовыеЦели.ОбщиеНакопления Тогда
			// Для кошелька без накоплений финансовую цель очищаем только если она не указана явно
			СтрокаДокумента.ФинансоваяЦель = Справочники.ФинансовыеЦели.ПустаяСсылка();
		КонецЕсли; 
	КонецЦикла; 
	
	// Валюта операции должна соответствовать валюте объекта операции
	Если НЕ ЗначениеЗаполнено(ВалютаОперации) ИЛИ ЗначениеЗаполнено(КошелекДолг) И КошелекДолг.Валюта <> ВалютаОперации Тогда
		ВалютаОперации = ?(ЗначениеЗаполнено(КошелекДолг), КошелекДолг.Валюта, ДополнительныеСвойства.ВалютаУчета);
		ДополнительныеСвойства.ВалютаОперации = ВалютаОперации;
	КонецЕсли;
	
	// Получаем сгруппированные табличные части
	ВыборкиТабличныхЧастей = ПолучитьВыборкиИзТабличныхЧастей();
	
	// Обновляем итоги операции
	ОбновитьИтоговыеСуммы(ВыборкиТабличныхЧастей.ИтоговыеСуммы);
	
	// Формируем описание операции
	Если ЭтоШаблон Тогда
		
		Проведен = Ложь; //шаблон не может быть проведен, т.к. его движения не зависят от "проведенности" или актуальности
		Если РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли; 
		
		// Описание операции является наименованием шаблона
		
	Иначе
		
		// Описание операции формируется из табличных частей
		ОбновитьОписаниеОперации(ВыборкиТабличныхЧастей.ОбщаяАналитика, 
				ВыборкиТабличныхЧастей.РезультатСтатьиИмущество, 
				ВыборкиТабличныхЧастей.КомментарииСтрок);

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	// Заполняем дополнительные реквизиты информацией, необходимой для формирования записей в регистры
	Документы.Расход.ПроверитьДополнительныеСвойстваОперации(ЭтотОбъект, ДополнительныеСвойства, Истина);
	ОбслуживаниеДокументов.ПриЗаписиОбъектаДокумента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ОбменДанными.Загрузка ИЛИ ЭтоШаблон Тогда
		Возврат;
	КонецЕсли; 
	
	Документы.Расход.СформироватьДвиженияДокумента(Ссылка, Движения, ДополнительныеСвойства);
	ПлановыеОперации.ПроверитьОборотыПлановойОоперацииПриПроведении(ЭтотОбъект);
	
	Движения.ЖурналОпераций.Записывать                         = Истина;
	Движения.ИспользованиеСуммФинансовыхЦелей.Записывать       = Истина;
	Движения.КоличественныеОборотыПоСтатьямРасходов.Записывать = Истина;
	Движения.ФактическиеОборотыБюджета.Записывать              = Истина;
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Возвращает структуру, заполненную информацией из табличных частей операции,
//	сгруппированной для получения текстов описаний и итоговых сумм
//
//  Возвращаемое значение:
//      Структура, содержит результаты запроса
//
Функция ПолучитьВыборкиИзТабличныхЧастей() 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Расходы", Расходы.Выгрузить());
	Запрос.УстановитьПараметр("АналитикаДокумента", АналитикаДокумента.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходРасходы.СтатьяРасходаИмущество,
	|	РасходРасходы.Сумма,
	|	РасходРасходы.Скидка,
	|	РасходРасходы.АналитикаСтатьи,
	|	РасходРасходы.КомментарийСтроки,
	|	РасходРасходы.ФинансоваяЦель,
	|	РасходРасходы.НомерСтроки
	|ПОМЕСТИТЬ СтрокиДокумента
	|ИЗ
	|	&Расходы КАК РасходРасходы
	|;
	|
	|//(1)//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СтрокиДокумента.СтатьяРасходаИмущество ССЫЛКА Справочник.Имущество
	|				ТОГДА СтрокиДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтоимостьИмущества,
	|	СУММА(СтрокиДокумента.Сумма) КАК СуммаОплаты,
	|	СУММА(СтрокиДокумента.Скидка) КАК Скидка
	|ИЗ
	|	СтрокиДокумента КАК СтрокиДокумента
	|";
	
	Если НЕ ЭтоШаблон Тогда
		Запрос.Текст = 	Запрос.Текст +
		";
		|
		|//(2)//////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходАналитикаДокумента.РедактироватьВШапке,
		|	РасходАналитикаДокумента.ЗначениеАналитикиВШапке
		|ПОМЕСТИТЬ ТаблицаОбщейАналитики
		|ИЗ
		|	&АналитикаДокумента КАК РасходАналитикаДокумента
		|;
		|
		|//(3)//////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОбщейАналитики.ЗначениеАналитикиВШапке.Представление КАК Представление
		|ИЗ
		|	ТаблицаОбщейАналитики КАК ТаблицаОбщейАналитики
		|ГДЕ
		|	ТаблицаОбщейАналитики.РедактироватьВШапке И ТаблицаОбщейАналитики.ЗначениеАналитикиВШапке <> НЕОПРЕДЕЛЕНО
		|;
		|
		|//(4)//////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтрокиДокумента.СтатьяРасходаИмущество,
		|	СтрокиДокумента.СтатьяРасходаИмущество.Представление КАК Представление
		|ИЗ
		|	СтрокиДокумента КАК СтрокиДокумента
		|;
		|
		|//(5)//////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтрокиДокумента.СтатьяРасходаИмущество,
		|	ВЫРАЗИТЬ(СтрокиДокумента.КомментарийСтроки КАК СТРОКА(1000)) КАК КомментарийСтроки
		|ИЗ
		|	СтрокиДокумента КАК СтрокиДокумента
		|ГДЕ
		|	ВЫРАЗИТЬ(СтрокиДокумента.КомментарийСтроки КАК СТРОКА(10)) <> """"
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьяРасходаИмущество
		|";
	КонецЕсли;

	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураРезультатов = СтруктураВыборокИзТаблиичныхЧастей();
	СтруктураРезультатов.ИтоговыеСуммы =  ПакетРезультатов[1];
	
	Если НЕ ЭтоШаблон Тогда
		СтруктураРезультатов.ОбщаяАналитика   = ПакетРезультатов[3];
		СтруктураРезультатов.РезультатСтатьиИмущество   = ПакетРезультатов[4];
		СтруктураРезультатов.КомментарииСтрок = ПакетРезультатов[5];
	КонецЕсли;
	
	Возврат СтруктураРезультатов;
	
КонецФункции

Функция СтруктураВыборокИзТаблиичныхЧастей() 

	Результат = Новый Структура;
	Результат.Вставить("ИтоговыеСуммы",             Неопределено);
	Результат.Вставить("ОбщаяАналитика",            Неопределено);
	Результат.Вставить("РезультатСтатьиИмущество",  Неопределено);
	Результат.Вставить("КомментарииСтрок",          Неопределено);

	Возврат Результат;
	
КонецФункции
 
Процедура ОбновитьИтоговыеСуммы(РезультатЗапроса) 
	
	СуммаОплаты        = 0;
	СуммаСкидки        = 0;
	СтоимостьИмущества = 0;
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			СуммаОплаты        = Выборка.СуммаОплаты;
			СуммаСкидки        = Выборка.Скидка;
			СтоимостьИмущества = Выборка.СтоимостьИмущества;
		КонецЕсли;
	КонецЕсли;
	 
	
КонецПроцедуры

Процедура ОбновитьОписаниеОперации(ОбщаяАналитика, РезультатСтатьиИмущество, КомментарииСтрок) 
	
	ОписаниеОперации = "";
	Если ЗначениеЗаполнено(КошелекДолг) Тогда
		Если ТипЗнч(КошелекДолг) = Тип("СправочникСсылка.Долги") Тогда
			ОписаниеОперации = НСтр("ru='Расход в долг [%1]'"); 
		Иначе
			ОписаниеОперации = НСтр("ru='Расход из кошелька [%1]'"); 
		КонецЕсли;
		ОписаниеОперации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеОперации, КошелекДолг);
	Иначе
		ОписаниеОперации = НСтр("ru='Расход'"); 
	КонецЕсли;
	
	// Добавляем описание общей для всего документа аналитики
	Если НЕ ОбщаяАналитика.Пустой() Тогда
		Выборка = ОбщаяАналитика.Выбрать();
		ТекстОбщейАналитики = "";
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Представление) Тогда
				ТекстОбщейАналитики = ТекстОбщейАналитики + Выборка.Представление + ", ";
			КонецЕсли;
		КонецЦикла;
		Если ТекстОбщейАналитики <> "" Тогда
			ТекстОбщейАналитики = Сред(ТекстОбщейАналитики, 1, СтрДлина(ТекстОбщейАналитики) - 2);
			ОписаниеОперации = ОписаниеОперации + " (" + ТекстОбщейАналитики + ")";
		КонецЕсли;
	КонецЕсли;
	
	// Добавляем представления статей и имущества, дополнив их подробностями и аналитикой по каждой строке
	ТекстСтатей = "";
	Если НЕ РезультатСтатьиИмущество.Пустой() Тогда
		
		ТаблицаКомментариев      = КомментарииСтрок.Выгрузить();
		
		ВыборкаСтатей = РезультатСтатьиИмущество.Выбрать();
		Пока ВыборкаСтатей.Следующий() Цикл
			
			СтрокаСтатьи = "";
			Если ЗначениеЗаполнено(ВыборкаСтатей.СтатьяРасходаИмущество) Тогда
				
				СтрокаСтатьи = СокрЛП(ВыборкаСтатей.Представление);
				
				// Если есть комментарии, добавляем их
				СтрокаПодробностей = "";
				МассивСтрок = ТаблицаКомментариев.НайтиСтроки(Новый Структура("СтатьяРасходаИмущество", ВыборкаСтатей.СтатьяРасходаИмущество));
				Для каждого СтрокаТаблицы Из МассивСтрок Цикл
					Если ЗначениеЗаполнено(СтрокаТаблицы.КомментарийСтроки) Тогда
						СтрокаПодробностей = СтрокаПодробностей + СтрокаТаблицы.КомментарийСтроки + ", ";
					КонецЕсли;
				КонецЦикла;
				
				Если ЗначениеЗаполнено(СтрокаПодробностей) Тогда
					СтрокаПодробностей = Сред(СтрокаПодробностей, 1, СтрДлина(СтрокаПодробностей) - 2);
					СтрокаСтатьи = СтрокаСтатьи + " (" + СтрокаПодробностей + ")";
				КонецЕсли;
				  
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаСтатьи) Тогда
				ТекстСтатей = ТекстСтатей + СтрокаСтатьи + ", ";
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстСтатей) Тогда
		ТекстСтатей = Сред(ТекстСтатей, 1, СтрДлина(ТекстСтатей) - 2);
		ОписаниеОперации = ОписаниеОперации + ": " + ТекстСтатей;
	КонецЕсли;
	 
	
КонецПроцедуры

#КонецОбласти	


#КонецЕсли
