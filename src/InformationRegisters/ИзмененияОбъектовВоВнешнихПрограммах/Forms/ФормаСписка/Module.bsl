
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработка параметра "Отбор":
	Если Элементы.Список.РежимВыбора ИЛИ Параметры.ТолькоПоследниеИзменения Тогда 
		
		ЭтотОбъект.КлючНазначенияИспользования = "ОтборПоПоследнемуЗначению";
		//Список.АвтоматическоеСохранениеПользовательскихНастроек = Ложь;
		
	ИначеЕсли Параметры.Отбор.Количество() > 0 Тогда
		
		ЭтотОбъект.КлючНазначенияИспользования = "ОтборПоПолученнымПараметрам";
		
	КонецЕсли; 
	
	Если Параметры.ТолькоПоследниеИзменения И Параметры.Отбор.Свойство("МестоИзменения") И ЗначениеЗаполнено(Параметры.Отбор.МестоИзменения) Тогда
		НомерСообщения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.МестоИзменения, "НомерПринятого");
		Параметры.Отбор.Вставить("НомерСообщения", НомерСообщения);
		Заголовок = НСтр("ru='Получено от <%1> в сообщении № <%2>'"); 
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Заголовок, Параметры.Отбор.МестоИзменения, НомерСообщения);
	КонецЕсли;
	
	// Переносим условия отбора в пользовательские настройки, чтобы пользователь имел возможность поправить их
	Если ЭтотОбъект.КлючНазначенияИспользования = "ОтборПоПоследнемуЗначению" Тогда
		ЗаменитьОтборВПользовательскихНастройках(Список.КомпоновщикНастроек.ПользовательскиеНастройки, Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки, Параметры.Отбор);
		Параметры.Отбор.Очистить();
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "МестоИзменения" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.МестоИзменения) Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.МестоИзменения);
	ИначеЕсли ЗначениеЗаполнено(Элемент.ТекущиеДанные.Объект) Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	Если ЭтотОбъект.КлючНазначенияИспользования = "ОтборПоПоследнемуЗначению" Тогда
		
		// Если пользователь ни разу не менял настроек, события СписокПередЗагрузкойПользовательскихНастроекНаСервере() не произойдет 
		// Поэтому отбор в параметрах очищается при создании на сервере, а сохраненные настройки заполняются из настроек компоновщика
		ЗаменитьОтборВПользовательскихНастройках(Настройки, Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки, 
				Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки));
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СписокПриСохраненииПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	Если ЭтотОбъект.КлючНазначенияИспользования = "ОтборПоПоследнемуЗначению" Тогда
		ОтборНастроек = Настройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
		Если ОтборНастроек <> Неопределено Тогда
			ОтборНастроек.Элементы.Очистить();
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста 
Процедура ЗаменитьОтборВПользовательскихНастройках(Настройки, Идентификатор, Отбор)

	ОтборНастроек = Настройки.Элементы.Найти(Идентификатор);
	
	Если ОтборНастроек <> Неопределено Тогда
		
		ОтборНастроек.Элементы.Очистить();
		
		Если ТипЗнч(Отбор) = Тип("Структура") Тогда
			
			Для Каждого УсловиеОтбора Из Отбор Цикл
				
				ТипЗначенияОтбора = ТипЗнч(УсловиеОтбора.Значение);
				Если ТипЗначенияОтбора = Тип("Массив")
					ИЛИ ТипЗначенияОтбора = Тип("ФиксированныйМассив")
					ИЛИ ТипЗначенияОтбора = Тип("СписокЗначений") Тогда
					ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.ВСписке
				Иначе
					ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли; 
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборНастроек, УсловиеОтбора.Ключ, УсловиеОтбора.Значение,
									ВидСравненияОтбора, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
				
			КонецЦикла; 
			
			Отбор.Очистить();
		
		Иначе
			
			Для Каждого ЭлементОтбора Из Отбор.Элементы Цикл
				
				НовыйЭлемент = ОтборНастроек.Элементы.Добавить(ТипЗнч(ЭлементОтбора));
				ЗаполнитьЗначенияСвойств(НовыйЭлемент, ЭлементОтбора);
				
				//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборНастроек, ЭлементОтбора.ЛевоеЗначение, УсловиеОтбора.ПравоеЗначение,
				//					УсловиеОтбора.ВидСравнения, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
				
			КонецЦикла; 
			
		КонецЕсли; 
		
		
	КонецЕсли;

КонецПроцедуры
 

#КонецОбласти

