
#Область ПрограммныйИнтерфейс

// Добавляет в регистр запись об изменении в указанном узле
//
// Параметры:
//	СсылкаНаОбъект - ЛюбаяСсылка - объект, изменения которого получены из узла плана обмена
//	УзелПланаОбмена - ПланОбменаСсылка - узел, из которого получены изменения
//	НомерСообщения  - Число (по умолчанию Неопределено) - номер принятого от узла сообщения.
//						Если Неопределено, номер будет получен из реквизита узла и увеличен на единицу
//
//
Процедура ЗарегистрироватьИзменениеОбъекта(СсылкаНаОбъект, УзелПланаОбмена, НомерСообщения = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) ИЛИ НЕ ЗначениеЗаполнено(УзелПланаОбмена) Тогда
		Возврат;
	КонецЕсли;
	
	Если НомерСообщения = Неопределено Тогда
		// Стандартная регистрация места изменения происходит в момент чтения сообщения, 
		// когда номер принятого еще не обновлен. 
		// Условно считаем, что номер сообщения следующий по порядку
		НомерСообщения = УзелПланаОбмена.НомерПринятого + 1;
	КонецЕсли;
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект         = СсылкаНаОбъект;
	МенеджерЗаписи.МестоИзменения = УзелПланаОбмена;
	МенеджерЗаписи.НомерСообщения = НомерСообщения;
	МенеджерЗаписи.ДатаПолученияИзменений = ТекущаяДатаСеанса();
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

// Удаляет регистрации изменений старше указанного номера
Процедура УдалитьРегистрацииУзла(УзелПланаОбмена, ПосленийНомерСообщения = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ПосленийНомерСообщения) И ПосленийНомерСообщения > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НомерСообщения", ПосленийНомерСообщения);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИзмененияОбъектовВоВнешнихПрограммах.Объект,
		|	ИзмененияОбъектовВоВнешнихПрограммах.МестоИзменения
		|ИЗ
		|	РегистрСведений.ИзмененияОбъектовВоВнешнихПрограммах КАК ИзмененияОбъектовВоВнешнихПрограммах
		|ГДЕ
		|	ИзмененияОбъектовВоВнешнихПрограммах.НомерСообщения < &НомерСообщения";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Запись = СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Удалить();
			
		КонецЦикла;
		
	Иначе
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.МестоИзменения.Установить(УзелПланаОбмена);
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
	
	
КонецПроцедуры
 

#КонецОбласти


#Область ОбработчикиСобытий



#КонецОбласти


#Область СлужебныеПроцедурыИФункции



#КонецОбласти