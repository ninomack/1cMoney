#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс

// Возвращает оработанные значения указанного элемента справочника. Для пустой ссылки или при отсутствии записей в регистре
//будет возвращена структура со значениями по умолчанию и свойством "ЕстьОбработанныеРеквизиты" = Ложь
//
//Параметры:
//	Ссылка - СправочникСсылка - ссылка, для которой нужно вернуть обработанные значения
//
//Возвращаемое значение:
//	Структура - свойтва структуры соответствуют измерениям и ресурсам регистра, плюс:
//		* ЕстьОбработанныеРеквизиты - Булево - Истина, если в регистре есть запись для указанной ссылки и Ложь в обратном случае
//
Функция ТекущиеЗначенияПоСсылке(Ссылка) Экспорт

	Результат = НоваяСтруктураОбработанныхЗначений();
	Результат.Ссылка = Ссылка;
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запись = РегистрыСведений.ОбработанныеЗначенияСправочников.СоздатьМенеджерЗаписи();
	Запись.Ссылка = Ссылка;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Запись);
		Результат.Активность = Запись.Активный;
		Если Запись.КлючевыеРеквизиты <> Неопределено Тогда
			Результат.КлючевыеРеквизиты = Запись.КлючевыеРеквизиты.Получить();
		КонецЕсли;
		
		Результат.ЕстьОбработанныеРеквизиты = Истина;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Обновляет обработанные значения указанной ссылки справочника. Обновлены будут только значения, указаные в параметре "НовыеЗначения"
//
//Параметры:
//	Ссылка - СправочникСсылка - ссылка, для которой нужно вернуть обработанные значения
//	НовыеЗначения - Структура - ключи соответствуют ресурсам регистра, значения - обработанным значеним
//
Процедура ОбновитьЗначенияПоСсылке(Ссылка, НовыеЗначения) Экспорт
	
	Запись = РегистрыСведений.ОбработанныеЗначенияСправочников.СоздатьМенеджерЗаписи();
	Запись.Ссылка = Ссылка;
	Запись.Прочитать();
	Если Не Запись.Выбран() Тогда
		Запись.Ссылка = Ссылка;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из НовыеЗначения Цикл
		
		Если КлючИЗначение.Ключ = "КлючевыеРеквизиты" Тогда
			
			Если КлючИЗначение.Значение = Неопределено Тогда
				Запись.КлючевыеРеквизиты = Неопределено;
			Иначе
				
				КлючевыеРеквизитыЗаписи = ?(Запись.КлючевыеРеквизиты = Неопределено, Новый Структура, Запись.КлючевыеРеквизиты.Получить());
				КлючевыеРеквизитыЗаписи = ?(КлючевыеРеквизитыЗаписи = Неопределено, Новый Структура, КлючевыеРеквизитыЗаписи);
				Для каждого КлючРеквизита Из КлючИЗначение.Значение Цикл
					КлючевыеРеквизитыЗаписи.Вставить(КлючРеквизита.Ключ, КлючРеквизита.Значение);
				КонецЦикла;
				
				Запись.КлючевыеРеквизиты = Новый ХранилищеЗначения(КлючевыеРеквизитыЗаписи);
				
			КонецЕсли;
			
		ИначеЕсли КлючИЗначение.Ключ = "Активность" Тогда 
			Запись.Активный = КлючИЗначение.Значение;
		ИначеЕсли КлючИЗначение.Ключ <> "ЕстьОбработанныеРеквизиты" Тогда 
			Запись[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Запись.Записать(Истина);
	
КонецПроцедуры

// Обновляет обработанные значения указанной ссылки справочника. Обновлены будут только значения, указаные в параметре "НовыеЗначения"
//
//Параметры:
//	Ссылка - СправочникСсылка - ссылка, для которой нужно вернуть обработанные значения
//	НовыеЗначения - Структура - ключи соответствуют ресурсам регистра, значения - обработанным значеним
//
Процедура УдалитьЗначенияПоСсылке(Ссылка) Экспорт
	
	Запись = РегистрыСведений.ОбработанныеЗначенияСправочников.СоздатьМенеджерЗаписи();
	Запись.Ссылка = Ссылка;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры

// Заполняет записи РС ОбработанныеЗначенияСправочников текущими значениями реквизитов
//
//Параметры:
//	ИменаСправочников - Массив или Строка - имена метаданных справочников
//
Процедура ОбновитьОбработанныеРеквизитыСправочников(ИменаСправочников = Неопределено) Экспорт
	
	Если ИменаСправочников = Неопределено Тогда
		СписокИмен = СтрРазделить("Долги,Контакты,КошелькиИСчета,Имущество,СтатьиДоходов,СтатьиРасходов,ФинансовыеЦели", ",");
	ИначеЕсли ТипЗнч(ИменаСправочников) = Тип("Строка") Тогда
		СписокИмен = СтрРазделить(ИменаСправочников, ",");
	Иначе
		СписокИмен = ИменаСправочников;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Для каждого Имя Из СписокИмен Цикл
		
		СтруктураЗаписи = Новый Структура("Наименование,ПометкаУдаления,Активность,КлючевыеРеквизиты");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Спр.Ссылка КАК Ссылка,
		|	//ДругиеПоля
		|	Спр.Наименование КАК Наименование,
		|	Спр.ПометкаУдаления КАК ПометкаУдаления,
		|	Спр.Активность КАК Активность
		|ИЗ
		|	Справочник." + Имя + " КАК Спр";
		
		Если Метаданные.Справочники[Имя].Иерархический Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДругиеПоля", "//ДругиеПоля
				|	Спр.Родитель КАК Родитель,");
			СтруктураЗаписи.Вставить("Родитель");
		КонецЕсли;
		
		КлючевыеРеквизиты = Неопределено;
		Если Имя = "Долги" Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДругиеПоля", "//ДругиеПоля
				|	Ложь КАК ЭтоГруппа,
				|	Спр.ИспользоватьДляУчетаВзятыхДолгов КАК ИспользоватьДляУчетаВзятыхДолгов,
				|	Спр.ИспользоватьДляУчетаВзятыхДолгов КАК ИспользоватьДляУчетаВыданныхДолгов,");
			КлючевыеРеквизиты = Новый Структура("ИспользоватьДляУчетаВзятыхДолгов,ИспользоватьДляУчетаВзятыхДолгов");
		ИначеЕсли Имя = "КошелькиИСчета" Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДругиеПоля", "//ДругиеПоля
				|	Спр.ЭтоГруппа КАК ЭтоГруппа,
				|	Спр.ТипСчета КАК ТипСчета,
				|	Спр.ИспользоватьДляНакоплений КАК ИспользоватьДляНакоплений,");
			КлючевыеРеквизиты = Новый Структура("ТипСчета,ИспользоватьДляНакоплений");
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Выборка);
			Если КлючевыеРеквизиты <> Неопределено И Не Выборка.ЭтоГруппа Тогда
				ЗаполнитьЗначенияСвойств(КлючевыеРеквизиты, Выборка);
				СтруктураЗаписи.КлючевыеРеквизиты = КлючевыеРеквизиты;
			КонецЕсли;
			
			РегистрыСведений.ОбработанныеЗначенияСправочников.ОбновитьЗначенияПоСсылке(Выборка.Ссылка, СтруктураЗаписи);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Удаление информации по отсутствующим обхектам
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбработанныеЗначенияСправочников.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ОбработанныеЗначенияСправочников КАК ОбработанныеЗначенияСправочников
	|ГДЕ
	|	ОбработанныеЗначенияСправочников.Ссылка.Наименование ЕСТЬ NULL";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.ОбработанныеЗначенияСправочников.УдалитьЗначенияПоСсылке(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытий



#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру с ключами для заполнения текущими значениями
//
Функция НоваяСтруктураОбработанныхЗначений(Объект = Неопределено) Экспорт

	Результат = Новый Структура("Ссылка,Наименование,ПометкаУдаления,Активность,Родитель,КлючевыеРеквизиты,ЕстьОбработанныеРеквизиты", 
				Неопределено, "", Ложь, Ложь, Неопределено, Неопределено, Ложь);
	
	Если Объект <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Объект);
		
		Если Объект.Метаданные().Имя = "Долги" Тогда
			Результат.КлючевыеРеквизиты = Новый Структура("ИспользоватьДляУчетаВзятыхДолгов,ИспользоватьДляУчетаВыданныхДолгов");
			ЗаполнитьЗначенияСвойств(Результат.КлючевыеРеквизиты, Объект);
		ИначеЕсли Объект.Метаданные().Имя = "КошелькиИСчета" Тогда
			Результат.КлючевыеРеквизиты = Новый Структура("ИспользоватьДляНакоплений,ТипСчета");
			ЗаполнитьЗначенияСвойств(Результат.КлючевыеРеквизиты, Объект);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции



#КонецОбласти



#КонецЕсли
