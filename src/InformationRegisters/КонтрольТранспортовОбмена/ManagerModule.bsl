#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Важно:
//Проверки и регистрации состояния используются для всех транспортов, кроме "домашней сети"

// Проверяет возможность начать новый обмен с помощью указанного транспорта
//	Использование одного транспорта в разных сеансах не допускается!
//
//Параметры:
//	Транспорт - СправочникСсылка.ТранспортыОбменаДанными
//
//Возвращаемое значение:
//	Булево - Истина, если транспорт доступен, Ложь, если он уже используется в другом сеансе
//
Функция ТранспортДоступенДляНовогоОбмена(Транспорт) Экспорт

	Если Не ЗначениеЗаполнено(Транспорт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запись = МенеджерЗаписиТранспорта(Транспорт);
	Если Не Запись.Выбран() Или Запись.ОбменЗавершен Или Запись.НомерСеанса < 0 
		Или Запись.НомерСеанса = НомерСеансаИнформационнойБазы() Тогда
		Возврат Истина;
	КонецЕсли;
	
	// если нет отметки завершения, сеанс мог быть потерян
	Если Не ОбщегоНазначенияДеньги.СеансАктивен(Запись.НомерСеанса)
		Или ТекущаяДатаСеанса() - Запись.НачалоОбмена > 86400  Тогда
		УстановитьЗавершениеРаботыТранспорта(Транспорт);
		Возврат Истина;
	КонецЕсли;

	Возврат Ложь;
	
КонецФункции

// Добавляет в регистр сведений запись о начале работы указанного транспорта
//
//Параметры:
//	Транспорт - СправочникСсылка.ТранспортыОбменаДанными - транспорт, завершивший работу
//	Действие - Строка - текстовое описание действия, выполняемого транспортом
//	ТекстСообщений - Строка или Неопределено. Текст сообщений, которые нужно вывести пользователю. 
//	ДополнительнаяИнформация - Произвольно или Неопределено. Параметры, которые нужно передать от вызова к вызову в пределах одного транспорта
//
//Возвращаемое значение:
//	Булево - Истина, если для транспорта сделана запись о начале, Ложь, если запись сделать невозможно (например, транспорт уже используется в другом сеансе)
//
Функция УстановитьНачалоРаботыТранспорта(Транспорт, Действие = "", ТекстСообщений = Неопределено, ДополнительнаяИнформация = Неопределено) Экспорт

	Если Не ТранспортДоступенДляНовогоОбмена(Транспорт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запись = МенеджерЗаписиТранспорта(Транспорт);
	
	Запись.ТекущееДействие  = Действие;
	Запись.ОбменЗавершен    = Ложь;
	Запись.НачалоОбмена     = ТекущаяДатаСеанса();
	Запись.НомерСеанса      = НомерСеансаИнформационнойБазы();
	
	Запись.ТекстСообщений   = ?(ЗначениеЗаполнено(ТекстСообщений), ТекстСообщений, "");
	Запись.ДополнительнаяИнформация   = ?(ЗначениеЗаполнено(ДополнительнаяИнформация), 
				Новый ХранилищеЗначения(ДополнительнаяИнформация, Новый СжатиеДанных(6)), Неопределено);
	
	Запись.Записать(Истина);
	Возврат Истина;

КонецФункции

// Добавляет в регистр сведений запись о завершении работы указанного транспорта
//
//Параметры:
//	Транспорт - СправочникСсылка.ТранспортыОбменаДанными - транспорт, завершивший работу
//	ТекстСообщений - Строка или Неопределено. Текст сообщений, которые нужно вывести пользователю. 
//					Если Неопределено, сообщения уже существующие в записи не изменяются
//					Если первым символом идет "+", текст сообщения добавляется к записанному ранее с переводом на новую строку
//	ДополнительнаяИнформация - Произвольно или Неопределено. Параметры, которые нужно передать от вызова к вызову в пределах одного транспорта
//					Если Неопределено, ранее записанные параметры не изменяются
//					Если пустая строка - ранее записанные параметры будут очищены
//
Процедура УстановитьЗавершениеРаботыТранспорта(Транспорт, ТекстСообщений = Неопределено, ДополнительнаяИнформация = Неопределено) Экспорт
	
	Запись = МенеджерЗаписиТранспорта(Транспорт);
	Если Не Запись.Выбран() Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекстСообщений = "" И ДополнительнаяИнформация = ""
		Или (ТекстСообщений = Неопределено И Запись.ТекстСообщений = "" 
				И ДополнительнаяИнформация = Неопределено И Запись.ДополнительнаяИнформация = Неопределено) Тогда
		// ничего существенного для контроля не задано, запись можно удалить
		Запись.Удалить();
		Возврат;
	КонецЕсли;
	
	Запись.ТекущееДействие  = "";
	Запись.ОбменЗавершен    = Истина;
	
	Если ТекстСообщений <> Неопределено Тогда
		Если Лев(ТекстСообщений, 1) = "+" Тогда
			Запись.ТекстСообщений   = Запись.ТекстСообщений + ?(Запись.ТекстСообщений <> "" И Строка(ТекстСообщений) <> "", Символы.ПС, "") + Сред(ТекстСообщений, 2);
		Иначе
			Запись.ТекстСообщений   = ТекстСообщений;
		КонецЕсли;
	КонецЕсли;
	
	Если ДополнительнаяИнформация = "" Тогда
		Запись.ДополнительнаяИнформация = Неопределено;
	ИначеЕсли ДополнительнаяИнформация <> Неопределено Тогда
		Запись.ДополнительнаяИнформация = Новый ХранилищеЗначения(ДополнительнаяИнформация, Новый СжатиеДанных(6));
	КонецЕсли;
	Запись.Записать(Истина);
	
КонецПроцедуры

// Изменяет текущее действие, текст сообщений или дополнительную информацию транспорта
//
//Параметры:
//	Транспорт - СправочникСсылка.ТранспортыОбменаДанными - транспорт, завершивший работу
//	Действие - Строка или Неопределено. Описание действия, выполняемого транспортом 
//					Если Неопределено, текст действия в записи не изменяется
//	ТекстСообщений - Строка или Неопределено. Текст сообщений, которые нужно вывести пользователю. 
//					Если Неопределено, ранее записанный текст в записи не изменяются
//					Если первым символом идет "+", текст сообщения добавляется к записанному ранее с переводом на новую строку
//	ДополнительнаяИнформация - Произвольно или Неопределено. Параметры, которые нужно передать от вызова к вызову в пределах одного транспорта
//					Если Неопределено, ранее записанные параметры не изменяются
//					Если пустая строка - ранее записанные параметры будут очищены
//
Процедура ОбновитьСостояниеТранспорта(Транспорт, Действие = Неопределено, ТекстСообщений = Неопределено, ДополнительнаяИнформация = Неопределено) Экспорт
	
	Запись = МенеджерЗаписиТранспорта(Транспорт);
	Если Не Запись.Выбран() Тогда
		// Обновлять нечего
		//ВызватьИсключение СтрШаблон(НСтр("ru='Невозможно обновить состояние транспорта - в регистре отсутствует запись с ключем %1'"), Строка(Транспорт));
		Возврат;
	КонецЕсли;
	
	Если Действие <> Неопределено Тогда
		Запись.ТекущееДействие  = Действие;
	КонецЕсли;
	
	Если ТекстСообщений <> Неопределено Тогда
		Если Лев(ТекстСообщений, 1) = "+" Тогда
			Запись.ТекстСообщений   = Запись.ТекстСообщений + ?(Запись.ТекстСообщений <> "" И Строка(ТекстСообщений) <> "", Символы.ПС, "") + Сред(ТекстСообщений, 2);
		Иначе
			Запись.ТекстСообщений   = ТекстСообщений;
		КонецЕсли;
	КонецЕсли;
	
	Если ДополнительнаяИнформация = "" Тогда
		Запись.ДополнительнаяИнформация = Неопределено;
	ИначеЕсли ДополнительнаяИнформация <> Неопределено Тогда
		Запись.ДополнительнаяИнформация = Новый ХранилищеЗначения(ДополнительнаяИнформация, Новый СжатиеДанных(6));
	КонецЕсли;
	
	Запись.Записать(Истина);
	
КонецПроцедуры

// Вовзращает текст ошибки зафиксированной для выбранного транспорта
//
//Параметры:
//	Узел - ПланОбменаСсылка - узел, для которого устанавливается соединение
//
//Возвращаемое значение:
//	Строка
//
Функция ТекстОшибкиОбмена(Транспорт) Экспорт

	Результат = "";
	
	ЗаписьРегистра = МенеджерЗаписиТранспорта(Транспорт);
	Если Не ЗаписьРегистра.Выбран() Или Не ЗначениеЗаполнено(ЗаписьРегистра.ТекстСообщений) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		ШаблонОшибки = НСтр("ru='Ошибки обмена данных на сервере: %1 %2'"); 
	Иначе
		ШаблонОшибки = НСтр("ru='Ошибки обмена данных в настольной программе: %1 %2'"); 
	КонецЕсли;
	
	Результат = СтрШаблон(ШаблонОшибки, Символы.ПС, ЗаписьРегистра.ТекстСообщений);
	
	Возврат Результат;

КонецФункции


#КонецОбласти


#Область ОбработчикиСобытий



#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция МенеджерЗаписиТранспорта(Транспорт) 

	Результат = РегистрыСведений.КонтрольТранспортовОбмена.СоздатьМенеджерЗаписи();
	Результат.Транспорт = Транспорт;
	Результат.Прочитать();
	Если Не Результат.Выбран() Тогда
		Результат.Транспорт = Транспорт;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции
 

#КонецОбласти

#КонецЕсли
