////////////////////////////////////////////////////////////////////////////////
//РегистрСвеедений.ПринадлежностьФайлов.СписокФайловОбъекта
//  Управление коллекцией медиафайлов, отобранных по владельцу
//  
//Параметры формы:
//  СписокФайлов - Список значений, значениями которого являются структуры описания файлов 
//				(см. ПрикрепленныеФайлыКлиентСервер.НоваяСтруктураПрикрепляемогоФайла())
//  ВладелецФайлов - Ссылка на объект, владеющий файлами
//  
////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Перем РезультатОбработан; // при заполненной переменной форма закрывается без дополнительных проверок

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработка параметров формы
	Параметры.Свойство("ВладелецФайлов", ВладелецФайлов);
	Если Параметры.СписокФайлов.Количество() > 0 Тогда
		Медиафайлы = Параметры.СписокФайлов;
	ИначеЕсли ЗначениеЗаполнено(ВладелецФайлов) Тогда
		Медиафайлы = ПрикрепленныеФайлыСервер.ПрочитатьСписокФайлов(ВладелецФайлов);
	КонецЕсли;
	
	// Значения по умолчанию
	НомерСтраницы        = 1;
	ЧислоСтрокНаСтранице = 100;
	
	// Дополнительные реквизиты
	ДопРеквизитыФормы = Новый Структура;
	ДопРеквизитыФормы.Вставить("ПустаяКартинка",   ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Пустая16.ПолучитьДвоичныеДанные(), УникальныйИдентификатор));
	ДопРеквизитыФормы.Вставить("Аудиофайл",        ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ПредставлениеФайлаАудио.ПолучитьДвоичныеДанные(), УникальныйИдентификатор));
	ДопРеквизитыФормы.Вставить("Добавить",         ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ДобавитьЭлементВЯчейку.ПолучитьДвоичныеДанные(), УникальныйИдентификатор));
	ДопРеквизитыФормы.Вставить("ПрочийФайл",       ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ДокументОбъект.ПолучитьДвоичныеДанные(), УникальныйИдентификатор));
	
	// Вывод файлов в таблицу
	ОбновитьСтраницуИзСпискаФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ПрикрепленныеФайлыКлиент.ЭтоПрикреплениеФайла(ЭтаФорма, ИмяСобытия, Источник) Тогда
		ДобавитьДанные(Параметр);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СтраницаФайловПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	Удалено = 0;
	Для каждого ИДСтроки Из Элементы.СтраницаФайлов.ВыделенныеСтроки Цикл
		
		СтрокаФайла = СтраницаФайлов.НайтиПоИдентификатору(ИДСтроки);
		
		Если СтрокаФайла <> Неопределено Тогда
			
			Удалено = Удалено + 1;
			УдалитьФайлИзСписка(Медиафайлы, СтрокаФайла.ИДЭлементаСписка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	Если НомерСтраницы > 1 И СтраницаФайлов.Количество() = 0 Тогда
		// Открываем предыдущую страницу
		ПоказатьСтраницуСписка(-1);
	Иначе
		ОбновитьСтраницуИзСпискаФайлов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ФормаВладельца = ?(ВладелецФормы = Неопределено, ЭтотОбъект, ВладелецФормы);
	ПрикрепленныеФайлыКлиент.ДобавитьФайлыВДиалоге(ЭтаФорма, ФормаВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация2ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.СтраницаФайлов.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаФайла = Элементы.СтраницаФайлов.ТекущиеДанные;
	Если СтрокаФайла <> Неопределено И СтрокаФайла.ОписаниеФайла <> Неопределено  Тогда
		ПрикрепленныеФайлыКлиент.ВоспроизвестиФайл(СтрокаФайла.ОписаниеФайла);
		УстановитьДоступностьКоманд();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловНаименование1ПриИзменении(Элемент)
	
	СтрокаФайла = Элементы.СтраницаФайлов.ТекущиеДанные;
	Если СтрокаФайла <> Неопределено Тогда
		Если ПустаяСтрока(СтрокаФайла.Наименование) Тогда
			СтрокаФайла.Наименование = ПрикрепленныеФайлыКлиентСервер.АвтоНаименованиеФайла(СтрокаФайла.ОписаниеФайла.СпособОткрытия, СтрокаФайла.ОписаниеФайла.ДатаСоздания);
		КонецЕсли;
		СтрокаФайла.ОписаниеФайла.Наименование = СтрокаФайла.Наименование;
		ОбновитьФайлВСписке(Медиафайлы, СтрокаФайла.ОписаниеФайла, СтрокаФайла.ИДЭлементаСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловКомментарий1ПриИзменении(Элемент)
	
	СтрокаФайла = Элементы.СтраницаФайлов.ТекущиеДанные;
	Если СтрокаФайла <> Неопределено Тогда
		СтрокаФайла.ОписаниеФайла.Комментарий = СтрокаФайла.Комментарий;
		ОбновитьФайлВСписке(Медиафайлы, СтрокаФайла.ОписаниеФайла, СтрокаФайла.ИДЭлементаСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловНеСинхронизироватьПриИзменении(Элемент)
	
	СтрокаФайла = Элементы.СтраницаФайлов.ТекущиеДанные;
	Если СтрокаФайла <> Неопределено Тогда
		СтрокаФайла.ОписаниеФайла.НеСинхронизировать = СтрокаФайла.НеСинхронизировать;
		ОбновитьФайлВСписке(Медиафайлы, СтрокаФайла.ОписаниеФайла, СтрокаФайла.ИДЭлементаСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаФайловНеСинхронизировать1ПриИзменении(Элемент)
	
	СтрокаФайла = Элементы.СтраницаФайлов.ТекущиеДанные;
	Если СтрокаФайла <> Неопределено Тогда
		
		НовоеЗначение = СтрокаФайла.НеСинхронизировать;
		Для каждого ИДСтроки Из Элементы.СтраницаФайлов.ВыделенныеСтроки Цикл
			
			ВыделеннаяСтрока = СтраницаФайлов.НайтиПоИдентификатору(ИДСтроки);
			Если ВыделеннаяСтрока <> Неопределено Тогда
				ВыделеннаяСтрока.НеСинхронизировать = НовоеЗначение;
				ВыделеннаяСтрока.ОписаниеФайла.НеСинхронизировать = ВыделеннаяСтрока.НеСинхронизировать;
				ОбновитьФайлВСписке(Медиафайлы, ВыделеннаяСтрока.ОписаниеФайла, ВыделеннаяСтрока.ИДЭлементаСписка);
			КонецЕсли;
			
		КонецЦикла;
		 
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьВсе(Команда)
	
	Если Медиафайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#Область ПоказатьВопрос
	ТекстВопроса = НСтр("ru='Файлов в списке: %1
		|Удалить все файлы?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Медиафайлы.Количество());
	
	ДополнительныеПараметры = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("УдалитьВсеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Да,     НСтр("ru='Удалить'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отмена'"));
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Отмена, Заголовок);
	#КонецОбласти
	
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ПоказатьСтраницуСписка(-1);
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	ПоказатьСтраницуСписка(1);
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ПрименитьИзменения();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ОтменитьИзменения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайл(Команда)
	
	ОбновитьФайлКлиент();
	
КонецПроцедуры
 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере 
Процедура ОбновитьСтраницуИзСпискаФайлов()

	СтраницаФайлов.Очистить();
	
	НачальныйЭлемент = (НомерСтраницы - 1) * ЧислоСтрокНаСтранице;
	КонечныйЭлемент = Мин(Медиафайлы.Количество() - 1, НачальныйЭлемент + ЧислоСтрокНаСтранице - 1);
	
	Для Счетчик = НачальныйЭлемент По КонечныйЭлемент Цикл
		
		ЭлементСписка = Медиафайлы[Счетчик];
		СтрокаТаблицы = СтраницаФайлов.Добавить();
		ЗаполнитьСтрокуСтруктурой(СтрокаТаблицы, ЭлементСписка.Значение, ЭлементСписка.ПолучитьИдентификатор()); 

	КонецЦикла;
	
	ОбновитьНавигациюПоСтраницам(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УдалитьФайлИзСписка(Список, ИДЭлемента)

	ЭлементСписка = Список.НайтиПоИдентификатору(ИДЭлемента);
	Если ЭлементСписка <> Неопределено Тогда
		Список.Удалить(ЭлементСписка);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьФайлВСписке(Список, СтруктураФайла, ИДЭлемента)

	ЭлементСписка = Список.НайтиПоИдентификатору(ИДЭлемента);
	Если ЭлементСписка <> Неопределено Тогда
		ЭлементСписка.Значение      = СтруктураФайла;
		ЭлементСписка.Представление = СтруктураФайла.Наименование;
	КонецЕсли;

КонецПроцедуры


// Добавляет информацию о прикрепленному файлу в список, предварительно разобрав по типу данных
//
// Параметры:
//  ДанныеКОбработке - Структура или СписокЗначений - данные к добавлению в список
//
&НаКлиенте
Процедура ДобавитьДанные(ДанныеКОбработке)
	
	Если ДанныеКОбработке = Неопределено Тогда
		Возврат;
	КонецЕсли;
				
	Если ТипЗнч(ДанныеКОбработке) = Тип("СписокЗначений")  Тогда
		Для Каждого Данные Из ДанныеКОбработке Цикл
			Пакет = Данные.Значение;
			ДобавитьФайлВСписок(Пакет);	
		КонецЦикла;
	Иначе
		ДобавитьФайлВСписок(ДанныеКОбработке);	
	КонецЕсли;

КонецПроцедуры

// Добавляет прикрпленный файл в список
//
// Параметры:
//  ПакетДанных	 - Структура - упакованные данные  
//
&НаКлиенте
Процедура ДобавитьФайлВСписок(ПакетДанных)
	
	Если ПакетДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПакетДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
		
	
	// Добавляем файл в список
	Элемент = Медиафайлы.Добавить(ПакетДанных, ПакетДанных.Наименование);
	Модифицированность = Истина;
	
	// В зависимости от количества уже выведенных файлов либо добавляем файл в таблицу, 
	//либо открываем новую страницу списка
	Если СтраницаФайлов.Количество() = ЧислоСтрокНаСтранице Тогда
		
		// новый файл всегда добавляется в конец списка
		ПоказатьСтраницуСписка(9999);
		Элементы.СтраницаФайлов.ТекущаяСтрока = СтраницаФайлов[0].ПолучитьИдентификатор();
		
	Иначе
		
		СтрокаТаблицы = СтраницаФайлов.Добавить();
		ЗаполнитьСтрокуСтруктурой(СтрокаТаблицы, ПакетДанных, Элемент.ПолучитьИдентификатор());
		Элементы.СтраницаФайлов.ТекущаяСтрока = СтрокаТаблицы.ПолучитьИдентификатор();
		ОбновитьНавигациюПоСтраницам(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста 
Процедура ЗаполнитьСтрокуСтруктурой(СтрокаТаблицы, Данные, ИД)

	СтрокаТаблицы.ОписаниеФайла = Данные;
	
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаТаблицы.ОписаниеФайла, "Наименование,Комментарий,НеСинхронизировать");
	
	СтрокаТаблицы.Представление     = СтрокаТаблицы.ОписаниеФайла.Предпросмотр;
	СтрокаТаблицы.Иконка            = СтрокаТаблицы.ОписаниеФайла.Иконка;
	СтрокаТаблицы.ИДЭлементаСписка = ИД;
	
	Если ТипЗнч(СтрокаТаблицы.ОписаниеФайла.Размер) = Тип("Число") Тогда
		Размер = Окр(СтрокаТаблицы.ОписаниеФайла.Размер / 1024, 0);
		Если Размер >= 1024 Тогда
			Размер = "" + Окр(Размер / 1024, 0) + " Mb";
		Иначе
			Размер = "" + Размер + " Kb";
		КонецЕсли;
	Иначе
		Размер = "???";
	КонецЕсли;
	СтрокаТаблицы.ИнформацияОФайле  = НСтр("ru='Формат: %1, изменен: %2, размер: %3'"); 
	СтрокаТаблицы.ИнформацияОФайле = СтрШаблон(СтрокаТаблицы.ИнформацияОФайле, 
									СтрокаТаблицы.ОписаниеФайла.Расширение
									,Формат(СтрокаТаблицы.ОписаниеФайла.ДатаСоздания, "Л=ru_RU; ДЛФ=DT")
									,Размер
									);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНавигациюПоСтраницам(Форма)

	ВсегоСтраниц = ВсегоКоличествоСтраниц(Форма.Медиафайлы, Форма.ЧислоСтрокНаСтранице);
	Если ВсегоСтраниц = 0 Тогда
		
		Форма.Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Форма.Элементы.СтраницаНетФайлов;
		Форма.Элементы.Назад.Видимость = Ложь;
		Форма.Элементы.Далее.Видимость = Ложь;

	Иначе
		
		Форма.Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Форма.Элементы.СтраницаСписок;
		Если ВсегоСтраниц = 1 Тогда
			
			Форма.Элементы.Назад.Видимость = Ложь;
			Форма.Элементы.Далее.Видимость = Ложь;
			
		Иначе
			
			Форма.Элементы.Назад.Видимость = Форма.НомерСтраницы > 1;
			Форма.Элементы.Далее.Видимость = Истина;
			Форма.Элементы.Далее.Доступность = Форма.НомерСтраницы < ВсегоСтраниц;
			
		КонецЕсли;
		
		Форма.Элементы.ДекорацияКоличествоФайлов.Заголовок = "Страница %1 из %2";
		Форма.Элементы.ДекорацияКоличествоФайлов.Заголовок = СтрШаблон(Форма.Элементы.ДекорацияКоличествоФайлов.Заголовок,
														Форма.НомерСтраницы, ВсегоСтраниц);
		
	КонецЕсли;
	 
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		Медиафайлы.Очистить();
		НомерСтраницы = 1;
		ОбновитьСтраницуИзСпискаФайлов();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтраницуСписка(Сдвиг)

	ВсегоСтраниц = ВсегоКоличествоСтраниц(Медиафайлы, ЧислоСтрокНаСтранице);
	Если Сдвиг < 0 Тогда
		НомерСтраницы = Макс(1, НомерСтраницы + Сдвиг);
	Иначе
		НомерСтраницы = Мин(ВсегоСтраниц, НомерСтраницы + Сдвиг);
	КонецЕсли;
	
	ОбновитьСтраницуИзСпискаФайлов();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВсегоКоличествоСтраниц(Знач Список, Знач СтрокНаСтранице)

	РазмерСписка = Список.Количество();
	Возврат Цел(РазмерСписка / СтрокНаСтранице) + ?(РазмерСписка % СтрокНаСтранице > 0, 1, 0);

КонецФункции

&НаКлиенте
Процедура ИзменениеФайлаЗавершение(Результат, ИДСтроки) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТаблицы = СтраницаФайлов.НайтиПоИдентификатору(ИДСтроки);
	Если СтрокаТаблицы <> Неопределено Тогда
		ЗаполнитьСтрокуСтруктурой(СтрокаТаблицы, Результат, СтрокаТаблицы.ИДЭлементаСписка);
		ОбновитьФайлВСписке(Медиафайлы, Результат, СтрокаТаблицы.ИДЭлементаСписка);
		Модифицированность = Истина;
		ОбновитьНавигациюПоСтраницам(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзменения()

	РезультатОбработан = Истина;
	Модифицированность = Ложь;
	Закрыть(Медиафайлы);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзменения()

	РезультатОбработан = Истина;
	Закрыть(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	ПрименитьИзменения();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКоманд()

	ДанныеСтроки = Элементы.СтраницаФайлов.ТекущиеДанные;
	ДоступностьКомандыОбновления = ДанныеСтроки <> Неопределено И Не ПустаяСтрока(ДанныеСтроки.ОписаниеФайла.ИмяФайла);
	Элементы.ОбновитьФайл.Доступность = ДоступностьКомандыОбновления;
	Элементы.СтраницаФайловПредставлениеКонтекстноеМенюОбновитьФайл.Доступность = ДоступностьКомандыОбновления;
	Элементы.СтраницаФайловКонтекстноеМенюОбновитьФайл.Доступность = ДоступностьКомандыОбновления;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайлКлиент()

	ДанныеСтроки = Элементы.СтраницаФайлов.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВладелецИзменений = ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы, ЭтотОбъект);
	Если ПрикрепленныеФайлыКлиент.ОбновитьСодержимоеФайла(ДанныеСтроки.ОписаниеФайла, ВладелецИзменений) Тогда
		ОбновитьФайлВСписке(Медиафайлы, ДанныеСтроки.ОписаниеФайла, ДанныеСтроки.ИДЭлементаСписка);
		Модифицированность = Истина;
		УстановитьДоступностьКоманд();
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

