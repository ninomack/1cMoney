#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Удаляет из РС СтатистикаСправочников все записи для ссылок указанного справочника
//
//Параметры:
//	ИмяСправочника - Строка - Имя метаданных справочника, статистику которого нужно очистить
//
Процедура ОчиститьСтатистикуСправочника(ИмяСправочника) Экспорт
	
	// Удаление статистики по всем кошелькам
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатистикаСправочников.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.СтатистикаСправочников КАК СтатистикаСправочников
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СтатистикаСправочников.Ссылка) = ТИП(Справочник." + ИмяСправочника + ")";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.СтатистикаСправочников.СоздатьМенеджерЗаписи();
		Запись.Ссылка = Выборка.Ссылка;
		Запись.Удалить();
	КонецЦикла;
	
КонецПроцедуры

// Обновляет записи РС СтатистикаСправочников для всех справочников
//
//Параметры:
//	нет
//
Процедура ОбновитьВсюСтатистикуСправочников() Экспорт
	
	Типы = Метаданные.РегистрыСведений.СтатистикаСправочников.Измерения.Ссылка.Тип.Типы();
	Для каждого Тип Из Типы Цикл
		
		МетаданныеЗначения = Метаданные.НайтиПоТипу(Тип);
		Если МетаданныеЗначения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			Справочники[МетаданныеЗначения.Имя].ОбновитьРегистрСтатистики();
		Исключение
			ЗаписьЖурналаРегистрации("Дополнительная информация.Обновление статистики справочников",
				УровеньЖурналаРегистрации.Ошибка, МетаданныеЗначения, , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			// Прерывание не требуется
		КонецПопытки; 
		 
	КонецЦикла;
	
КонецПроцедуры

// Обновляет информационные реквизиты по указанному или всем контактам
//	в регистре сведений "СтатистикаСправочников".
//Перед использованием необходимо актуализировать ключи статей.
//
//Параметры:
//	ИмяСправочника - Строка - Имя объекта метаданных 
//	Ссылка - СправочникСсылка или Неопределено. Чтобы обновить сатистику всего справочника ссылка = Неопеделено
//
Процедура ОбновитьСтатистикуСправочника(ИмяСправочника, Ссылка = Неопределено) Экспорт
	
	ТипыСтатей  = РегистрыСведений.КлючиСтатей.ТипыСтатейПоТипуСправочника(Тип("СправочникСсылка." + ИмяСправочника));
	Если ТипыСтатей = Неопределено Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru='Неизвестный тип статьи для обновления статистики справочника ""%1""'"), Ссылка);
	КонецЕсли;
	
	Если Ссылка = Неопределено Тогда
		
		Ключ = Неопределено;
		ОчиститьСтатистикуСправочника(ИмяСправочника);
		
	Иначе
		
		Если Не ЗначениеЗаполнено(ИмяСправочника) И ЗначениеЗаполнено(Ссылка) Тогда
			ИмяСправочника = Ссылка.Метаданные().Имя;
		КонецЕсли;
		
		Ключ = РегистрыСведений.КлючиСтатей.КлючСтатьиБюджета(Ссылка);
		Если Не ЗначениеЗаполнено(Ключ) Тогда
			ВызватьИсключение СтрШаблон(НСтр("ru='Обшибка обновления статистики: нет ключа для ссылки <%1>'"), Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаУчета", ПараметрыСеанса.ВалютаУчета);
	Запрос.УстановитьПараметр("ТипыСтатей", ТипыСтатей);
	Запрос.УстановитьПараметр("Ключ", Ключ);
	Запрос.УстановитьПараметр("Ключ2", ?(Ключ = Неопределено, "", Ключ + "яяя"));
	#Область ТекстЗапроса
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка,
	|	КлючиСтатей.Ключ КАК Ключ,
	|	//ДополнительныеРеквизиты
	|	СУММА(ВЫБОР
	|			КОГДА Потомки.Активность
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоАктуальных,
	|	СУММА(ВЫБОР
	|			КОГДА Потомки.Активность
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоНеАктуальных,
	|	СУММА(ВЫБОР
	|			КОГДА Потомки.ПометкаУдаления
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПомеченных
	|ИЗ
	|	Справочник." + ИмяСправочника + " КАК Спр
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлючиСтатей КАК КлючиСтатей
	|		ПО (Спр.Ссылка = КлючиСтатей.СтатьяБюджета  И КлючиСтатей.ТипСтатьи В (&ТипыСтатей))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник." + ИмяСправочника + " КАК Потомки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлючиСтатей КАК КлючиПотомков
	|			ПО (Потомки.Ссылка = КлючиПотомков.СтатьяБюджета И КлючиПотомков.ТипСтатьи В (&ТипыСтатей))
	|		ПО (КлючиПотомков.Ключ МЕЖДУ КлючиСтатей.Ключ И КлючиСтатей.Ключ + ""яяя"")
	|ГДЕ
	|	КлючиСтатей.ТипСтатьи В (&ТипыСтатей) И
	|	(&Ключ = НЕОПРЕДЕЛЕНО
	|			ИЛИ (&Ключ МЕЖДУ КлючиСтатей.Ключ И КлючиСтатей.Ключ + ""яяя""
	|				ИЛИ КлючиСтатей.Ключ МЕЖДУ &Ключ И &Ключ2) 
	|	)
	|
	|СГРУППИРОВАТЬ ПО
	|	Спр.Ссылка,
	|	КлючиСтатей.Ключ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ";
	#КонецОбласти 

	// Уточнение текста запроса
	ДопПоля = "";
	ЕстьВалюты = Ложь;
	Если ИмяСправочника = "КошелькиИСчета" Тогда
		ДопПоля = 
		"СУММА(ВЫБОР
		|		КОГДА НЕ Потомки.ЭтоГруппа
		|				И Потомки.ИспользоватьДляНакоплений
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК КоличествоДляНакоплений,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ Потомки.ЭтоГруппа
		|				ИЛИ НЕ Потомки.ИспользоватьДляНакоплений
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК КоличествоСвободных,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ Потомки.ЭтоГруппа
		|				И Потомки.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Наличность)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК КоличествоНаличных,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ Потомки.ЭтоГруппа
		|				И Потомки.ТипСчета = ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.БанковскаяКартаКредитная)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК КоличествоКредиток,
		|	СУММА(ВЫБОР
		|		КОГДА Потомки.ЭтоГруппа
		|				ИЛИ Потомки.ТипСчета В (ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.БанковскаяКартаКредитная), ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.Наличность))
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ) КАК КоличествоБезналичных,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Потомки.Валюта.Ссылка ЕСТЬ NULL
		|				ТОГДА &ВалютаУчета
		|			ИНАЧЕ Потомки.Валюта
		|		КОНЕЦ) КАК КоличествоВалют,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Потомки.Валюта.Ссылка ЕСТЬ NULL
		|				ТОГДА &ВалютаУчета
		|			ИНАЧЕ Потомки.Валюта
		|		КОНЕЦ) КАК Валюта,";
	ИначеЕсли ИмяСправочника = "Контакты" Или ИмяСправочника = "Имущество" Тогда
		ДопПоля = 
		"КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|			КОГДА Потомки.Валюта.Ссылка ЕСТЬ NULL
		|				ТОГДА &ВалютаУчета
		|			ИНАЧЕ Потомки.Валюта
		|		КОНЕЦ) КАК КоличествоВалют,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Потомки.Валюта.Ссылка ЕСТЬ NULL
		|				ТОГДА &ВалютаУчета
		|			ИНАЧЕ Потомки.Валюта
		|		КОНЕЦ) КАК Валюта,";
	КонецЕсли;
	
	Если Не ПустаяСтрока(ДопПоля) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДополнительныеРеквизиты", ДопПоля);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = РегистрыСведений.СтатистикаСправочников.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
		
	КонецЦикла;

	
КонецПроцедуры
 


#КонецОбласти


#Область ОбработчикиСобытий



#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти


#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли
