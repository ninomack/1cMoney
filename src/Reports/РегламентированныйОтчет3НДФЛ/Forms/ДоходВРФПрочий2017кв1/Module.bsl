&НаСервере 
Перем ЭтотОтчет;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	КонтейнерДокумента = Параметры.СтрокаДокумента;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, КонтейнерДокумента, СтрокаСвойствКонтейнера());
	НалогоплательщикСтатус = Параметры.НалогоплательщикСтатус;
	ГодОтчета              = Параметры.ГодОтчета;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, КонтейнерДокумента.ШапкаДокумента, СтрокаСвойствШапкиДокумента());
				
	ОбновитьТаблицыКодовДоходовИВычетов();
	
	Элементы.ГруппаКодСуммаВычета.Доступность = НЕ ПустаяСтрока(КодыВычетов);
	Элементы.ИспользоватьДляСтандартныхВычетов.Доступность = СтавкаНалога = 13;
	Элементы.Месяц.Доступность = Элементы.ИспользоватьДляСтандартныхВычетов.Доступность И ИспользоватьДляСтандартныхВычетов;
	Элементы.ИндивидуальныйИнвестиционныйСчет.Доступность = ЭтоДоходПоЦБ(КодДохода);
	
	Если (КодДохода = "1510" Или КодДохода = "1511" Или КодДохода = "1512") 
		И ЗначениеЗаполнено(КадастроваяСтоимость) И ЗначениеЗаполнено(ДоходБезКадастровойСтоимости) Тогда
		СуммаДохода = ДоходБезКадастровойСтоимости;
	КонецЕсли;
	ВидимостьКадастровойСтоимости(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодДоходаПриИзменении(Элемент)
	
	// Проверяем правильность кода
	Если ЗначениеЗаполнено(КодДохода) Тогда
		
		СтрокиКода = КодыДоходов.НайтиСтроки(Новый Структура("Код", КодДохода));
		Если СтрокиКода.Количество() = 0 Тогда
			
			СтавкаНалога = 0;
			НаименованиеДохода = "";
			КодВычета   = "";
			НаименованиеВычета = "";
			КодыВычетов = "";
			СуммаВычета = 0;
			Сообщить("Возможно, код дохода указан неверно");
			
		Иначе
			
			СтрокаКода = СтрокиКода[0];
			НаименованиеДохода = СтрокаКода.Наименование;
			КодыВычетов = СтрокаКода.КодыВычетов;
			Если ЗначениеЗаполнено(КодВычета) И Найти(КодыВычетов + ",", КодВычета + ",") = 0 Тогда
				КодВычета = "";
				НаименованиеВычета = "";
			КонецЕсли;
			
			Если ПустаяСтрока(КодВычета) Тогда
				СуммаВычета = 0;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		СтавкаНалога = 0;
		НаименованиеДохода = "";
		КодВычета   = "";
		КодыВычетов = "";
		НаименованиеВычета = "";
		СуммаВычета = 0;
		
	КонецЕсли;
	
	Если Не ЭтоДоходПоЦБ(КодДохода) И ИндивидуальныйИнвестиционныйСчет Тогда
		ИндивидуальныйИнвестиционныйСчет = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаКодСуммаВычета.Доступность = НЕ ПустаяСтрока(КодыВычетов);
	Элементы.ИспользоватьДляСтандартныхВычетов.Доступность = СтавкаНалога = 13;
	Элементы.Месяц.Доступность = Элементы.ИспользоватьДляСтандартныхВычетов.Доступность И ИспользоватьДляСтандартныхВычетов;
	Элементы.ИндивидуальныйИнвестиционныйСчет.Доступность = ЭтоДоходПоЦБ(КодДохода);
	ПересчитатьВычет(ЭтотОбъект);
	ВидимостьКадастровойСтоимости(ЭтотОбъект);
	
КонецПроцедуры
 
&НаКлиенте
Процедура КодДоходаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидКодов", "КодыДоходов");
	ПараметрыФормы.Вставить("ТаблицаКодов", ТаблицаВХранилище("КодыДоходов"));
	
	Оповещение = Новый ОписаниеОповещения("КодДоходаНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму(СтрЗаменить(ЭтаФорма.ИмяФормы, "ДоходВРФПрочий2017кв1", "ВыборКодаДоходаИВычета"), ПараметрыФормы, Элемент, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВычетаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(КодВычета) И Найти(КодыВычетов + ",", КодВычета + ",") = 0 Тогда
		
		НаименованиеВычета = "";
		Сообщить("Возможно, код код вычета указан неверно. Проверьте код вычета и код дохода.");
		
	КонецЕсли;
	
	Если ПустаяСтрока(КодВычета) Тогда
		
		СуммаВычета = 0;
		НаименованиеВычета = "";
		
	Иначе
		
		СтрокиВычета = ВсеКодыВычетов.НайтиСтроки(Новый Структура("Код", КодВычета));
		Если СтрокиВычета.Количество() = 0 Тогда
			НаименованиеВычета = "";
		Иначе
			НаименованиеВычета = СтрокиВычета[0].Наименование;
		КонецЕсли; 
		
	КонецЕсли;
	
	ПересчитатьВычет(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВычетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(КодыВычетов) Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидКодов", "КодыВычетов");
	ПараметрыФормы.Вставить("ТаблицаКодов", ТаблицаВычетовВХранидище(КодыВычетов));
	
	Оповещение = Новый ОписаниеОповещения("КодВычетаНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму(СтрЗаменить(ЭтаФорма.ИмяФормы, "ДоходВРФПрочий2017кв1", "ВыборКодаДоходаИВычета"), ПараметрыФормы, Элемент, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДоходаПриИзменении(Элемент)
	ПересчитатьВычет(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СуммаВычетаПриИзменении(Элемент)
	ПересчитатьВычет(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДляСтандартныхВычетовПриИзменении(Элемент)
	
	Если ИспользоватьДляСтандартныхВычетов И Месяц = 0 Тогда
		Месяц = 1;
	КонецЕсли;
	
	Элементы.Месяц.Доступность = ИспользоватьДляСтандартныхВычетов;
	
КонецПроцедуры
 

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


&НаСервере
Функция ОбъектЭтогоОтчета()

	Если ЭтотОтчет = Неопределено Тогда
		ЭтотОтчет = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат ЭтотОтчет;

КонецФункции

&НаСервере
Процедура ОбновитьТаблицыКодовДоходовИВычетов()

	ОбъетОтчета = ОбъектЭтогоОтчета();
	ВсеКодыВычетов.Загрузить(ОбъетОтчета.ТаблицаКодовВычетов(НалогоплательщикСтатус, ГодОтчета));
	КодыДоходов.Загрузить(ОбъетОтчета.ТаблицаКодовДоходов(НалогоплательщикСтатус, ГодОтчета));

КонецПроцедуры

&НаСервере
Функция ТаблицаВХранилище(Таблица)

	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		Возврат ПоместитьВоВременноеХранилище(Таблица);
	Иначе
		Возврат ПоместитьВоВременноеХранилище(ЭтотОбъект[Таблица].Выгрузить());
	КонецЕсли;

КонецФункции

&НаСервере
Функция ТаблицаВычетовВХранидище(ДопустимыеКоды)

	Если ПустаяСтрока(ДопустимыеКоды) Тогда
		Возврат ТаблицаВХранилище("ВсеКодыВычетов");
	КонецЕсли;
	
	ТаблицаВычетов = ВсеКодыВычетов.Выгрузить(Новый Массив);
	
	
	МассивСлов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДопустимыеКоды, ",", Истина);
	Для каждого Слово Из МассивСлов Цикл
		СтрокиВычетов = ВсеКодыВычетов.НайтиСтроки(Новый Структура("Код", Слово));
		Если СтрокиВычетов.Количество() > 0 Тогда
			НоваяСтрока = ТаблицаВычетов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиВычетов[0]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаВХранилище(ТаблицаВычетов);

КонецФункции
 
&НаКлиенте
Процедура КодДоходаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		
		КодДохода   = Результат.Код;
		НаименованиеДохода = Результат.Наименование;
		СтавкаНалога = Результат.СтавкаНалога;
		КодДоходаПриИзменении(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КодВычетаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		
		КодВычета = Результат.Код;
		НаименованиеВычета = Результат.Наименование;
		КодВычетаПриИзменении(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСвойствКонтейнера()

	Возврат "СтавкаНалога,СуммаДохода,СуммаНалогаНачислено,
				|ИДДокумента,СуммаНалогаУдержано,СуммаВычета,ПредставлениеДокумента,ИспользоватьДляСтандартныхВычетов";

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСвойствШапкиДокумента()

	Возврат "ИсточникНаименование,ИсточникИНН,
				|ИсточникКПП,ИсточникОКАТО,ДатаДохода,КодДохода,НаименованиеДохода,СуммаДохода,
				|КодВычета,НаименованиеВычета,КодыВычетов,СуммаВычета,Месяц,ИндивидуальныйИнвестиционныйСчет,
				|ДоходБезКадастровойСтоимости,КадастроваяСтоимость";

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьВычет(Форма)

	Если (Форма.СуммаДохода = 0 ИЛИ ПустаяСтрока(Форма.КодВычета)) И Форма.СуммаВычета <> 0 Тогда
		Форма.СуммаВычета = 0;
	КонецЕсли; 
	
	СтрокиВычета = Форма.ВсеКодыВычетов.НайтиСтроки(Новый Структура("Код", Форма.КодВычета));
	Если СтрокиВычета.Количество()= 0 Тогда
		Форма.СуммаВычета = 0;
		ПересчитатьНалогНачислено(Форма);
		Возврат;
	КонецЕсли; 

	СтрокаВычета = СтрокиВычета[0];
	
	// Проверяем корректность указанной суммы вычета
	Если (Форма.КодДохода = "1510" Или Форма.КодДохода = "1511" Или Форма.КодДохода = "1512") 
		И ЗначениеЗаполнено(Форма.КадастроваяСтоимость) Тогда
		// Если доход меньше 70% кадастровой стоимости, сумма дохода приравнивается к 70% кадастровой стоимости
		МаксДоход = Макс(Форма.СуммаДохода, Форма.КадастроваяСтоимость * 0.7);
	Иначе
		МаксДоход = Макс(Форма.СуммаДохода, 0);
	КонецЕсли;
	Если Форма.СуммаВычета > МаксДоход Тогда
		Форма.СуммаВычета = МаксДоход;
	КонецЕсли; 
	
	Если СтрокаВычета.СпособРасчета = "НормаВГод" И (Форма.СуммаВычета = 0 ИЛИ Форма.СуммаВычета > СтрокаВычета.РазмерВычета) Тогда
		
		Форма.СуммаВычета = Мин(МаксДоход, СтрокаВычета.РазмерВычета);
		
	ИначеЕсли СтрокаВычета.СпособРасчета = "НеБолееЧем"  И (Форма.СуммаВычета = 0 ИЛИ Форма.СуммаВычета > СтрокаВычета.РазмерВычета) Тогда
		
		Форма.СуммаВычета = Мин(МаксДоход, СтрокаВычета.РазмерВычета);
		
	ИначеЕсли СтрокаВычета.СпособРасчета = "НормаОтДохода" Тогда
		
		Если СтрНайти("2201,2207,2208", Форма.КодДохода) > 0 Тогда
			Форма.СуммаВычета = Окр(МаксДоход * 0.2, 2);
		ИначеЕсли СтрНайти("2202,2204,2209", Форма.КодДохода) > 0 Тогда
			Форма.СуммаВычета = Окр(МаксДоход * 0.3, 2);
		ИначеЕсли СтрНайти("2203,2205", Форма.КодДохода) > 0 Тогда
			Форма.СуммаВычета = Окр(МаксДоход * 0.4, 2);
		Иначеесли Форма.КодДохода = "2206" Тогда
			Форма.СуммаВычета = Окр(МаксДоход * 0.25, 2);
		Иначе
			Форма.СуммаВычета = 0;
		КонецЕсли; 
		
	КонецЕсли; 
	
	ПересчитатьНалогНачислено(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьНалогНачислено(Форма)

	Если (Форма.КодДохода = "1510" Или Форма.КодДохода = "1511" Или Форма.КодДохода = "1512") 
		И ЗначениеЗаполнено(Форма.КадастроваяСтоимость) Тогда
		// Если доход меньше 70% кадастровой стоимости, сумма дохода приравнивается к 70% кадастровой стоимости
		МаксДоход = Макс(Форма.СуммаДохода, Форма.КадастроваяСтоимость * 0.7);
	Иначе
		МаксДоход = Макс(Форма.СуммаДохода, 0);
	КонецЕсли;
	Форма.СуммаНалогаНачислено = Окр((МаксДоход - Форма.СуммаВычета) * Форма.СтавкаНалога / 100);

КонецПроцедуры
 
&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	Если ЗначениеЗаполнено(ИсточникНаименование) Тогда
		ПредставлениеДокумента = ИсточникНаименование;
	КонецЕсли; 
	Если ЗначениеЗаполнено(НаименованиеДохода) Тогда
		ПредставлениеДокумента = ПредставлениеДокумента + ?(ПредставлениеДокумента = "", "", ", ") + НаименованиеДохода;
	КонецЕсли; 
	
	Если НЕ ДанныеЗаполненыКорректно() Тогда
		ПоказатьВопросНаЗаписьСОшибками();
	Иначе
		ЗаписатьДокументЗавершение();
	КонецЕсли; 

КонецПроцедуры


// Проверка и запись изменений

&НаКлиенте
Процедура ЗаписатьДокументЗавершение()

	Если КодДохода = "1510" Или КодДохода = "1511" Или КодДохода = "1512" Тогда
		
		Если ЗначениеЗаполнено(КадастроваяСтоимость) И СуммаДохода < КадастроваяСтоимость * 0.7 Тогда
			ДоходБезКадастровойСтоимости = СуммаДохода;
			СуммаДохода = КадастроваяСтоимость * 0.7;
		Иначе
			ДоходБезКадастровойСтоимости = 0;
		КонецЕсли;
		
	Иначе
		КадастроваяСтоимость = 0;
		ДоходБезКадастровойСтоимости = 0;
	КонецЕсли;
	
	СтрокаСвойств = СтрокаСвойствКонтейнера();
	Результат = Новый Структура(СтрокаСвойств);
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект, СтрокаСвойств);
	
	СтрокаСвойств = СтрокаСвойствШапкиДокумента();
	Результат.Вставить("ШапкаДокумента", Новый Структура(СтрокаСвойств));
	ЗаполнитьЗначенияСвойств(Результат.ШапкаДокумента, ЭтотОбъект, СтрокаСвойств);
	
	
	Модифицированность = Ложь;
	
	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Функция ДанныеЗаполненыКорректно()

	ОчиститьСообщения();
	
	КоллекцияОшибок = Неопределено;
	
	Если ЗначениеЗаполнено(ИсточникИНН) ИЛИ ЗначениеЗаполнено(ИсточникКПП) ИЛИ Найти(ИсточникНаименование, """") > 0 Тогда
		
		Если ЗначениеЗаполнено(ИсточникИНН) И СтрДлина(ИсточникИНН) <> 10 И СтрДлина(ИсточникИНН) <> 12 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ИсточникИНН", 
					НСтр("ru = 'ИНН указан неверно (длина ИНН должна быть равной 10 или 12 символам)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
		КонецЕсли; 
		Если СтрДлина(ИсточникИНН) = 10 И СтрДлина(ИсточникКПП) <> 9 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ИсточникКПП", 
					НСтр("ru = 'КПП указан неверно (длина КПП должна быть равной 9 символам)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
		КонецЕсли; 
		Если (СтрДлина(ИсточникИНН) = 12 ИЛИ СтрДлина(ИсточникИНН) = 0) И СтрДлина(ИсточникКПП) > 0 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ИсточникКПП", 
					НСтр("ru = 'Возможно, напрасно указан КПП - для физических лиц он не нужен'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ИсточникОКАТО) И СтрДлина(ИсточникОКАТО) <> 8 И СтрДлина(ИсточникОКАТО) <> 11 Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ИсточникОКАТО", 
				НСтр("ru = 'Неверный ОКТМО плательщика дохода: длина ОКТМО должна быть 8 или 11 символов.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ИсточникНаименование) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ИсточникНаименование", 
				НСтр("ru = 'Не указано наименование организации или ФИО плательщика дохода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	
	Если ПустаяСтрока(КодДохода) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "КодДохода", 
				НСтр("ru = 'Не указан код дохода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если  НЕ ЗначениеЗаполнено(СуммаДохода) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "СуммаДохода", 
				НСтр("ru = 'Не указана сумма дохода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(КодВычета) ИЛИ ЗначениеЗаполнено(СуммаВычета) Тогда
		
		Если  НЕ ЗначениеЗаполнено(КодВычета) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "КодВычета", 
					НСтр("ru = 'Не указан код вычета'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
		КонецЕсли; 
		Если  НЕ ЗначениеЗаполнено(СуммаВычета) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "СуммаВычета", 
					НСтр("ru = 'Не указана сумма вычета'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
		КонецЕсли; 
		
	КонецЕсли; 

	Если КоллекцияОшибок = Неопределено Тогда
		Возврат Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КоллекцияОшибок, Ложь);
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции

&НаКлиенте
Процедура ПоказатьВопросНаЗаписьСОшибками()

	ТекстВопроса = НСтр("ru = 'При проверке обнаружены ошибки, которые не позволят заполнить машиночитаемый бланк декларации.
		|Хотите записать информацию с ошибками, чтобы исправить их в будущем?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	Кнопки = Новый СписокЗначений();
	Кнопки.Добавить("Записать", НСтр("ru = 'Записать с ошибками'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Исправить ошибки сейчас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросНаЗаписьСОшибкамиЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , "Отмена", НСтр("ru = 'Помощник заполнения 3-НДФЛ'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())); 

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросНаЗаписьСОшибкамиЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = "Записать" Тогда
		ЗаписатьДокументЗавершение();
	КонецЕсли; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоДоходПоЦБ(КодДохода)

	Возврат Лев(КодДохода, 3) = "153";

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьКадастровойСтоимости(Форма)

	Форма.Элементы.КадастроваяСтоимость.Видимость = (Форма.КодДохода = "1510" 
					Или Форма.КодДохода = "1511" Или Форма.КодДохода = "1512");

КонецПроцедуры
 

#КонецОбласти


