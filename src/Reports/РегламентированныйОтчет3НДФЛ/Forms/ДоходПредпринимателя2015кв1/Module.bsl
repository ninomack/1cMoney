#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КонтейнерДокумента = Параметры.СтрокаДокумента;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, КонтейнерДокумента, СтрокаСвойствКонтейнера());
	НалогоплательщикСтатус = Параметры.НалогоплательщикСтатус;
	ГодОтчета              = Параметры.ГодОтчета;
	ВычетПодтвержденДокументами = Параметры.ВычетПодтвержденДокументами;
	
	Если КонтейнерДокумента.Свойство("СтрокиОтчетаПредпринимателя") Тогда
		Для Каждого СтрокаПараметра Из КонтейнерДокумента.СтрокиОтчетаПредпринимателя Цикл
			НоваяСтрока = СтрокиОтчетаПредпринимателя.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПараметра.Значение);
		КонецЦикла; 
	КонецЕсли; 
	
	Если ВычетПодтвержденДокументами = 0 Тогда
		Элементы.СтрокиОтчетаПредпринимателяГруппа1.Видимость = Ложь;
		Элементы.СтрокиОтчетаПредпринимателяСуммаРасходаВсего.Заголовок = "Расходы (20%)";
		Элементы.СтрокиОтчетаПредпринимателяСуммаРасходаВсего.ТолькоПросмотр = Истина;
	КонецЕсли; 
	
	Если ИспользоватьДляСтандартныхВычетов Тогда
		
		Элементы.ГруппаСтраницыЗаполнения.ТекущаяСтраница = Элементы.СтраницаПоМесяцам;
		
	Иначе
		
		Если СтрокиОтчетаПредпринимателя.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтрокиОтчетаПредпринимателя[0], "МатериальныеРасходы,АмортизацияОС,НаОплатуТрудаВсего,ПоТрудовымДоговорам,ПрочиеРасходы");
		КонецЕсли; 
		
		Если ВычетПодтвержденДокументами Тогда
			Элементы.ГруппаСтраницыЗаполнения.ТекущаяСтраница = Элементы.СтраницаОбщейСуммыПоДокументам;
		Иначе
			Элементы.ГруппаСтраницыЗаполнения.ТекущаяСтраница = Элементы.СтраницаОбщейСуммыПоНорме;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВычетПодтвержденДокументами Тогда
		Элементы.СтрокиОтчетаПредпринимателяМатериальныеРасходы.ТекстПодвала   = Формат(СтрокиОтчетаПредпринимателя.Итог("МатериальныеРасходы"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		Элементы.СтрокиОтчетаПредпринимателяАмортизацияОС.ТекстПодвала         = Формат(СтрокиОтчетаПредпринимателя.Итог("АмортизацияОС"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		Элементы.СтрокиОтчетаПредпринимателяНаОплатуТрудаВсего.ТекстПодвала    = Формат(СтрокиОтчетаПредпринимателя.Итог("НаОплатуТрудаВсего"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		Элементы.СтрокиОтчетаПредпринимателяПоТрудовымДоговорам.ТекстПодвала   = Формат(СтрокиОтчетаПредпринимателя.Итог("ПоТрудовымДоговорам"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		Элементы.СтрокиОтчетаПредпринимателяПрочиеРасходы.ТекстПодвала         = Формат(СтрокиОтчетаПредпринимателя.Итог("ПрочиеРасходы"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаДоходаПриИзменении(Элемент)
	ПересчетИтогов();
КонецПроцедуры
 
&НаКлиенте
Процедура ИспользоватьДляСтандартныхВычетовПриИзменении(Элемент)
	
	Если ИспользоватьДляСтандартныхВычетов И СтрокиОтчетаПредпринимателя.Количество() < 12 Тогда
		
		СтрокиОтчетаПредпринимателя.Очистить();
		Для Счетчик = 1 По 12 Цикл
			НоваяСтрока = СтрокиОтчетаПредпринимателя.Добавить();
			НоваяСтрока.Месяц = Счетчик;
			Если Счетчик = 1 Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭтотОбъект, "СуммаДохода,МатериальныеРасходы,АмортизацияОС,ПрочиеРасходы,НаОплатуТрудаВсего,ПоТрудовымДоговорам");
				НоваяСтрока.СуммаРасходаВсего = СуммаВычета;
			КонецЕсли; 
		КонецЦикла; 
		
	ИначеЕсли НЕ ИспользоватьДляСтандартныхВычетов И СтрокиОтчетаПредпринимателя.Количество() = 12 Тогда
		
		СуммаДохода         = СтрокиОтчетаПредпринимателя.Итог("СуммаДохода");
		МатериальныеРасходы = СтрокиОтчетаПредпринимателя.Итог("МатериальныеРасходы");
		АмортизацияОС       = СтрокиОтчетаПредпринимателя.Итог("АмортизацияОС");
		ПрочиеРасходы       = СтрокиОтчетаПредпринимателя.Итог("ПрочиеРасходы");
		НаОплатуТрудаВсего  = СтрокиОтчетаПредпринимателя.Итог("НаОплатуТрудаВсего");
		ПоТрудовымДоговорам = СтрокиОтчетаПредпринимателя.Итог("ПоТрудовымДоговорам");
		СуммаВычета         = СтрокиОтчетаПредпринимателя.Итог("СуммаРасходаВсего");
		СтрокиОтчетаПредпринимателя.Очистить();
		
	КонецЕсли; 
	
	ПересчетИтогов();
	ПоказатьСтраницуДокументаКлиент();
	
КонецПроцедуры
 
&НаКлиенте
Процедура МатериальныеРасходыПриИзменении(Элемент)
	
	ПересчетИтогов();
	
КонецПроцедуры

&НаКлиенте
Процедура АмортизацияОСПриИзменении(Элемент)
	
	ПересчетИтогов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочиеРасходыПриИзменении(Элемент)
	
	ПересчетИтогов();
	
КонецПроцедуры

&НаКлиенте
Процедура НаОплатуТрудаВсегоПриИзменении(Элемент)
	
	Если ПоТрудовымДоговорам > НаОплатуТрудаВсего Тогда
		ПоТрудовымДоговорам = НаОплатуТрудаВсего;
	КонецЕсли; 
	ПересчетИтогов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоТрудовымДоговорамПриИзменении(Элемент)
	
	Если ПоТрудовымДоговорам > НаОплатуТрудаВсего Тогда
		НаОплатуТрудаВсего = ПоТрудовымДоговорам;
	КонецЕсли; 
	ПересчетИтогов();
	
КонецПроцедуры
 
// Строки отчета

&НаКлиенте
Процедура СтрокиОтчетаПредпринимателяСуммаДоходаПриИзменении(Элемент)
	ИзменитьЗначениеКолонки(Элемент.Имя, Элементы.СтрокиОтчетаПредпринимателя.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОтчетаПредпринимателяМатериальныеРасходыПриИзменении(Элемент)
	ИзменитьЗначениеКолонки(Элемент.Имя, Элементы.СтрокиОтчетаПредпринимателя.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОтчетаПредпринимателяАмортизацияОСПриИзменении(Элемент)
	ИзменитьЗначениеКолонки(Элемент.Имя, Элементы.СтрокиОтчетаПредпринимателя.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОтчетаПредпринимателяНаОплатуТрудаВсегоПриИзменении(Элемент)
	ИзменитьЗначениеКолонки(Элемент.Имя, Элементы.СтрокиОтчетаПредпринимателя.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОтчетаПредпринимателяПоТрудовымДоговорамПриИзменении(Элемент)
	ИзменитьЗначениеКолонки(Элемент.Имя, Элементы.СтрокиОтчетаПредпринимателя.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОтчетаПредпринимателяПрочиеРасходыПриИзменении(Элемент)
	ИзменитьЗначениеКолонки(Элемент.Имя, Элементы.СтрокиОтчетаПредпринимателя.ТекущиеДанные);
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();

КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСвойствКонтейнера()

	Возврат "ИДДокумента,ПредставлениеДокумента,СуммаДохода,СуммаВычета,
			|ИспользоватьДляСтандартныхВычетов,ВидДеятельностиНаименование,ВидДеятельностиКод,ВидДеятельностиИндекс";

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСвойствтабличнойЧасти()

	Возврат "Месяц,СуммаДохода,СуммаРасходаВсего,МатериальныеРасходы,АмортизацияОС,НаОплатуТрудаВсего,ПоТрудовымДоговорам,ПрочиеРасходы";

КонецФункции

&НаКлиенте
Процедура ПоказатьСтраницуДокументаКлиент()

	Если ИспользоватьДляСтандартныхВычетов Тогда
		Элементы.ГруппаСтраницыЗаполнения.ТекущаяСтраница = Элементы.СтраницаПоМесяцам;
	ИначеЕсли ВычетПодтвержденДокументами Тогда
		Элементы.ГруппаСтраницыЗаполнения.ТекущаяСтраница = Элементы.СтраницаОбщейСуммыПоДокументам;
	Иначе
		Элементы.ГруппаСтраницыЗаполнения.ТекущаяСтраница = Элементы.СтраницаОбщейСуммыПоНорме;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПересчетИтогов()

	Если ИспользоватьДляСтандартныхВычетов Тогда
		
		СуммаДохода = СтрокиОтчетаПредпринимателя.Итог("СуммаДохода");
		СуммаВычета = СтрокиОтчетаПредпринимателя.Итог("СуммаРасходаВсего");
		
		Элементы.СтрокиОтчетаПредпринимателяСуммаДохода.ТекстПодвала       = Формат(СуммаДохода, "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		Элементы.СтрокиОтчетаПредпринимателяСуммаРасходаВсего.ТекстПодвала = Формат(СуммаВычета, "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		
		Если ВычетПодтвержденДокументами Тогда
			Элементы.СтрокиОтчетаПредпринимателяМатериальныеРасходы.ТекстПодвала   = Формат(СтрокиОтчетаПредпринимателя.Итог("МатериальныеРасходы"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
			Элементы.СтрокиОтчетаПредпринимателяАмортизацияОС.ТекстПодвала         = Формат(СтрокиОтчетаПредпринимателя.Итог("АмортизацияОС"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
			Элементы.СтрокиОтчетаПредпринимателяНаОплатуТрудаВсего.ТекстПодвала    = Формат(СтрокиОтчетаПредпринимателя.Итог("НаОплатуТрудаВсего"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
			Элементы.СтрокиОтчетаПредпринимателяПоТрудовымДоговорам.ТекстПодвала   = Формат(СтрокиОтчетаПредпринимателя.Итог("ПоТрудовымДоговорам"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
			Элементы.СтрокиОтчетаПредпринимателяПрочиеРасходы.ТекстПодвала         = Формат(СтрокиОтчетаПредпринимателя.Итог("ПрочиеРасходы"), "ЧЦ=14; ЧДЦ=2; ЧГ=3,0");
		КонецЕсли; 
		
	ИначеЕсли ВычетПодтвержденДокументами Тогда
		
		СуммаВычета = МатериальныеРасходы + АмортизацияОС + ПрочиеРасходы + НаОплатуТрудаВсего;
		
	Иначе
		
		СуммаВычета = Окр(СуммаДохода * 0.2, 2); 
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьРасходыСтроки(СтрокаДокумента)

	Если ВычетПодтвержденДокументами Тогда
		СтрокаДокумента.СуммаРасходаВсего = СтрокаДокумента.МатериальныеРасходы 
				+ СтрокаДокумента.АмортизацияОС
				+ СтрокаДокумента.НаОплатуТрудаВсего
				+ СтрокаДокумента.ПрочиеРасходы;
	Иначе
		СтрокаДокумента.СуммаРасходаВсего = Окр(СтрокаДокумента.СуммаДохода * 0.2, 2);
	КонецЕсли; 
	ПересчетИтогов();

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеКолонки(ИмяКолонки, ИзмененнаяСтрока)

	ИмяПоля = СтрЗаменить(ИмяКолонки, "СтрокиОтчетаПредпринимателя", "");
	НовоеЗначение = ИзмененнаяСтрока[ИмяПоля];
	
	Для Каждого ИДСтроки Из Элементы.СтрокиОтчетаПредпринимателя.ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = СтрокиОтчетаПредпринимателя.НайтиПоИдентификатору(ИДСтроки);
		СтрокаТаблицы[ИмяПоля] = НовоеЗначение;
		Если СтрокаТаблицы.ПоТрудовымДоговорам > СтрокаТаблицы.НаОплатуТрудаВсего Тогда
			Если ИмяПоля = "НаОплатуТрудаВсего" Тогда
				СтрокаТаблицы.ПоТрудовымДоговорам = СтрокаТаблицы.НаОплатуТрудаВсего;
			Иначе
				СтрокаТаблицы.НаОплатуТрудаВсего = СтрокаТаблицы.ПоТрудовымДоговорам;
			КонецЕсли; 
		КонецЕсли; 
		ПересчитатьРасходыСтроки(СтрокаТаблицы);
		
	КонецЦикла;
	ТекущийЭлемент = Элементы.СтрокиОтчетаПредпринимателя;
	ТекущийЭлемент = Элементы[ИмяКолонки];

КонецПроцедуры
 

&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	ПредставлениеДокумента = "";
	Если ЗначениеЗаполнено(ВидДеятельностиКод) Тогда
		ПредставлениеДокумента = ВидДеятельностиКод;
	КонецЕсли; 
	Если ЗначениеЗаполнено(ВидДеятельностиНаименование) Тогда
		ПредставлениеДокумента = ПредставлениеДокумента + ?(ПредставлениеДокумента = "", "", ", ") + ВидДеятельностиНаименование;
	КонецЕсли; 
	Если ПустаяСтрока(ПредставлениеДокумента) Тогда
		ПредставлениеДокумента = "<Не указан вид деятельности>";
	КонецЕсли; 
	
	Если НЕ ДанныеЗаполненыКорректно() Тогда
		ПоказатьВопросНаЗаписьСОшибками();
	Иначе
		ЗаписатьДокументЗавершение();
	КонецЕсли; 

КонецПроцедуры



// Проверка и запись изменений

&НаКлиенте
Процедура ЗаписатьДокументЗавершение()

	Если ИспользоватьДляСтандартныхВычетов Тогда
		
		СуммаДохода = СтрокиОтчетаПредпринимателя.Итог("СуммаДохода");
		СуммаВычета = СтрокиОтчетаПредпринимателя.Итог("СуммаРасходаВсего");
		
	Иначе
		
		СтрокиОтчетаПредпринимателя.Очистить();
		НоваяСтрока = СтрокиОтчетаПредпринимателя.Добавить();
		НоваяСтрока.СуммаДохода           = СуммаДохода;
		НоваяСтрока.СуммаРасходаВсего     = СуммаВычета;
		Если ВычетПодтвержденДокументами Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭтотОбъект, "МатериальныеРасходы,АмортизацияОС,НаОплатуТрудаВсего,ПоТрудовымДоговорам,ПрочиеРасходы");
		КонецЕсли; 
		
	КонецЕсли; 
	
	СтрокаСвойств = СтрокаСвойствКонтейнера();
	Результат = Новый Структура(СтрокаСвойств);
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект, СтрокаСвойств);
	
	Результат.Вставить("СтрокиОтчетаПредпринимателя", Новый СписокЗначений);
	Для Каждого СтрокаТабЧасти Из СтрокиОтчетаПредпринимателя Цикл
		
		СтруктураСтроки = Новый Структура(СтрокаСвойствтабличнойЧасти());
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТабЧасти);
		Результат.СтрокиОтчетаПредпринимателя.Добавить(СтруктураСтроки);
		
	КонецЦикла; 
	
	Модифицированность = Ложь;
	
	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Функция ДанныеЗаполненыКорректно()

	ОчиститьСообщения();
	
	КоллекцияОшибок = Неопределено;
	
	Если НЕ ЗначениеЗаполнено(ВидДеятельностиИндекс) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ВидДеятельностиИндекс", 
				НСтр("ru = 'Не указан вид предпринимательской деятельности'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ВидДеятельностиКод) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ВидДеятельностиКод", 
				НСтр("ru = 'Не указан ОКВЭД'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	
	Если ИспользоватьДляСтандартныхВычетов Тогда
		
		НомерСтроки = 0;
		Для Каждого СтрокаСправки Из СтрокиОтчетаПредпринимателя Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаСправки.Месяц) Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "СтрокиОтчетаПредпринимателя[%1].Месяц", 
						НСтр("ru = 'Не указан номер месяца'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "", НомерСтроки);
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаСправки.СуммаДохода) И НЕ ЗначениеЗаполнено(СтрокаСправки.СуммаРасходаВсего) Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "Строки2НДФЛ[%1].СуммаРасходаВсего", 
						НСтр("ru = 'Не указана сумма расхода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "", НомерСтроки);
			КонецЕсли; 
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла; 
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(СуммаДохода) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "СуммаДохода", 
					НСтр("ru = 'Не указана сумма дохода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "", НомерСтроки);
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(СуммаВычета) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "СуммаВычета", 
					НСтр("ru = 'Не указана сумма расхода'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "", НомерСтроки);
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если КоллекцияОшибок = Неопределено Тогда
		Возврат Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КоллекцияОшибок, Ложь);
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции

&НаКлиенте
Процедура ПоказатьВопросНаЗаписьСОшибками()

	ТекстВопроса = НСтр("ru = 'При проверке обнаружены ошибки, которые не позволят заполнить машиночитаемый бланк декларации.
		|Хотите записать информацию с ошибками, чтобы исправить их в будущем?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	Кнопки = Новый СписокЗначений();
	Кнопки.Добавить("Записать", НСтр("ru = 'Записать с ошибками'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Исправить ошибки сейчас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросНаЗаписьСОшибкамиЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , "Отмена", НСтр("ru = 'Помощник заполнения 3-НДФЛ'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())); 

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросНаЗаписьСОшибкамиЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = "Записать" Тогда
		ЗаписатьДокументЗавершение();
	КонецЕсли; 

КонецПроцедуры
 

#КонецОбласти


