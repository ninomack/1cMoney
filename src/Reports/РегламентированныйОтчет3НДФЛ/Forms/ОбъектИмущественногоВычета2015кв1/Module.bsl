
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КонтейнерДокумента = Параметры.СтрокаДокумента;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, КонтейнерДокумента, СтрокаСвойствКонтейнера());
	НалогоплательщикСтатус = Параметры.НалогоплательщикСтатус;
	ГодОтчета              = Параметры.ГодОтчета;
	
	ЖильеАдресСтруктура = Новый Структура;
	Для Каждого КлючИЗначение Из КонтейнерДокумента.ЖильеАдресСтруктура Цикл
		ЖильеАдресСтруктура.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	Элементы.ГруппаСтраницыДатыПрава.ТекущаяСтраница = ?(ЖильеСпособПриобретения = 2, Элементы.СтраницаДатыАкта, Элементы.СтраницаДатыПрава);
	УправлениеФормой(ЭтотОбъект)
	
КонецПроцедуры

&НаКлиенте
Процедура ЖильеНаименованиеПриИзменении(Элемент)
	
	Если ЖильеНаименование < 4 Тогда
		ЖильеДатаПраваНаЗемлю = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЖильеВидСобственностиПриИзменении(Элемент)
	
	Если ЖильеВидСобственности <> 3 Тогда
		ЖильеДатаЗаявленияОРаспределении = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЖильеГодНачалаВычетаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖильеДатаАктаПередачиПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
	Если Не Элементы.ГруппаДробь.Доступность Тогда
		
		ЖильеДоляЧислитель   = 0;
		ЖильеДоляЗнаменатель = 0;
		
	Иначе
		
		ЖильеДоляЧислитель   = ?(ЖильеДоляЧислитель = 0, 1, ЖильеДоляЧислитель);
		ЖильеДоляЗнаменатель = ?(ЖильеДоляЗнаменатель = 0, 1, ЖильеДоляЗнаменатель);
		
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура ЖильеДатаПраваСобственностиПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
	Если Не Элементы.ГруппаДробь.Доступность Тогда
		
		ЖильеДоляЧислитель   = 0;
		ЖильеДоляЗнаменатель = 0;
		
	Иначе
		
		ЖильеДоляЧислитель   = ?(ЖильеДоляЧислитель = 0, 1, ЖильеДоляЧислитель);
		ЖильеДоляЗнаменатель = ?(ЖильеДоляЗнаменатель = 0, 1, ЖильеДоляЗнаменатель);
		
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура ЖильеДатаПраваНаЗемлюПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура ЖильеСпособПриобретенияПриИзменении(Элемент)
	Элементы.ГруппаСтраницыДатыПрава.ТекущаяСтраница = ?(ЖильеСпособПриобретения = 2, Элементы.СтраницаДатыАкта, Элементы.СтраницаДатыПрава);
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДокументКлиент();

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Форма.Элементы.ГруппаДробь.Доступность = ЗначениеЗаполнено(Форма.ЖильеГодНачалаВычета) И Форма.ЖильеГодНачалаВычета < 2014 
				ИЛИ Форма.ЖильеСпособПриобретения = 1 И ЗначениеЗаполнено(Форма.ЖильеДатаПраваСобственности) И Год(Форма.ЖильеДатаПраваСобственности) < 2014
				ИЛИ Форма.ЖильеСпособПриобретения = 2 И ЗначениеЗаполнено(Форма.ЖильеДатаАктаПередачи) И Год(Форма.ЖильеДатаАктаПередачи) < 2014
				ИЛИ ЗначениеЗаполнено(Форма.ЖильеДатаПраваНаЗемлю) И Год(Форма.ЖильеДатаПраваНаЗемлю) < 2014;
				
	Форма.Элементы.ЖильеДатаЗаявленияОРаспределении.Доступность = Форма.ЖильеПризнакНалогоплательщика = 2
				ИЛИ Форма.ЖильеВидСобственности = 3;

КонецПроцедуры
 

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСвойствКонтейнера()

	Возврат "ИДЭлемента,ЖильеНаименование,ЖильеВидСобственности,ЖильеПризнакНалогоплательщика,ЖильеДоляЧислитель,ЖильеДоляЗнаменатель,
			|ЖильеДатаЗаявленияОРаспределении,ЖильеДатаПраваСобственности,ЖильеДатаПраваНаЗемлю,ЖильеДатаАктаПередачи,ЖильеСтоимость,ЖильеСуммаПроцентов,
			|ЖильеСтоимостьПоНорме,ЖильеГодНачалаВычета,ЖильеСтоимость,ЖильеСуммаПроцентов,ЖильеСпособПриобретения,ЖильеАдресПредставление,ЖильеАдресСтруктура";

КонецФункции

&НаКлиенте
Процедура ЖильеАдресПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗначенияПолей = Новый СписокЗначений;
	Для Каждого ЭлементСтруктуры Из ЖильеАдресСтруктура Цикл
		ЗначенияПолей.Добавить(ЭлементСтруктуры.Значение, ЭлементСтруктуры.Ключ);
	КонецЦикла; 
	
	ПараметрыФормы = Новый Структура("Заголовок,ЗначенияПолей,Представление,ВидКонтактнойИнформации",
			НСтр("ru = 'Адрес'"), ЗначенияПолей, ЖильеАдресПредставление, 
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации"));
			
	Оповещение = Новый ОписаниеОповещения("ЖильеАдресПредставлениеНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖильеАдресПредставлениеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.КонтактнаяИнформация, ЖильеАдресСтруктура);
		ЖильеАдресПредставление = Результат.Представление;
		
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьДокументКлиент()

	Если НЕ ДанныеЗаполненыКорректно() Тогда
		ПоказатьВопросНаЗаписьСОшибками();
	Иначе
		ЗаписатьДокументЗавершение();
	КонецЕсли; 

КонецПроцедуры


// Проверка и запись изменений

&НаКлиенте
Процедура ЗаписатьДокументЗавершение()

	СтрокаСвойств = СтрокаСвойствКонтейнера();
	Результат = Новый Структура(СтрокаСвойств);
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект, СтрокаСвойств);
	
	Результат.Вставить("ЖильеАдресСтруктура", Новый Структура);
	Для Каждого КлючИЗначение Из ЖильеАдресСтруктура Цикл
		Результат.ЖильеАдресСтруктура.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	Модифицированность = Ложь;
	
	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Функция ДанныеЗаполненыКорректно()

	ОчиститьСообщения();
	
	КоллекцияОшибок = Неопределено;
	
	Если НЕ ЗначениеЗаполнено(ЖильеГодНачалаВычета) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеГодНачалаВычета", 
				НСтр("ru = 'Не указан год начала пользования вычетом'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ЖильеСпособПриобретения) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеСпособПриобретения", 
				НСтр("ru = 'Не указан способ приобретения жилья'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	КонецЕсли; 
	Если ЖильеСпособПриобретения = 1 И НЕ ЗначениеЗаполнено(ЖильеДатаПраваСобственности) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеДатаПраваСобственности", 
				НСтр("ru = 'Не указана дата регистрации собственности на квартиру'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если ЖильеСпособПриобретения = 2 И НЕ ЗначениеЗаполнено(ЖильеДатаАктаПередачи) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеДатаАктаПередачи", 
				НСтр("ru = 'Не указана дата акта передачи жилья'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ЖильеНаименование) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеНаименование", 
				НСтр("ru = 'Не указано наименование жилья'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ЖильеВидСобственности) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеВидСобственности", 
				НСтр("ru = 'Не указан вид собственности'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ЖильеАдресПредставление) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеАдресПредставление", 
				НСтр("ru = 'Не указан адрес объекта недвижимости'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ЖильеПризнакНалогоплательщика) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеПризнакНалогоплательщика", 
				НСтр("ru = 'Не указан признак собственника объекта недвижимости'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(ЖильеСтоимость) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КоллекцияОшибок, "ЖильеСтоимость", 
				НСтр("ru = 'Не указана сумма, потраченная на приобретение жилья'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), "");
	КонецЕсли; 
	
	Если КоллекцияОшибок = Неопределено Тогда
		Возврат Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КоллекцияОшибок, Ложь);
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции

&НаКлиенте
Процедура ПоказатьВопросНаЗаписьСОшибками()

	ТекстВопроса = НСтр("ru = 'При проверке обнаружены ошибки, которые не позволят заполнить машиночитаемый бланк декларации.
		|Хотите записать информацию с ошибками, чтобы исправить их в будущем?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	Кнопки = Новый СписокЗначений();
	Кнопки.Добавить("Записать", НСтр("ru = 'Записать с ошибками'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Исправить ошибки сейчас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросНаЗаписьСОшибкамиЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , "Отмена", НСтр("ru = 'Помощник заполнения 3-НДФЛ'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())); 

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросНаЗаписьСОшибкамиЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = "Записать" Тогда
		ЗаписатьДокументЗавершение();
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти


