#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПараметрыСобытийОтчета() Экспорт
	
	ВерсияСобытийОтчета = "1";  // номер версии универсального механизма, с которой совместим отчет
	ПараметрыСобытийОтчета = ОтчетыКлиентСервер.ПараметрыСобытийОтчетаПоУмолчанию(ВерсияСобытийОтчета);
	
	//ПараметрыСобытийОтчета.ВыполнятьПриСозданииФормыНаСервере = Ложь;
	//ПараметрыСобытийОтчета.ВыполнятьПриОбработкеПараметраФормыОтбор = Истина;
	//ПараметрыСобытийОтчета.ВыполнятьПередСозданиемЭлементовФормыПользовательскихНастроек = Ложь;
	//ПараметрыСобытийОтчета.ВыполнятьПриСозданииЭлементовФормыПользовательскихНастроек = Ложь;
	//ПараметрыСобытийОтчета.ВыполнятьПослеСозданияЭлементовФормыПользовательскихНастроек = Ложь;
	//ПараметрыСобытийОтчета.ВыполнятьПриЗаполненииРеквизитовФормыПоПараметрамНКД = Ложь;
	//ПараметрыСобытийОтчета.ВыполнятьПриУстановкеСлужебныхПараметровНКД = Истина;
	ПараметрыСобытийОтчета.ВыполнятьПередКомпоновкойРезультата = Истина;
	ПараметрыСобытийОтчета.ВыполнятьПослеКомпоновкиРезультата = Истина;
	
	Возврат ПараметрыСобытийОтчета;
	
КонецФункции

// Вызывается из обработчика события ПриСозданииНаСервере.
//
Процедура ПриСозданииФормыНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, СтандартнаяОбработкаВФорме) Экспорт
	
	//Отбор = ЭтаФорма.Параметры.Отбор;
	//
	//Если НЕ ЗначениеЗаполнено(Отбор) Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//// Подготовка данных для расшифровки
	//КлючВарианта = ?(ЭтаФорма.Параметры.Свойство("КлючВарианта") И ЗначениеЗаполнено(ЭтаФорма.Параметры.КлючВарианта), ЭтаФорма.Параметры.КлючВарианта, Неопределено);
	//Если КлючВарианта <> Неопределено Тогда
	//	ВариантКД = СхемаКомпоновкиДанных.ВариантыНастроек.Найти(КлючВарианта);
	//Иначе
	//	ВариантКД = СхемаКомпоновкиДанных.ВариантыНастроек[0];
	//КонецЕсли;
	//ПредставлениеВарианта = ВариантКД.Представление;
	//
	//КомпоновщикНКД = Новый КомпоновщикНастроекКомпоновкиДанных;
	//КомпоновщикНКД.ЗагрузитьНастройки(ВариантКД.Настройки);
	//
	//Если Отбор.Свойство("ПериодОтчета") Тогда
	//	ОтчетыКлиентСервер.УстановитьЗначениеПараметраДанныхНКДПоИмени(КомпоновщикНКД, "ПериодОтчета", Отбор.ПериодОтчета);
	//	Отбор.Удалить("ПериодОтчета");
	//КонецЕсли;
	// 
	//Если Отбор.Свойство("ВалютаОтчета") Тогда
	//	ОтчетыКлиентСервер.УстановитьЗначениеПараметраДанныхНКДПоИмени(КомпоновщикНКД, "ВалютаОтчета", Отбор.ВалютаОтчета);
	//	Отбор.Удалить("ВалютаОтчета");
	//КонецЕсли;
	//
	//Если Отбор.Свойство("СтатьяРасхода") Тогда
	//	ЭлементОтбора = КомпоновщикНКД.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.Использование = Истина;
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатьяРасхода");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	//	ЭлементОтбора.ПравоеЗначение = Отбор.СтатьяРасхода;
	//	Отбор.Удалить("СтатьяРасхода");
	//КонецЕсли;
	//
	//// Заголовок отчета
	//ЗаголовокОтчета = КомпоновщикНКД.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок");
	//ЗаголовокОтчетаРасшифровки = КомпоновщикНКД.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок");
	//ЗаголовокОтчетаРасшифровки.Использование = ЗаголовокОтчета.Использование;
	//ЗаголовокОтчетаРасшифровки.Значение = ЗаголовокОтчета.Значение + НСтр("ru = ' (расшифровка)'");
	//
	//// Представление варианта
	//ПредставлениеВарианта = ОтчетыКлиентСервер.ПредставлениеВариантаБезСтандартногоПрефикса(ПредставлениеВарианта);
	//ПредставлениеВарианта = ПредставлениеВарианта + НСтр("ru = ' - расшифровка'");
	//
	//ЭтаФорма.Параметры.Вариант = ПоместитьВоВременноеХранилище(КомпоновщикНКД.Настройки);
	//ЭтаФорма.Параметры.ПредставлениеВарианта = ПредставлениеВарианта;
	
КонецПроцедуры

// Вызывается один раз после создания формы, когда уже заполнен Отчет.КомпоновщикНастроек.
//
Процедура ПриОбработкеПараметраФормыОтбор(Отбор, ЭтаФорма) Экспорт
	
	Перем КомпоновщикНастроек;
	
	КомпоновщикНастроек = ЭтаФорма.Отчет.КомпоновщикНастроек;
	
	
КонецПроцедуры

// Вызывается из обработчика события ПриОбновленииСоставаПользовательскихНастроекНаСервере.
//
// Параметры:
//	ИменаИсключаемыхПараметров  - Строка - Имена параметров через запятую. Элементы формы для этих параметров будут созданы платформой.
//
Процедура ПередСозданиемЭлементовФормыПользовательскихНастроек(ЭтаФорма, ИменаИсключаемыхПараметров, Отказ, СтандартнаяОбработка, СтандартнаяОбработкаВФорме) Экспорт
	// Пример:
	//ИменаИсключаемыхПараметров = ИменаИсключаемыхПараметров + ",ВалютаОтчета";
КонецПроцедуры

// Вызывается из обработчика события ПриОбновленииСоставаПользовательскихНастроекНаСервере.
//
Процедура ПриСозданииЭлементовФормыПользовательскихНастроек(ЭтаФорма, СтандартнаяОбработка, СтандартнаяОбработкаВФорме) Экспорт
	
КонецПроцедуры

// Вызывается из обработчика события ПриОбновленииСоставаПользовательскихНастроекНаСервере.
//
Процедура ПослеСозданияЭлементовФормыПользовательскихНастроек(ЭтаФорма, СтандартнаяОбработка, СтандартнаяОбработкаВФорме) Экспорт
	
КонецПроцедуры

// Вызывается из процедуры ЗаполнитьРеквизитыФормыПоПараметрамНКД.
// Выполняется в обработчике события ПриОбновленииСоставаПользовательскихНастроекНаСервере.
//
Процедура ПриЗаполненииРеквизитовФормыПоПараметрамНКД(ЭтаФорма, СтандартнаяОбработкаВФорме) Экспорт
	
КонецПроцедуры

// Вызывается из процедуры УстановитьСлужебныеПараметрыНКД.
// Выполняется в обработчике команды СформироватьОтчет до начала формирования отчета.
//
Процедура ПриУстановкеСлужебныхПараметровНКД(ЭтаФорма, СтандартнаяОбработкаВФорме) Экспорт
	
	СтандартнаяОбработкаВФорме = Ложь;
	
	//// Параметр СтатьяНабора
	//СтатьяНабора = Справочники.СтатьиРасходов.ПустаяСсылка();
	//ПолеКомпоновкиСтатья          = Новый ПолеКомпоновкиДанных("СтатьяРасхода");
	//ПолеКомпоновкиСтатьяДиаграммы = Новый ПолеКомпоновкиДанных("СтатьяДляДиаграммы");
	//Для Каждого ЭлементНастройки Из ЭтаФорма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
	//	Если ТипЗнч(ЭлементНастройки) = Тип("ЭлементОтбораКомпоновкиДанных") И ЭлементНастройки.Использование 
	//		И (ЭлементНастройки.ЛевоеЗначение = ПолеКомпоновкиСтатья) Тогда // ИЛИ ЭлементНастройки.ЛевоеЗначение = ПолеКомпоновкиСтатьяДиаграммы) Тогда
	//		Если ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии 
	//			ИЛИ ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
	//			СтатьяНабора = ЭлементНастройки.ПравоеЗначение;
	//		КонецЕсли;
	//	ИначеЕсли ТипЗнч(ЭлементНастройки) = Тип("ОтборКомпоновкиДанных") Тогда
	//		Для Каждого ЭлементОтбора Из ЭлементНастройки.Элементы Цикл
	//			Если (ЭлементОтбора.Использование И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиСтатья)// ИЛИ ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиСтатьяДиаграммы)
	//				И (ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии 
	//				ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно) Тогда
	//				СтатьяНабора = ЭлементОтбора.ПравоеЗначение;
	//			КонецЕсли;
	//		КонецЦикла; 
	//	КонецЕсли; 
	//КонецЦикла; 
	//
	////ОтчетыКлиентСервер.УстановитьЗначениеПараметраДанныхНКДПоИмени(ЭтаФорма.Отчет.КомпоновщикНастроек, "СтатьяНабора", СтатьяНабора);
	//
	//// Параметр БазоваяВалюта
	//ОтчетыКлиентСервер.УстановитьЗначениеПараметраДанныхНКДПоИмени(ЭтаФорма.Отчет.КомпоновщикНастроек, "ВалютаУчета", ЭтаФорма.ВалютаУчета);
	
	//// Параметр ВидАналитики1
	//Если ЭтаФорма.ПользовательскиеПараметрыОтчета <> Неопределено
	//	И НЕ ЭтаФорма.ПользовательскиеПараметрыОтчета.Свойство("ПараметрОтчета_ВидАналитики1") Тогда
	//	// Очистим значение, если параметр не используется
	//	ОтчетыКлиентСервер.УстановитьЗначениеПараметраДанныхНКДПоИмени(ЭтаФорма.Отчет.КомпоновщикНастроек, "ВидАналитики1", Неопределено);
	//КонецЕсли;
	//
	//// Параметр ВидАналитики2
	//Если ЭтаФорма.ПользовательскиеПараметрыОтчета <> Неопределено
	//	И НЕ ЭтаФорма.ПользовательскиеПараметрыОтчета.Свойство("ПараметрОтчета_ВидАналитики2") Тогда
	//	// Очистим значение, если параметр не используется
	//	ОтчетыКлиентСервер.УстановитьЗначениеПараметраДанныхНКДПоИмени(ЭтаФорма.Отчет.КомпоновщикНастроек, "ВидАналитики2", Неопределено);
	//КонецЕсли;
	
КонецПроцедуры

// Вызывается из обработчика команды СформироватьОтчет.
//
Процедура ПередКомпоновкойРезультата(ЭтаФорма, Отказ, СтандартнаяОбработкаВФорме) Экспорт
	
	
КонецПроцедуры

// Вызывается из обработчика команды СформироватьОтчет.
// Здесь можно доработать ОтчетТабличныйДокумент после выполнения системной обработки.
//
Процедура ПослеКомпоновкиРезультата(ОтчетТабличныйДокумент, ЭтаФорма) Экспорт
	// Пример:
	//ОтчетТабличныйДокумент.Область(2, ОтчетТабличныйДокумент.ШиринаТаблицы).Текст = "Конец";
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	// Получаем настрокий отчета, в т.ч. период
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); // Получаем настройки отчета 
	
	// Проверяем отбор по статье бюджета
	ЭлементыОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Настройки.Отбор, "Статья.СтатьяБюджета");
	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ЭлементОтбора.Использование И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии И типЗнч(ЭлементОтбора.ПравоеЗначение) = Тип("СправочникСсылка.ГрафыБюджета") Тогда
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГрафаБюджета");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	ВариантБюджета = Настройки.ПараметрыДанных.Элементы.Найти("ВариантБюджета").Значение;
	Запрос.УстановитьПараметр("ВариантБюджета", ВариантБюджета);
	Запрос.УстановитьПараметр("РазделБюджета", Настройки.ПараметрыДанных.Элементы.Найти("РазделБюджета").Значение);
	Запрос.УстановитьПараметр("Дата1", Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета").Значение.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета").Значение.ДатаОкончания);
	
	Запрос.УстановитьПараметр("ДатаОстатков",               Запрос.Параметры.Дата1);
	Запрос.УстановитьПараметр("ВалютаУчета",                Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаВарианта",             ВариантБюджета.Валюта);
	
	Если ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Неделя Тогда
		
		Запрос.УстановитьПараметр("ВидПериода", "НЕДЕЛЯ");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоНедели(Запрос.Параметры.Дата1));
		МаксимальнаяКалендарнаяДата = НачалоНедели(Запрос.Параметры.Дата2);
		Запрос.УстановитьПараметр("КалендарнаяДатаОстатков", НачалоНедели(Запрос.Параметры.ДатаОстатков));
		
	ИначеЕсли ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Год Тогда
		
		Запрос.УстановитьПараметр("ВидПериода", "ГОД");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоГода(Запрос.Параметры.Дата1));
		МаксимальнаяКалендарнаяДата = НачалоГода(Запрос.Параметры.Дата2);
		Запрос.УстановитьПараметр("КалендарнаяДатаОстатков", НачалоГода(Запрос.Параметры.ДатаОстатков));
		
	ИначеЕсли ВариантБюджета.ДетальностьПланирования = Перечисления.ПериодичностьПланирования.Квартал Тогда
		
		Запрос.УстановитьПараметр("ВидПериода", "КВАРТАЛ");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоКвартала(Запрос.Параметры.Дата1));
		МаксимальнаяКалендарнаяДата = НачалоКвартала(Запрос.Параметры.Дата2);
		Запрос.УстановитьПараметр("КалендарнаяДатаОстатков", НачалоКвартала(Запрос.Параметры.ДатаОстатков));
		
	Иначе
		
		Запрос.УстановитьПараметр("ВидПериода", "МЕСЯЦ");
		Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДата", НачалоМесяца(Запрос.Параметры.Дата1));
		МаксимальнаяКалендарнаяДата = НачалоМесяца(Запрос.Параметры.Дата2);
		Запрос.УстановитьПараметр("КалендарнаяДатаОстатков", НачалоМесяца(Запрос.Параметры.ДатаОстатков));
		
	КонецЕсли;
	
	МаксимальнаяКалендарнаяДата = УточнитьМаксимальнуюКалендарнуюДату(ВариантБюджета, Запрос.Параметры.РазделБюджета, МаксимальнаяКалендарнаяДата);
	Запрос.УстановитьПараметр("МаксимальнаяКалендарнаяДата", МаксимальнаяКалендарнаяДата);
	Запрос.УстановитьПараметр("МинимальнаяКалендарнаяДатаПросмотра", Запрос.Параметры.МинимальнаяКалендарнаяДата);
	
	Настройки.ПараметрыДанных.Элементы.найти("ВидПериода").Значение = Запрос.Параметры.ВидПериода;
	
	Запрос.УстановитьПараметр("СчетОстатков",           ?(Запрос.Параметры.РазделБюджета = "", ПланыСчетов.РазделыУчета.Деньги, 
																?(Запрос.Параметры.РазделБюджета = Справочники.ФинансовыеЦели.ПустаяСсылка(), 
																	ПланыСчетов.РазделыУчета.СвободныеДеньги, 
																	ПланыСчетов.РазделыУчета.Накопления)));
	
	ПоказыватьОСтатки = Настройки.ПараметрыДанных.Элементы.Найти("ПоказыватьОстатки").Значение;
	
	СтруктураЗапроса = Новый Структура;
	
	// Таблица периодов с учетом настрое бюджета
	ДополнитьТекстЗапросаТаблицейПериодов(Запрос.Текст, СтруктураЗапроса, Истина);
	// Ключи всех статей бюджета
	ДополнитьТекстЗапросаКлючамиБюджетныхСтатей(Запрос.Текст, СтруктураЗапроса, Ложь, Истина);
	// Операции по бюджету
	ДополнитьТекстЗапросаОперациямиИПоказателями(Запрос.Текст, СтруктураЗапроса, Ложь);
	Если ПоказыватьОСтатки Тогда
		
		// Остатки денег
		ДополнитьТекстЗапросаФактическимиОстатками(Запрос.Текст, СтруктураЗапроса);
		
	КонецЕсли;
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаСтруктуры = ПакетРезультатов[СтруктураЗапроса.ВыборкаСтатьиБюджета].Выгрузить();
	
	ВнешниеДанные = Новый Структура();
	ВнешниеДанные.Вставить("ТаблицаПериодов",   ПакетРезультатов[СтруктураЗапроса.ВыборкаТаблицаПериодов].Выгрузить());
	ВнешниеДанные.Вставить("СтруктураВарианта", ТаблицаСтруктуры);
	ВнешниеДанные.Вставить("ТаблицаОборотов",   ПакетРезультатов[СтруктураЗапроса.ВыборкаПоказателиБюджета].Выгрузить());
	
	ТаблицаОстатков = НоваяТаблицаОстатковПоПериодам();
	
	Если ПоказыватьОСтатки Тогда
		
		// Дополнение фактического остатка плановыми оборотами (если рассматривается отдаленный будщий период)
		//ТаблицаДополнений = ПакетРезультатов[СтруктураЗапроса.ДополненияОстатков].Выгрузить();
		//ПлановыйОстаток = ТаблицаДополнений.Итог("СуммаПоБюджету") + ТаблицаДополнений.Итог("СуммаПлановыхОпераций");
		ПлановыйОстаток = 0;
		
		// Плановые обороты по периодам
		ОборотыПоПериодам = ВнешниеДанные.ТаблицаОборотов.Скопировать(, "НомерПериода,ТипПоказателя,СуммаПлан");
		ОборотыПоПериодам.Свернуть("НомерПериода,ТипПоказателя", "СуммаПлан");
		ОборотыПоПериодам.Сортировать("НомерПериода");
		
		// Заполняем остатки на начало и конец каждого периода
		ВыборкаОстатков = ПакетРезультатов[СтруктураЗапроса.ВыборкаФактОстатки].Выгрузить();
		Для каждого СтрокаВыборки Из ВыборкаОстатков Цикл
			
			СтрокаОстатка = ТаблицаОстатков.Добавить();
			СтрокаОстатка.НомерПериода = СтрокаВыборки.НомерПериода;
			СтрокаОстатка.ОстатокНаНачалоФакт = СтрокаВыборки.НаНачало;
			СтрокаОстатка.ОстатокНаКонецФакт = СтрокаВыборки.НаКонец;
			СтрокаОстатка.КурсоваяРазница = СтрокаВыборки.КурсоваяРазница;
			
			Если СтрокаОстатка.НомерПериода = 1 Тогда
				ПлановыйОстаток = ПлановыйОстаток + СтрокаОстатка.ОстатокНаНачалоФакт;
			КонецЕсли;
			
			СтрокаОстатка.ОстатокНаНачалоПлан = ПлановыйОстаток;
			
			СтрокиОборотов = ОборотыПоПериодам.НайтиСтроки(Новый Структура("НомерПериода", СтрокаОстатка.НомерПериода));
			Для каждого СтрокаОборота Из СтрокиОборотов Цикл
				
				Если СтрокаОборота.ТипПоказателя = Перечисления.ТипыБюджетныхПоказателей.Поступление Тогда
					ПлановыйОстаток = ПлановыйОстаток + СтрокаОборота.СуммаПлан;
				ИначеЕсли СтрокаОборота.ТипПоказателя = Перечисления.ТипыБюджетныхПоказателей.Списание Тогда
					ПлановыйОстаток = ПлановыйОстаток - СтрокаОборота.СуммаПлан;
				КонецЕсли;
				 
			КонецЦикла;
			
			СтрокаОстатка.ОстатокНаКонецПлан = ПлановыйОстаток;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ВнешниеДанные.Вставить("ТаблицаОстатков",   ТаблицаОстатков);
	
	// настраиваем отображение показателей  
	СоставПоказателей = Настройки.ПараметрыДанных.Элементы.Найти("СоставПоказателей").Значение;
	ОтчетыСервер.ИзменитьНастройкиВыбранногоПоля(Настройки, "Обороты.СуммаПлан", ,    СоставПоказателей <> 2);
	ОтчетыСервер.ИзменитьНастройкиВыбранногоПоля(Настройки, "Обороты.СуммаФакт", ,    СоставПоказателей <> 1);
	ОтчетыСервер.ИзменитьНастройкиВыбранногоПоля(Настройки, "Обороты.Разница", ,      СоставПоказателей = 0);
	
	// Вывод итогов по горизонтали зависит от количества рассматриваемых бюджетных периодов
	КоличествоПериодов = Настройки.ПараметрыДанных.Элементы.Найти("КоличествоПериодовПросмотра").Значение;
	//Настройки.ПараметрыВывода.УстановитьЗначениеПараметра("ГоризонтальноеРасположениеОбщихИтогов", ?(КоличествоПериодов = 1, РасположениеИтоговКомпоновкиДанных.Нет, РасположениеИтоговКомпоновкиДанных.Авто));
	КолонкиИтогов = ОтчетыСервер.НайтиГруппировкуПоИмени(Настройки.Структура, "КолонкиИтогов");
	Для каждого Колонка Из КолонкиИтогов Цикл
		
		Колонка.Использование = КоличествоПериодов > 1;
		Если Колонка.Использование Тогда
			ОтчетыСервер.ИзменитьНастройкиВыбранногоПоля(Колонка, "Обороты.СуммаПлан", ,    СоставПоказателей <> 2);
			ОтчетыСервер.ИзменитьНастройкиВыбранногоПоля(Колонка, "Обороты.СуммаФакт", ,    СоставПоказателей <> 1);
			ОтчетыСервер.ИзменитьНастройкиВыбранногоПоля(Колонка, "Обороты.Разница", ,      СоставПоказателей = 0);
		КонецЕсли;
		
	КонецЦикла;
	
	// настраиваем отображение остатков на начало и конец каждого периода 
	СтруктураСвойств = Новый Структура("Использование", ПоказыватьОСтатки);
	ОтчетыСервер.ИзменитьНастройкиГруппировкиПоИмени(Настройки, "ОстатокНаНачало", СтруктураСвойств);
	ОтчетыСервер.ИзменитьНастройкиГруппировкиПоИмени(Настройки, "ОстатокНаКонец",  СтруктураСвойств);
	ОтчетыСервер.ИзменитьНастройкиГруппировкиПоИмени(Настройки, "КурсоваяРазница", СтруктураСвойств);
	 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; // Создаем данные расшифровки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 
	// Инициализируем макет компоновки используя схему компоновки данных 
	// и созданные ранее настройки и данные расшифровки
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, 
							Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,
							ВнешниеДанные, 
							ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


// Дополняет текст запроса временной таблицей бюджетных перидов.
//	В отличие от календарных периодов бюджетные могут начинаться не с 1-го. В таблице бюджетных периодов каждому периоду соответствует одна  
//	строка, в которой указываются начало и конец бюджетного периода.
// ВНИМАНИЕ! 
//		Данный запрос следует использовать только в тех случаях, когда невозможно передать таблицу периодов в качестве параметра
//
//Обязательные параметры запроса:
//	&ВидПериода - Строка - "НЕДЕЛЯ", "МЕСЯЦ", "КВАРТАЛ" или "ГОД" - рассматриваемый календарный период
//	&Дата1 - Дата - начальная дата самого первого бюджетного периода (должна быть задана с учетом смещения от календарного начала периода)
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода (должна быть задана с учетом смещения от календарного начала периода)
//
// Параметры
//	ТекстЗапроса - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура или Неопределено - структура, в которую добавляются имена и индексы результатов пакетного запроса
//	ПолучатьВыборку - Булево - Если ИСТИНА, запрос будет дополнен текстом выборки из таблицы периодов
//
Процедура ДополнитьТекстЗапросаТаблицейПериодов(ТекстЗапроса, СтруктураЗапроса, ПолучатьВыборку = Истина)
	
	Если СтруктураЗапроса = Неопределено Тогда
		СтруктураЗапроса = Новый Структура;
	КонецЕсли;
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ТаблицаЦифр", ИндексРезультата);
	#Область ТекстЗапроса
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ТаблицаЦифр"" ";
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "//" + КомментарийЗапроса + Символы.ПС, 
						ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ
	|	0 КАК Цифра
	|ПОМЕСТИТЬ ТаблицаЦифр
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9";
	#КонецОбласти 
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ТаблицаНомеров", ИндексРезультата);
	#Область ТекстЗапроса
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ТаблицаНомеров"" ";
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	ТаблицаЦифр1.Цифра + ТаблицаЦифр10.Цифра * 10 + ТаблицаЦифр100.Цифра * 100 + ТаблицаЦифр1000.Цифра * 1000 КАК Номер
	|ПОМЕСТИТЬ ТаблицаНомеров
	|ИЗ
	|	ТаблицаЦифр КАК ТаблицаЦифр1,
	|	ТаблицаЦифр КАК ТаблицаЦифр10,
	|	ТаблицаЦифр КАК ТаблицаЦифр100,
	|	ТаблицаЦифр КАК ТаблицаЦифр1000
	|ГДЕ
	|	ТаблицаЦифр1.Цифра + ТаблицаЦифр10.Цифра * 10 + ТаблицаЦифр100.Цифра * 100 + ТаблицаЦифр1000.Цифра * 1000 <= РАЗНОСТЬДАТ(&Дата1, &Дата2, ДЕНЬ) / 7
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номер
	|";
	#КонецОбласти 
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ТаблицаПериодов", ИндексРезультата);
	#Область ТекстЗапроса
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ТаблицаПериодов"" ";
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.НачалоПериода КАК НачалоПериода,
	|	Периоды.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ВЫБОР
	|		КОГДА &ВидПериода = ""ДЕНЬ""
	|			ТОГДА НАЧАЛОПЕРИОДА(Периоды.НачалоПериода, ДЕНЬ)
	|		КОГДА &ВидПериода = ""НЕДЕЛЯ""
	|			ТОГДА НАЧАЛОПЕРИОДА(Периоды.НачалоПериода, НЕДЕЛЯ)
	|		КОГДА &ВидПериода = ""МЕСЯЦ""
	|			ТОГДА НАЧАЛОПЕРИОДА(Периоды.НачалоПериода, МЕСЯЦ)
	|		КОГДА &ВидПериода = ""КВАРТАЛ""
	|			ТОГДА НАЧАЛОПЕРИОДА(Периоды.НачалоПериода, КВАРТАЛ)
	|		КОГДА &ВидПериода = ""ГОД""
	|			ТОГДА НАЧАЛОПЕРИОДА(Периоды.НачалоПериода, ГОД)
	|	КОНЕЦ КАК НачалоКалендарногоПериода,
	|	ВЫБОР
	|		КОГДА &ВидПериода = ""ДЕНЬ""
	|			ТОГДА КОНЕЦПЕРИОДА(Периоды.НачалоПериода, ДЕНЬ)
	|		КОГДА &ВидПериода = ""НЕДЕЛЯ""
	|			ТОГДА КОНЕЦПЕРИОДА(Периоды.НачалоПериода, НЕДЕЛЯ)
	|		КОГДА &ВидПериода = ""МЕСЯЦ""
	|			ТОГДА КОНЕЦПЕРИОДА(Периоды.НачалоПериода, МЕСЯЦ)
	|		КОГДА &ВидПериода = ""КВАРТАЛ""
	|			ТОГДА КОНЕЦПЕРИОДА(Периоды.НачалоПериода, КВАРТАЛ)
	|		КОГДА &ВидПериода = ""ГОД""
	|			ТОГДА КОНЕЦПЕРИОДА(Периоды.НачалоПериода, ГОД)
	|	КОНЕЦ КАК КонецКалендарногоПериода
	|ПОМЕСТИТЬ ТаблицаПериодов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаНомеров.Номер + 1 КАК НомерПериода,
	|		ВЫБОР
	|			КОГДА &ВидПериода = ""ДЕНЬ""
	|				ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, ДЕНЬ, ТаблицаНомеров.Номер)
	|			КОГДА &ВидПериода = ""НЕДЕЛЯ""
	|				ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, НЕДЕЛЯ, ТаблицаНомеров.Номер)
	|			КОГДА &ВидПериода = ""МЕСЯЦ""
	|				ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, МЕСЯЦ, ТаблицаНомеров.Номер)
	|			КОГДА &ВидПериода = ""КВАРТАЛ""
	|				ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, КВАРТАЛ, ТаблицаНомеров.Номер)
	|			КОГДА &ВидПериода = ""ГОД""
	|				ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, ГОД, ТаблицаНомеров.Номер)
	|		КОНЕЦ КАК НачалоПериода,
	|		ДОБАВИТЬКДАТЕ(ВЫБОР
	|				КОГДА &ВидПериода = ""ДЕНЬ""
	|					ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, ДЕНЬ, ТаблицаНомеров.Номер + 1)
	|				КОГДА &ВидПериода = ""НЕДЕЛЯ""
	|					ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, НЕДЕЛЯ, ТаблицаНомеров.Номер + 1)
	|				КОГДА &ВидПериода = ""МЕСЯЦ""
	|					ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, МЕСЯЦ, ТаблицаНомеров.Номер + 1)
	|				КОГДА &ВидПериода = ""КВАРТАЛ""
	|					ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, КВАРТАЛ, ТаблицаНомеров.Номер + 1)
	|				КОГДА &ВидПериода = ""ГОД""
	|					ТОГДА ДОБАВИТЬКДАТЕ(&Дата1, ГОД, ТаблицаНомеров.Номер + 1)
	|			КОНЕЦ, СЕКУНДА, -1) КАК ОкончаниеПериода
	|	ИЗ
	|		ТаблицаНомеров КАК ТаблицаНомеров) КАК Периоды
	|ГДЕ
	|	Периоды.НачалоПериода >= &Дата1
	|	И Периоды.ОкончаниеПериода <= &Дата2";
	#КонецОбласти 
	
	Если ПолучатьВыборку Тогда
		
		ИндексРезультата =  СтруктураЗапроса.Количество();
		СтруктураЗапроса.Вставить("ВыборкаТаблицаПериодов", ИндексРезультата);
		ТекстЗапроса = ТекстЗапроса +ДеньгиКлиентСервер.ТекстРазделителяЗапросов( Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка из врем.таблицы ""ТаблицаПериодов"" ") + 
		"ВЫБРАТЬ 
		|	*,
		|	"""" КАК ПредставлениеПериода
		|ИЗ
		|	ТаблицаПериодов
		|УПОРЯДОЧИТЬ ПО
		|	НомерПериода
		|";
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет текст запроса формированием временной таблицы всех элементов справочников, которые могут быть использованы в качестве статей бюджета. 
//	Каждая "статья бюджета" во временной таблице дополняется:
//		* полным ключом статьи (ключ доходов начинается с "10.", ключ расходов с "20.")
//		* текущими настройками пользователя для выбранных варианта/раздела бюджета (видимость статьи в бюджете и ее порядок в общем списке статей)
//		* наличием плановых сумм по статье, что позволяет в предыдущих периодах видеть план/факт по статьям, ставшим неактуальными
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&МинимальнаяКалендарнаяДата - Дата - календарное начало самого первого бюджетного периода. Например, 
//					если бюджетный период "МЕСЯЦ" начинается с 10.05, его календарным началом будет 01.05.хххх 00:00:00
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//
// Параметры
//	ТекстЗапроса     - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура или Неопределено - структура, в которую добавляются имена и индексы результатов пакетного запроса
//	ПолучатьВыборкуВсехСтатей - Булево - Если ИСТИНА, запрос будет дополнен текстом выборки из таблицы "КлючиСтатей"
//	ПолучатьВыборкуАктуальныхСтатей - Булево - Если ИСТИНА, запрос будет дополнен текстом выборки только актуальных (видимых или имеющих суммы) статей из таблицы "КлючиСтатей"
//	ПрефиксИмен - Строка - Перфикс, который необходимо добавить к именам временных таблиц, наименованиям параметров и выборок
//
Процедура ДополнитьТекстЗапросаКлючамиБюджетныхСтатей(ТекстЗапроса, СтруктураЗапроса, ПолучатьВыборкуВсехСтатей = Ложь, ПолучатьВыборкуАктуальныхСтатей = Истина, ПрефиксИмен = "")

	Если СтруктураЗапроса = Неопределено Тогда
		СтруктураЗапроса = Новый Структура;
	КонецЕсли;
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить(ПрефиксИмен + "АктивныеСтатьиПериода", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица """ + ПрефиксИмен + "АктивныеСтатьиПериода"" ";
	
	#Область ТекстЗапроса
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ
	|	АктивныеСтатьи.ВариантБюджета КАК ВариантБюджета,
	|	АктивныеСтатьи.РазделБюджета КАК РазделБюджета,
	|	АктивныеСтатьи.ТипПоказателя КАК ТипПоказателя,
	|	АктивныеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	АктивныеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	АктивныеСтатьи.Сумма КАК Сумма,
	|	АктивныеСтатьи.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|	ЕСТЬNULL(ПоказателиБюджета.Порядок, АктивныеСтатьи.Порядок) КАК Порядок
	|ПОМЕСТИТЬ АктивныеСтатьиПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоказателиБюджета.ВариантБюджета КАК ВариантБюджета,
	|		МАКСИМУМ(ПоказателиБюджета.НачалоПериода) КАК НачалоПериода,
	|		ПоказателиБюджета.РазделБюджета КАК РазделБюджета,
	|		ПоказателиБюджета.ТипПоказателя КАК ТипПоказателя,
	|		ПоказателиБюджета.ГрафаБюджета КАК ГрафаБюджета,
	|		ПоказателиБюджета.СтатьяБюджета КАК СтатьяБюджета,
	|		СУММА(ПоказателиБюджета.Сумма) КАК Сумма,
	|		ПоказателиБюджета.ГрафаБюджета.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		МАКСИМУМ(ПоказателиБюджета.Порядок) КАК Порядок
	|	ИЗ
	|		РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|	ГДЕ
	|		ПоказателиБюджета.ВариантБюджета = &ВариантБюджета
	|		И (&РазделБюджета = """"
	|				ИЛИ ПоказателиБюджета.РазделБюджета = &РазделБюджета)
	//|		И ПоказателиБюджета.НачалоПериода МЕЖДУ &МинимальнаяКалендарнаяДатаПросмотра И &Дата2
	|		И ПоказателиБюджета.НачалоПериода = &МаксимальнаяКалендарнаяДата
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоказателиБюджета.ВариантБюджета,
	|		ПоказателиБюджета.РазделБюджета,
	|		ПоказателиБюджета.ТипПоказателя,
	|		ПоказателиБюджета.ГрафаБюджета,
	|		ПоказателиБюджета.СтатьяБюджета,
	|		ПоказателиБюджета.ГрафаБюджета.ОтношениеКНакоплениям) КАК АктивныеСтатьи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиБюджета КАК ПоказателиБюджета
	|		ПО (АктивныеСтатьи.ВариантБюджета = ПоказателиБюджета.ВариантБюджета
	|				И АктивныеСтатьи.НачалоПериода = ПоказателиБюджета.НачалоПериода
	|				И АктивныеСтатьи.РазделБюджета = ПоказателиБюджета.РазделБюджета
	|				И АктивныеСтатьи.ГрафаБюджета = ПоказателиБюджета.ГрафаБюджета
	|				И АктивныеСтатьи.СтатьяБюджета = ПоказателиБюджета.СтатьяБюджета)
	|	";
	
	Если ЗначениеЗаполнено(ПрефиксИмен) Тогда
		// Запрос используется в другом пакетном запросе. Для отличия одного от другого используется префикс имени
		ЗапросВремТаблицы = СтрЗаменить(ЗапросВремТаблицы, "&", "&" + ПрефиксИмен);
		ЗапросВремТаблицы = СтрЗаменить(ЗапросВремТаблицы, "ПОМЕСТИТЬ АктивныеСтатьиПериода", "ПОМЕСТИТЬ " + ПрефиксИмен + "АктивныеСтатьиПериода");
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", 
				"//" + КомментарийЗапроса + "//////////////////////////////////////////////////////////////////////////////" + Символы.ПС, 
				ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
	
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить(ПрефиксИмен + "КлючиСтатей", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица """ + ПрефиксИмен + "КлючиСтатей"" ";
	
	// Запрос заполняет временную таблицу всеми возможными статьями бюджета и их полными ключами.
	//	В дальнейшем эта таблица может использоваться для группировки оборотов по любому элементу любого справочника 
	//	в те бюджетные статьи, для которых настроена видимость в бюджете.
	#Область ТекстЗапроса
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ
	|	ВсеСтатьи.ТипПоказателя,
	|	ВсеСтатьи.ОтношениеКНакоплениям,
	|	ВсеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	ВсеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	ВсеСтатьи.АктивностьСтатьи,
	|	ВсеСтатьи.Наименование,
	|	ВсеСтатьи.РодительскаяСтатья,
	|	ВЫБОР
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""10.99.""
	|			ТОГДА ""99999.10.""
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""20.99.""
	|			ТОГДА ""99999.20.""
	|		ИНАЧЕ ВсеСтатьи.КлючСтатьи
	|	КОНЕЦ КАК КлючСтатьи,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &РазделБюджета = """"
	|					ИЛИ &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|				ТОГДА ВсеСтатьи.ВидимостьПоУмолчаниюДляСвободныхДенег
	|			ИНАЧЕ ВсеСтатьи.ВидимостьПоУмолчаниюДляНакоплений
	|		КОНЕЦ) КАК ВидимостьПоУмолчанию,
	|	МАКСИМУМ(НЕ АктивныеСтатьи.СтатьяБюджета ЕСТЬ NULL) КАК Видимость,
	|	МАКСИМУМ(ЕСТЬNULL(АктивныеСтатьи.Сумма, 0) <> 0) КАК ПоСтатьеЕстьСуммы,
	|	ВсеСтатьи.ПорядокПоУмолчанию,
	|	МАКСИМУМ(ЕСТЬNULL(АктивныеСтатьи.Порядок, ВсеСтатьи.ПорядокПоУмолчанию + 99)) КАК Порядок
	|ПОМЕСТИТЬ КлючиСтатей
	|ИЗ
	|	(
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя КАК ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка КАК ГрафаБюджета,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета, ГрафыБюджета.Ссылка) КАК СтатьяБюджета,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета.Активность, ИСТИНА) КАК АктивностьСтатьи,
	|		ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета.Наименование, ГрафыБюджета.Наименование) КАК Наименование,
	|		ВЫБОР
	|			КОГДА КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете = НЕОПРЕДЕЛЕНО
	|				ТОГДА ГрафыБюджета.Ссылка
	|			ИНАЧЕ КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете
	|		КОНЕЦ КАК РодительскаяСтатья,
	|		ГрафыБюджета.Код + ЕСТЬNULL(КлючиБюджетныхСтатей.Ключ, """") КАК КлючСтатьи,
	|		ВЫБОР
	|			КОГДА ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита))
	|					И КлючиБюджетныхСтатей.СтатьяБюджета ССЫЛКА Справочник.Долги
	|				ТОГДА ЛОЖЬ
	|			КОГДА КлючиБюджетныхСтатей.СтатьяБюджета В (ЗНАЧЕНИЕ(Справочник.СтатьиДоходов.ПрочиеДоходы), ЗНАЧЕНИЕ(Справочник.СтатьиРасходов.ПрочиеРасходы))
	|				ТОГДА ЛОЖЬ
	|			КОГДА ЕСТЬNULL(КлючиБюджетныхСтатей.СтатьяБюджета, ГрафыБюджета.Ссылка) В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы))
	|					ИЛИ КлючиБюджетныхСтатей.РодительскаяСтатьяВБюджете = НЕОПРЕДЕЛЕНО
	|						И КлючиБюджетныхСтатей.СтатьяБюджета.Активность
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВидимостьПоУмолчаниюДляСвободныхДенег,
	|		ЛОЖЬ КАК ВидимостьПоУмолчаниюДляНакоплений,
	|		ГрафыБюджета.ПорядокПоУмолчанию КАК ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиСтатей КАК КлючиБюджетныхСтатей
	|			ПО ГрафыБюджета.ТипСтатьи = КлючиБюджетныхСтатей.ТипСтатьи
	|				И (НЕ КлючиБюджетныхСтатей.ТипСтатьи В (""Кошельки"", ""Имущество""))
	|				И (НЕ КлючиБюджетныхСтатей.ИсключатьИзБюджета)
	|				И (ВЫБОР 
	|					КОГДА ГрафыБюджета.Ссылка = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита) 
	|						ТОГДА НЕ ВЫРАЗИТЬ(КлючиБюджетныхСтатей.СтатьяБюджета КАК Справочник.Долги).ИспользоватьДляУчетаВыданныхДолгов
	|					КОГДА ГрафыБюджета.Ссылка = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы) 
	|						ТОГДА НЕ ВЫРАЗИТЬ(КлючиБюджетныхСтатей.СтатьяБюджета КАК Справочник.Долги).ИспользоватьДляУчетаВзятыхДолгов
	|					Иначе Истина
	|				КОНЕЦ)
	|	ГДЕ
	|		НЕ ГрафыБюджета.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка,
	|		ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка),
	|		ИСТИНА,
	|		""Свободные деньги"",
	|		ГрафыБюджета.Ссылка,
	|		ГрафыБюджета.Код + ""0."",
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ГрафыБюджета.ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|	ГДЕ
	|		ГрафыБюджета.ОтношениеКНакоплениям > 0
	|		И НЕ ГрафыБюджета.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГрафыБюджета.ТипПоказателя,
	|		ГрафыБюджета.ОтношениеКНакоплениям,
	|		ГрафыБюджета.Ссылка,
	|		ГрафыБюджета.Ссылка,
	|		ИСТИНА,
	|		ГрафыБюджета.Наименование,
	|		ГрафыБюджета.Родитель,
	|		ГрафыБюджета.Код,
	|		ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)),
	|		ГрафыБюджета.Ссылка В (ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы), ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)),
	|		ГрафыБюджета.ПорядокПоУмолчанию
	|	ИЗ
	|		Справочник.ГрафыБюджета КАК ГрафыБюджета
	|	ГДЕ
	|		НЕ ГрафыБюджета.ПометкаУдаления
	|		
	|		) КАК ВсеСтатьи
	|		
	|		Левое соединение АктивныеСтатьиПериода КАК АктивныеСтатьи
	|		ПО (АктивныеСтатьи.ОтношениеКНакоплениям = ВсеСтатьи.ОтношениеКНакоплениям
	|				И АктивныеСтатьи.ГрафаБюджета = ВсеСтатьи.ГрафаБюджета
	|				И АктивныеСтатьи.СтатьяБюджета = ВсеСтатьи.СтатьяБюджета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеСтатьи.ТипПоказателя,
	|	ВсеСтатьи.ОтношениеКНакоплениям,
	|	ВсеСтатьи.ГрафаБюджета,
	|	ВсеСтатьи.СтатьяБюджета,
	|	ВсеСтатьи.АктивностьСтатьи,
	|	ВсеСтатьи.Наименование,
	|	ВсеСтатьи.РодительскаяСтатья,
	|	ВЫБОР
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""10.99.""
	|			ТОГДА ""99999.10.""
	|		КОГДА ВсеСтатьи.КлючСтатьи = ""20.99.""
	|			ТОГДА ""99999.20.""
	|		ИНАЧЕ ВсеСтатьи.КлючСтатьи
	|	КОНЕЦ,
	|	ВсеСтатьи.ПорядокПоУмолчанию
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтатьи,
	|	ГрафаБюджета,
	|	СтатьяБюджета";
	
	Если ЗначениеЗаполнено(ПрефиксИмен) Тогда
		// Запрос используется в другом пакетном запросе. Для отличия одного от другого используется префикс имени
		ЗапросВремТаблицы = СтрЗаменить(ЗапросВремТаблицы, "&", "&" + ПрефиксИмен);
		ЗапросВремТаблицы = СтрЗаменить(ЗапросВремТаблицы, "ПОМЕСТИТЬ КлючиСтатей", "ПОМЕСТИТЬ " + ПрефиксИмен + "КлючиСтатей");
		ЗапросВремТаблицы = СтрЗаменить(ЗапросВремТаблицы, "Левое соединение АктивныеСтатьиПериода", "Левое соединение " + ПрефиксИмен + "АктивныеСтатьиПериода");
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", 
				"//" + КомментарийЗапроса + "//////////////////////////////////////////////////////////////////////////////" + Символы.ПС, 
				ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
	
	// Для получения ключа статьи недостаточно использовать только ссылку. Следует так же учитывать:
	//	- тип показателя (например, долги, имущество, кошельки, имущество и фин.цели могут использоваться как в доходах, так и в расходах)
	//	- отношение к накоплениям (например, списания по финансовым целям в одном разделе бюджета явлеяется поступлением в другом)
	// Полный ключ статьи, начинающийся с кода раздела бюджета, уже учитывает все эти особенности и в уточняющих отборах не нуждается.
	
	Если ПолучатьВыборкуВсехСтатей Тогда
		
		ИндексРезультата =  СтруктураЗапроса.Количество();
		СтруктураЗапроса.Вставить("ВыборкаКлючиСтатей", ИндексРезультата);
		ТекстЗапроса = ТекстЗапроса +ДеньгиКлиентСервер.ТекстРазделителяЗапросов( Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка всех статей из врем.таблицы ""КлючиСтатей"" ") + 
		"ВЫБРАТЬ 
		|	*
		|ИЗ
		|	КлючиСтатей
		|УПОРЯДОЧИТЬ ПО
		|	КлючСтатьи
		|";
		
	КонецЕсли;
	
	Если ПолучатьВыборкуАктуальныхСтатей Тогда
		
		ИндексРезультата =  СтруктураЗапроса.Количество();
		СтруктураЗапроса.Вставить("ВыборкаСтатьиБюджета", ИндексРезультата);
		ТекстЗапроса = ТекстЗапроса +ДеньгиКлиентСервер.ТекстРазделителяЗапросов( Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка только актуальных статей из врем.таблицы ""КлючиСтатей"" ") + 
		"ВЫБРАТЬ
		|	ВсеСтатьи.ТипПоказателя,
		|	ВсеСтатьи.ОтношениеКНакоплениям,
		|	ВсеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
		|	ВсеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
		|	ВсеСтатьи.АктивностьСтатьи,
		|	ВсеСтатьи.Наименование,
		|	ВсеСтатьи.КлючСтатьи,
		|	ВсеСтатьи.ВидимостьПоУмолчанию,
		|	ВсеСтатьи.Видимость,
		|	ВсеСтатьи.ПоСтатьеЕстьСуммы,
		|	ВсеСтатьи.ПорядокПоУмолчанию,
		|	ВсеСтатьи.Порядок,
		|	АктуальныеРодители.РодительскаяСтатья,
		|	ЕСТЬNULL(АктуальныеРодители.КлючРодительскойСтатьи, ПОДСТРОКА(ВсеСтатьи.КлючСтатьи, 1, 3)) КАК КлючРодительскойСтатьи
		|ИЗ
		|	КлючиСтатей КАК ВсеСтатьи
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КлючиАктуальныхРодителей.ГрафаБюджета КАК ГрафаБюджета,
		|			КлючиАктуальныхРодителей.СтатьяБюджета КАК СтатьяБюджета,
		|			КлючиАктуальныхРодителей.КлючАктуальногоРодителя КАК КлючРодительскойСтатьи,
		|			АктуальныеРодители.СтатьяБюджета КАК РодительскаяСтатья
		|		ИЗ
		|			(ВЫБРАТЬ
		|				КлючиСтатей.ГрафаБюджета КАК ГрафаБюджета,
		|				КлючиСтатей.СтатьяБюджета КАК СтатьяБюджета,
		|				МАКСИМУМ(КлючиРодителей.КлючСтатьи) КАК КлючАктуальногоРодителя
		|			ИЗ
		|				КлючиСтатей КАК КлючиСтатей
		|					ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК КлючиРодителей
		|					ПО КлючиСтатей.ГрафаБюджета = КлючиРодителей.ГрафаБюджета
		|						И КлючиСтатей.КлючСтатьи > КлючиРодителей.КлючСтатьи
		|						И (КлючиСтатей.КлючСтатьи <= КлючиРодителей.КлючСтатьи + ""яяя"")
		|						И (КлючиРодителей.Видимость)
		|			ГДЕ
		|				(КлючиСтатей.Видимость
		|						ИЛИ КлючиСтатей.ПоСтатьеЕстьСуммы)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				КлючиСтатей.ГрафаБюджета,
		|				КлючиСтатей.СтатьяБюджета) КАК КлючиАктуальныхРодителей
		|				ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК АктуальныеРодители
		|				ПО (АктуальныеРодители.КлючСтатьи = КлючиАктуальныхРодителей.КлючАктуальногоРодителя)) КАК АктуальныеРодители
		|		ПО ВсеСтатьи.ГрафаБюджета = АктуальныеРодители.ГрафаБюджета
		|			И ВсеСтатьи.СтатьяБюджета = АктуальныеРодители.СтатьяБюджета
		|ГДЕ
		|	(ВсеСтатьи.Видимость
		|			ИЛИ ВсеСтатьи.ПоСтатьеЕстьСуммы)
		|	И ВЫБОР
		|			КОГДА &РазделБюджета = """"
		|				ТОГДА ВсеСтатьи.ОтношениеКНакоплениям = 0
		|			КОГДА &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
		|				ТОГДА ВсеСтатьи.ОтношениеКНакоплениям <= 0
		|			ИНАЧЕ ВсеСтатьи.ОтношениеКНакоплениям >= 0
		|		КОНЕЦ
		|	И ВсеСтатьи.СтатьяБюджета <> &РазделБюджета
		|	И НЕ(ВсеСтатьи.ГрафаБюджета = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ВыдачаВзаймы)
		|					И ВсеСтатьи.СтатьяБюджета ССЫЛКА Справочник.Долги
		|				ИЛИ ВсеСтатьи.ГрафаБюджета = ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПолучениеКредита)
		|					И ВсеСтатьи.СтатьяБюджета ССЫЛКА Справочник.Долги
		|				ИЛИ ВсеСтатьи.СтатьяБюджета ССЫЛКА Справочник.Имущество)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючРодительскойСтатьи,
		|	ВсеСтатьи.Порядок";
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет текст запроса получением выборки по оборотам план/факт по операциям
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&ДатаОстатков - Дата - наименьшая из 2-х дат: начало рассматриваемого в бюджете периода или текущая дата
//	&Дата1 - Дата - начальная дата самого первого бюджетного периода (задана с учетом смещения от календарного начала)
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//	&ВалютаУчета - СправочникСсылка.Валюты - значение одноименной константы
//	&ВалютаВарианта - СправочникСсылка.Валюты - валюта выбранного варианта бюджета
//
//Временные таблицы, которые должны быть в тексте запроса до выполнения данного запроса: 
//		"ТаблицаПериодов" - пронумерованные периоды бюджета в пределах заданного пользователем календарного периода (см. ДополнитьТекстЗапросаТаблицейПериодов())
//		"КлючиСтатей"  - бюджетные статьи с уникальными ключами и настройками пользователя (см. ДополнитьТекстЗапросаКлючамиБюджетныхСтатей())
//
// Параметры
//	ТекстЗапроса - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура - структура, в которую добавляются имена и индексы результатов пакетного запроса.
//
Процедура ДополнитьТекстЗапросаОперациямиИПоказателями(ТекстЗапроса, СтруктураЗапроса, ПолучатьВыборкуСтруктурыСИтогами = Ложь)

	// Дополняем текст запросом последних курсов валют
	Если Не СтруктураЗапроса.Свойство("ПоследниеКурсы") Тогда
		ДополнитьТекстЗапросаПоследнимиКурсамиВалют(ТекстЗапроса, СтруктураЗапроса);
	КонецЕсли;
	
	// Дополняем текст запросом оборотов плановых и фактических операций
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ОборотыОпераций", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ОборотыОпераций"" ";
	
	#Область ТекстЗапроса
	// Получаем из регистров накопления "ОборотыПлановыхОпераций" и "ФактическиеОборотыБюджета" обороты по строкам документа
	//	и по левому соединению сразу получаем курсы валют. Для отсутствующих курсов используются курсы из временной таблицы "ПоследниеКурсы"
	//	Одновременно присоединяем таблицу периодов и выполняем группировку
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаПериодов.НомерПериода, 0) КАК НомерПериода,
	|	Подзапрос.ТипПоказателя КАК ТипПоказателя,
	|	Подзапрос.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|	Подзапрос.СтатьяОперации КАК СтатьяОперации,
	|	СУММА(ВЫБОР
	|			КОГДА Подзапрос.Валюта = &ВалютаВарианта
	|				ТОГДА Подзапрос.СуммаПлановыхОпераций
	|			ИНАЧЕ ВЫРАЗИТЬ(Подзапрос.СуммаПлановыхОпераций * ЕСТЬNULL(КурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(КурсыВалютыОтчета.Кратность, 1) / ВЫБОР
	|						КОГДА ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|							ТОГДА 1
	|						ИНАЧЕ ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|					КОНЕЦ КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаПлановыхОпераций,
	|	СУММА(ВЫБОР
	|			КОГДА Подзапрос.Валюта = &ВалютаВарианта
	|				ТОГДА Подзапрос.СуммаФакт
	|			ИНАЧЕ ВЫРАЗИТЬ(Подзапрос.СуммаФакт * ЕСТЬNULL(КурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(КурсыВалютыОтчета.Кратность, 1) / ВЫБОР
	|						КОГДА ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|							ТОГДА 1
	|						ИНАЧЕ ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|					КОНЕЦ КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаФакт,
	|	Подзапрос.Валюта,
	|	СУММА(Подзапрос.СуммаПлановыхОпераций) КАК СуммаПлановыхОперацийВВалютеОперации,
	|	СУММА(Подзапрос.СуммаФакт) КАК СуммаФактВВалютеОперации,
	|	Подзапрос.Период,
	|	Подзапрос.Регистратор,
	|	Подзапрос.Шаблон
	|ПОМЕСТИТЬ ОборотыОпераций
	|ИЗ
	|	(ВЫБРАТЬ
	|		СводОпераций.День КАК День,
	|		СводОпераций.ТипПоказателя КАК ТипПоказателя,
	|		СводОпераций.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		СводОпераций.СтатьяОперации КАК СтатьяОперации,
	|		СводОпераций.Валюта КАК Валюта,
	|		СУММА(СводОпераций.СуммаПлановыхОпераций) КАК СуммаПлановыхОпераций,
	|		СУММА(СводОпераций.СуммаФакт) КАК СуммаФакт,
	|		СводОпераций.Период КАК Период,
	|		СводОпераций.Регистратор КАК Регистратор,
	|		СводОпераций.Шаблон КАК Шаблон
	|	ИЗ
	|		(ВЫБРАТЬ
	|			НАЧАЛОПЕРИОДА(ПланОперации.Период, ДЕНЬ) КАК День,
	|			ПланОперации.ТипПоказателя КАК ТипПоказателя,
	|			ВЫБОР
	|				КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.ГрафыБюджета
	|					ТОГДА ПланОперации.СтатьяБюджета.ОтношениеКНакоплениям
	|				КОГДА ПланОперации.СтатьяБюджета ССЫЛКА Справочник.ФинансовыеЦели
	|					ТОГДА ВЫБОР
	|							КОГДА ПланОперации.РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|								ТОГДА -1
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ОтношениеКНакоплениям,
	|			ПланОперации.СтатьяБюджета КАК СтатьяОперации,
	|			ПланОперации.Валюта КАК Валюта,
	|			ПланОперации.Сумма КАК СуммаПлановыхОпераций,
	|			0 КАК СуммаФакт,
	|			ЕСТЬNULL(ДатыРасписаний.ПлановаяОперация.Дата, ПланОперации.Период) КАК Период,
	|			ЕСТЬNULL(ДатыРасписаний.ПлановаяОперация, НЕОПРЕДЕЛЕНО) КАК Регистратор,
	|			ПланОперации.Регистратор КАК Шаблон
	|		ИЗ
	|			РегистрНакопления.ОборотыПлановыхОпераций КАК ПланОперации
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
	|				ПО ПланОперации.Регистратор = ДатыРасписаний.ВладелецРасписания
	|					И ПланОперации.ПлановаяДата = ДатыРасписаний.ПлановаяДата
	|		ГДЕ
	|			ПланОперации.Период МЕЖДУ &Дата1 И &Дата2
	|			И ПланОперации.Активность
	|			И (&РазделБюджета = """"
	|					ИЛИ ПланОперации.РазделБюджета = &РазделБюджета)
	|			И (НЕ ПланОперации.СтатьяБюджета ССЫЛКА Справочник.КошелькиИСчета
	|					ИЛИ ВЫРАЗИТЬ(ПланОперации.СтатьяБюджета КАК Справочник.КошелькиИСчета).ТипСчета =  ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.БанковскаяКартаКредитная))
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			НАЧАЛОПЕРИОДА(ФактОбороты.Период, ДЕНЬ),
	|			ФактОбороты.ТипПоказателя,
	|			ВЫБОР
	|				КОГДА ФактОбороты.СтатьяБюджета ССЫЛКА Справочник.ГрафыБюджета
	|					ТОГДА ФактОбороты.СтатьяБюджета.ОтношениеКНакоплениям
	|				КОГДА ФактОбороты.СтатьяБюджета ССЫЛКА Справочник.ФинансовыеЦели
	|					ТОГДА ВЫБОР
	|							КОГДА ФактОбороты.РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|								ТОГДА -1
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			ФактОбороты.СтатьяБюджета,
	|			ФактОбороты.Валюта,
	|			0,
	|			ФактОбороты.СуммаОборот,
	|			ФактОбороты.Период,
	|			ФактОбороты.Регистратор,
	|			ЕСТЬNULL(ДатыРасписаний.ВладелецРасписания, НЕОПРЕДЕЛЕНО)
	|		ИЗ
	|			РегистрНакопления.ФактическиеОборотыБюджета.Обороты(
	|					&Дата1,
	|					&Дата2,
	|					Запись,
	|					&РазделБюджета = """"
	|						ИЛИ РазделБюджета = &РазделБюджета) КАК ФактОбороты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
	|				ПО ФактОбороты.Регистратор = ДатыРасписаний.ПлановаяОперация) КАК СводОпераций
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СводОпераций.День,
	|		СводОпераций.ТипПоказателя,
	|		СводОпераций.ОтношениеКНакоплениям,
	|		СводОпераций.Валюта,
	|		СводОпераций.СтатьяОперации,
	|		СводОпераций.Период,
	|		СводОпераций.Регистратор,
	|		СводОпераций.Шаблон) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО Подзапрос.День = КурсыВалют.Период
	|			И Подзапрос.Валюта = КурсыВалют.Валюта
	|			И (КурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыОтчета
	|		ПО (КурсыВалют.Период = КурсыВалютыОтчета.Период)
	|			И (КурсыВалютыОтчета.Валюта = &ВалютаВарианта)
	|			И (КурсыВалютыОтчета.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсы
	|		ПО Подзапрос.Валюта = ПоследниеКурсы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсыОтчета
	|		ПО (ПоследниеКурсыОтчета.Валюта = &ВалютаВарианта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодов КАК ТаблицаПериодов
	|		ПО (Подзапрос.День МЕЖДУ ТаблицаПериодов.НачалоПериода И ТаблицаПериодов.ОкончаниеПериода)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &РазделБюджета = """"
	|				ТОГДА Подзапрос.ОтношениеКНакоплениям = 0
	|			КОГДА &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|				ТОГДА Подзапрос.ОтношениеКНакоплениям <= 0
	|			ИНАЧЕ Подзапрос.ОтношениеКНакоплениям >= 0
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ТаблицаПериодов.НомерПериода, 0),
	|	Подзапрос.ТипПоказателя,
	|	Подзапрос.ОтношениеКНакоплениям,
	|	Подзапрос.СтатьяОперации,
	|	Подзапрос.Валюта,
	|	Подзапрос.Период,
	|	Подзапрос.Регистратор,
	|	Подзапрос.Шаблон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипПоказателя,
	|	ОтношениеКНакоплениям,
	|	СтатьяОперации";
	#КонецОбласти
	
	
	// Дополняем текст запросом показателей бюджета и ключами бюджетных статей
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВесьБюджет", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " таблица ""ВесьБюджет"" ";
	
	#Область ТекстЗапроса
	// таблицу оборотов бюджета дополняем суммами лимитов по бюджету и ключами бюджетных статей
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	Подзапрос.НомерПериода,
	|	Подзапрос.Период,
	|	Подзапрос.Регистратор,
	|	Подзапрос.Шаблон,
	|	Подзапрос.ТипПоказателя,
	|	Подзапрос.ОтношениеКНакоплениям,
	|	Подзапрос.СтатьяОперации,
	|	Подзапрос.СуммаПлановыхОпераций,
	|	Подзапрос.СуммаФакт,
	|	Подзапрос.СуммаПоБюджету,
	|	Подзапрос.Комментарий,
	|	ЕСТЬNULL(КлючиСтатей.КлючСтатьи, ВЫБОР
	|			КОГДА Подзапрос.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА ""99999.10.""
	|			ИНАЧЕ ""99999.20.""
	|		КОНЕЦ) КАК КлючСтатьи,
	|	ЕСТЬNULL(КлючиСтатей.ГрафаБюджета, ВЫБОР
	|			КОГДА Подзапрос.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеДоходы)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГрафыБюджета.ПрочиеРасходы)
	|		КОНЕЦ) КАК ГрафаБюджета
	|ПОМЕСТИТЬ ВесьБюджет
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОборотыОпераций.НомерПериода КАК НомерПериода,
	|		ОборотыОпераций.Период КАК Период,
	|		ОборотыОпераций.Регистратор КАК Регистратор,
	|		ОборотыОпераций.Шаблон КАК Шаблон,
	|		ОборотыОпераций.ТипПоказателя КАК ТипПоказателя,
	|		ОборотыОпераций.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|		ОборотыОпераций.СтатьяОперации КАК СтатьяОперации,
	|		ОборотыОпераций.СуммаПлановыхОпераций КАК СуммаПлановыхОпераций,
	|		ОборотыОпераций.СуммаФакт КАК СуммаФакт,
	|		0 КАК СуммаПоБюджету,
	|		"""" КАК Комментарий
	|	ИЗ
	|		ОборотыОпераций КАК ОборотыОпераций
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСТЬNULL(Таблицапериодов.НомерПериода, 0),
	|		Таблицапериодов.НачалоПериода,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		Показатели.ТипПоказателя,
	|		ВЫБОР
	|			КОГДА Показатели.СтатьяБюджета ССЫЛКА Справочник.ГрафыБюджета
	|				ТОГДА Показатели.СтатьяБюджета.ОтношениеКНакоплениям
	|			КОГДА Показатели.СтатьяБюджета ССЫЛКА Справочник.ФинансовыеЦели
	|				ТОГДА ВЫБОР
	|						КОГДА Показатели.РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|							ТОГДА -1
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		Показатели.СтатьяБюджета,
	|		0,
	|		0,
	|		Показатели.Сумма,
	|		Показатели.Комментарий
	|	ИЗ
	|		РегистрСведений.ПоказателиБюджета КАК Показатели
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодов КАК Таблицапериодов
	|			ПО (Таблицапериодов.НачалоКалендарногоПериода = Показатели.НачалоПериода)
	|	ГДЕ
	|		Показатели.НачалоПериода МЕЖДУ &КалендарнаяДатаОстатков И &Дата2
	|		И Показатели.ВариантБюджета = &ВариантБюджета
	|		И (&РазделБюджета = """" ИЛИ Показатели.РазделБюджета = &РазделБюджета)
	|) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК КлючиСтатей
	|		ПО Подзапрос.ТипПоказателя = КлючиСтатей.ТипПоказателя
	|			И Подзапрос.ОтношениеКНакоплениям = КлючиСтатей.ОтношениеКНакоплениям
	|			И Подзапрос.СтатьяОперации = КлючиСтатей.СтатьяБюджета
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &РазделБюджета = """"
	|				ТОГДА Подзапрос.ОтношениеКНакоплениям = 0
	|			КОГДА &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|				ТОГДА Подзапрос.ОтношениеКНакоплениям <= 0
	|			ИНАЧЕ Подзапрос.ОтношениеКНакоплениям >= 0
	|		КОНЕЦ";
	#КонецОбласти
	
	
	// Дополняем текст созданием временной таблицы, в которой обороты привязанны к актуальным сатьям бюджета
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ГотовыеОборотыПланФакт", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ГотовыеОборотыПланФакт"" ";
	
	#Область ТекстЗапроса
	// Для каждой статьи из таблицы "ВесьБюджет" в таблице "КлючиСтатей" находим соответствующую статью или ближайшего родителя, 
	//	для которого установлена "Видимость" или отметка "ПоСтатьеЕстьСуммы"
	//	Все обороты, для которых не найдется соответствия, автоматически будут сгруппированы в "Прочих доходах" и "Прочих расходах",
	// Итоги в выборке получаем по типу показателя (поступление/списание) и статье бюджета
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	ВесьБюджет.НомерПериода КАК НомерПериода,
	|	ВесьБюджет.Период,
	|	ВесьБюджет.Регистратор КАК Операция,
	|	ВесьБюджет.Шаблон КАК Шаблон,
	|	ВесьБюджет.СтатьяОперации,
	|	АктуальныеСтатьи.ТипПоказателя КАК ТипПоказателя,
	|	АктуальныеСтатьи.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
	|	АктуальныеСтатьи.СтатьяБюджета КАК СтатьяБюджета,
	|	АктуальныеСтатьи.РодительскаяСтатья КАК РодительскаяСтатья,
	|	СУММА(ВесьБюджет.СуммаПлановыхОпераций) КАК СуммаПлановыхОпераций,
	|	СУММА(ВесьБюджет.СуммаПоБюджету) КАК СуммаПоБюджету,
	|	СУММА(ВесьБюджет.СуммаПлановыхОпераций + ВесьБюджет.СуммаПоБюджету) КАК СуммаПлан,
	|	СУММА(ВесьБюджет.СуммаФакт) КАК СуммаФакт,
	|	СУММА((ВесьБюджет.СуммаПлановыхОпераций + ВесьБюджет.СуммаПоБюджету - ВесьБюджет.СуммаФакт) * ВЫБОР
	|			КОГДА ВесьБюджет.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Разница,
	|	МАКСИМУМ(ВесьБюджет.Комментарий) КАК Комментарий,
	|	АктуальныеСтатьи.КлючСтатьи КАК КлючСтатьи,
	|	АктуальныеСтатьи.ГрафаБюджета КАК ГрафаБюджета,
	|	АктуальныеСтатьи.Порядок КАК Порядок,
	|	АктуальныеСтатьи.ПорядокПоУмолчанию + АктуальныеСтатьи.Порядок КАК ПорядокВОтчете
	|ПОМЕСТИТЬ ГотовыеОборотыПланФакт
	|ИЗ
	|	ВесьБюджет КАК ВесьБюджет
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВесьБюджет.ГрафаБюджета КАК ГрафаБюджета,
	|			ВесьБюджет.СтатьяОперации КАК ТекущаяСтатья,
	|			МАКСИМУМ(ЕСТЬNULL(СтатьиБюджета.КлючСтатьи, ВЫБОР
	|						КОГДА ВесьБюджет.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|							ТОГДА ""99999.10.""
	|						ИНАЧЕ ""99999.20.""
	|					КОНЕЦ)) КАК КлючАктуальнойСтатьи
	|		ИЗ
	|			ВесьБюджет КАК ВесьБюджет
	|				ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК СтатьиБюджета
	|				ПО ВесьБюджет.ГрафаБюджета = СтатьиБюджета.ГрафаБюджета
	|					И (ВесьБюджет.КлючСтатьи МЕЖДУ СтатьиБюджета.КлючСтатьи И СтатьиБюджета.КлючСтатьи + ""яяя"")
	|					И (СтатьиБюджета.Видимость
	|						ИЛИ СтатьиБюджета.ПоСтатьеЕстьСуммы)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВесьБюджет.ГрафаБюджета,
	|			ВесьБюджет.СтатьяОперации) КАК КлючиАктуальныхСтатей
	|			ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК АктуальныеСтатьи
	|			ПО КлючиАктуальныхСтатей.КлючАктуальнойСтатьи = АктуальныеСтатьи.КлючСтатьи
	|		ПО ВесьБюджет.ГрафаБюджета = КлючиАктуальныхСтатей.ГрафаБюджета
	|			И ВесьБюджет.СтатьяОперации = КлючиАктуальныхСтатей.ТекущаяСтатья
	|ГДЕ
	|	(АктуальныеСтатьи.Видимость
	|			ИЛИ АктуальныеСтатьи.ПоСтатьеЕстьСуммы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВесьБюджет.НомерПериода,
	|	ВесьБюджет.Период,
	|	ВесьБюджет.Регистратор,
	|	ВесьБюджет.Шаблон,
	|	ВесьБюджет.СтатьяОперации,
	|	АктуальныеСтатьи.ТипПоказателя,
	|	АктуальныеСтатьи.ОтношениеКНакоплениям,
	|	АктуальныеСтатьи.СтатьяБюджета,
	|	АктуальныеСтатьи.РодительскаяСтатья,
	|	АктуальныеСтатьи.КлючСтатьи,
	|	АктуальныеСтатьи.Порядок,
	|	АктуальныеСтатьи.ПорядокПоУмолчанию + АктуальныеСтатьи.Порядок,
	|	АктуальныеСтатьи.ГрафаБюджета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтатьи";
	#КонецОбласти
	
	// Дополняем текст выбором оборотов только по тем статьям бюджета, для которых пользователем установлена видимость
	//	или в рассматриваемом периоде имеются ненулевые плановые суммы
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВыборкаПоказателиБюджета", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка показателей по актуальным статьям бюджета ";
	
	#Область ТекстЗапроса
	// Для каждой статьи из таблицы "ВесьБюджет" в таблице "КлючиСтатей" находим соответствующую статью или ближайшего родителя, 
	//	для которого установлена "Видимость" или отметка "ПоСтатьеЕстьСуммы"
	//	Все обороты, для которых не найдется соответствия, автоматически будут сгруппированы в "Прочих доходах" и "Прочих расходах",
	// Итоги в выборке получаем по типу показателя (поступление/списание) и статье бюджета
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса) +
	"ВЫБРАТЬ
	|	ГотовыеОбороты.*
	|ИЗ
	|	ГотовыеОборотыПланФакт КАК ГотовыеОбороты
	|УПОРЯДОЧИТЬ ПО
	|	ГотовыеОбороты.ТипПоказателя,
	|	ГотовыеОбороты.КлючСтатьи,
	|	ГотовыеОбороты.НомерПериода";
	#КонецОбласти
	
	Если ПолучатьВыборкуСтруктурыСИтогами Тогда
		
		// Дополняем текст запросом итогов по актуальным статьям
		ИндексРезультата =  СтруктураЗапроса.Количество();
		СтруктураЗапроса.Вставить("ВыборкаСтруктураСПоказателями", ИндексРезультата);
		КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " выборка структуры бюджета с итоговыми показателями план/факт ";
		
		#Область ТекстЗапроса
		// Выбираем из таблицы КлючиСтатей актуальные статьи и присоединяем к каждой статье итоги оборотов из таблицы ГотовыеОборотыПланФакт
		//	Результат пригоден для вывода в диаграммы по уровням иерархии статей бюджета
		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+
		"ВЫБРАТЬ
		|	СтатьиБюджета.ТипПоказателя КАК ТипПоказателя,
		|	СтатьиБюджета.ОтношениеКНакоплениям,
		|	СтатьиБюджета.ГрафаБюджета,
		|	СтатьиБюджета.СтатьяБюджета,
		|	СтатьиБюджета.КлючСтатьи,
		|	СтатьиБюджета.АктивностьСтатьи,
		|	СтатьиБюджета.Наименование,
		|	СтатьиБюджета.РодительскаяСтатья,
		|	СтатьиБюджета.КлючРодительскойСтатьи,
		|	СтатьиБюджета.ВидимостьПоУмолчанию,
		|	СтатьиБюджета.Видимость,
		|	СтатьиБюджета.ПоСтатьеЕстьСуммы,
		|	СтатьиБюджета.ПорядокПоУмолчанию,
		|	СтатьиБюджета.Порядок,
		|	СУММА(ЕСТЬNULL(ГотовыеОбороты.СуммаПлановыхОпераций, 0)) КАК СуммаПлановыхОпераций,
		|	СУММА(ЕСТЬNULL(ГотовыеОбороты.СуммаПоБюджету, 0)) КАК СуммаПоБюджету,
		|	СУММА(ЕСТЬNULL(ГотовыеОбороты.СуммаПлан, 0)) КАК СуммаПлан,
		|	СУММА(ЕСТЬNULL(ГотовыеОбороты.СуммаФакт, 0)) КАК СуммаФакт,
		|	СУММА(ЕСТЬNULL(ГотовыеОбороты.Разница, 0)) КАК Разница
		|ИЗ
		|	(ВЫБРАТЬ
		|		КлючиСтатей.ТипПоказателя КАК ТипПоказателя,
		|		КлючиСтатей.ОтношениеКНакоплениям КАК ОтношениеКНакоплениям,
		|		КлючиСтатей.ГрафаБюджета КАК ГрафаБюджета,
		|		КлючиСтатей.СтатьяБюджета КАК СтатьяБюджета,
		|		КлючиСтатей.КлючСтатьи КАК КлючСтатьи,
		|		КлючиСтатей.АктивностьСтатьи КАК АктивностьСтатьи,
		|		КлючиСтатей.Наименование КАК Наименование,
		|		КлючиСтатей.РодительскаяСтатья КАК РодительскаяСтатья,
		|		КлючиРодителей.КлючСтатьи КАК КлючРодительскойСтатьи,
		|		КлючиСтатей.ВидимостьПоУмолчанию КАК ВидимостьПоУмолчанию,
		|		КлючиСтатей.Видимость КАК Видимость,
		|		КлючиСтатей.ПоСтатьеЕстьСуммы КАК ПоСтатьеЕстьСуммы,
		|		КлючиСтатей.ПорядокПоУмолчанию КАК ПорядокПоУмолчанию,
		|		КлючиСтатей.Порядок КАК Порядок
		|	ИЗ
		|		КлючиСтатей КАК КлючиСтатей
		|			ЛЕВОЕ СОЕДИНЕНИЕ КлючиСтатей КАК КлючиРодителей
		|			ПО КлючиСтатей.РодительскаяСтатья = КлючиРодителей.СтатьяБюджета
		|				И КлючиСтатей.ГрафаБюджета = КлючиРодителей.ГрафаБюджета
		|	ГДЕ
		|		(КлючиСтатей.Видимость
		|				ИЛИ КлючиСтатей.ПоСтатьеЕстьСуммы)
		|		И ВЫБОР
		|				КОГДА &РазделБюджета = """"
		|					ТОГДА КлючиСтатей.ОтношениеКНакоплениям = 0
		|				КОГДА &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
		|					ТОГДА КлючиСтатей.ОтношениеКНакоплениям <= 0
		|				ИНАЧЕ КлючиСтатей.ОтношениеКНакоплениям >= 0
		|			КОНЕЦ
		|		И КлючиСтатей.СтатьяБюджета <> &РазделБюджета
		|			) КАК СтатьиБюджета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГотовыеОборотыПланФакт КАК ГотовыеОбороты
		|		ПО (ГотовыеОбороты.КлючСтатьи >= СтатьиБюджета.КлючСтатьи)
		|			И (ГотовыеОбороты.КлючСтатьи < СтатьиБюджета.КлючСтатьи + ""яяя"")
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатьиБюджета.Порядок,
		|	СтатьиБюджета.ПорядокПоУмолчанию,
		|	СтатьиБюджета.ПоСтатьеЕстьСуммы,
		|	СтатьиБюджета.ВидимостьПоУмолчанию,
		|	СтатьиБюджета.Видимость,
		|	СтатьиБюджета.ТипПоказателя,
		|	СтатьиБюджета.СтатьяБюджета,
		|	СтатьиБюджета.Наименование,
		|	СтатьиБюджета.РодительскаяСтатья,
		|	СтатьиБюджета.КлючСтатьи,
		|	СтатьиБюджета.ГрафаБюджета,
		|	СтатьиБюджета.КлючРодительскойСтатьи,
		|	СтатьиБюджета.АктивностьСтатьи,
		|	СтатьиБюджета.ОтношениеКНакоплениям
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТипПоказателя,
		|	СтатьиБюджета.КлючСтатьи";
		#КонецОбласти
		
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет текст запроса формированием временной таблицы последних курсов валют
//
//Обязательные параметры запроса:
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//	&ВалютаУчета - СправочникСсылка.Валюты - значение одноименной константы
//
// Параметры
//	ТекстЗапроса - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура - структура, в которую добавляются имена и индексы результатов пакетного запроса.
//
Процедура ДополнитьТекстЗапросаПоследнимиКурсамиВалют(ТекстЗапроса, СтруктураЗапроса) 

	// Дополняем текст запросом последних курсов валют
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ПоследниеКурсы", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ПоследниеКурсы"" ";
	
	#Область ТекстЗапроса
	// Для корректного пересчета оборотов в валюту варианта требуется, чтобы курсы всех валют, кроме валюты учета, были указанны на 
	//	каждый день (даже если они повторяются). В случае, если курс валюиты на какой-либо из дней не будет найден, для пересчета
	//	будет использоваться последний курс на указанную в параметрах "Дата2".
	// Сохраняем последние курсы во временную таблицу
	ЗапросВремТаблицы = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КурсыВалютСрезПоследних.Валюта,
	|	ВЫБОР
	|		КОГДА КурсыВалютСрезПоследних.Курс = 0
	|			ТОГДА 1
	|		ИНАЧЕ КурсыВалютСрезПоследних.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА КурсыВалютСрезПоследних.Кратность = 0
	|			ТОГДА 1
	|		ИНАЧЕ КурсыВалютСрезПоследних.Кратность
	|	КОНЕЦ КАК Кратность
	|ПОМЕСТИТЬ ПоследниеКурсы
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата2, БазоваяВалюта = &ВалютаУчета) КАК КурсыВалютСрезПоследних";
	ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса))+ ЗапросВремТаблицы;
	#КонецОбласти
	
КонецПроцедуры

// Дополняет текст запроса получением выборки фактических остатков на начало каждого бюджетного периода
//
//Обязательные параметры запроса:
//	&ВариантБюджета - СправочникСсылка.ВариантыБюджетов - вариант бюджета, для которого нужно получить структуру статей и прочие настройки
//	&РазделБюджета - Строка или СправочникСсылка.ФинансовыеЦели - раздел бюджета
//	&ДатаОстатков - Дата - наименьшая из 2-х дат: начало рассматриваемого в бюджете периода или текущая дата
//	&Дата1 - Дата - начальная дата самого первого бюджетного периода (задана с учетом смещения от календарного начала)
//	&Дата2 - Дата - конечная дата самого последнего бюджетного периода
//	&ВалютаУчета - СправочникСсылка.Валюты - значение одноименной константы
//	&ВалютаВарианта - СправочникСсылка.Валюты - валюта выбранного варианта бюджета
//	&СчетОстатков - ПланСчетовСсылка.РазделыУчета - счет, по которому требуется получить остатки денег (свободные, накопления или общий итог)
//
//Временные таблицы, которые должны быть в тексте запроса до выполнения данного запроса: 
//		"ТаблицаПериодов" - пронумерованные периоды бюджета в пределах заданного пользователем календарного периода (см. ДополнитьТекстЗапросаТаблицейПериодов())
//		"КлючиСтатей"  - бюджетные статьи с уникальными ключами и настройками пользователя (см. ДополнитьТекстЗапросаКлючамиБюджетныхСтатей())
//		"ПоследниеКурсы"  - СрезПослдених регистра "КурсыВалют" на дату "Дата2" (создание таблицы см. в процедуре ДополнитьТекстЗапросаОборотамиПланФакт())
//
// Параметры
//	ТекстЗапроса - Строка - дополняемый текст запроса
//	СтруктураЗапроса - Структура - структура, в которую добавляются имена и индексы результатов пакетного запроса.
//
Процедура ДополнитьТекстЗапросаФактическимиОстатками(ТекстЗапроса, СтруктураЗапроса)
	
	// Дополняем текст запросом остатков на каждый день за указанный период
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ОборотыИОстатки", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ОборотыИОстатки"" ";
	
	#Область ТекстЗапроса
	// Создаем временную таблицу остатков по дням за период с ДатаОстатков По Дата2
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса)+
	"ВЫБРАТЬ
	|	ТаблицаПериодов.НомерПериода,
	|	жОстаткиИОбороты.Период КАК День,
	|	жОстаткиИОбороты.Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(КурсыВалютыОтчета.Кратность, 1) / ВЫБОР
	|			КОГДА ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|		КОНЕЦ КАК ЧИСЛО(15, 4)) КАК Курс,
	|	жОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток КАК НаНачалоВВалютеКошелька,
	|	жОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ПриходВВалютеКошелька,
	|	жОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК РасходВВалютеКошелька,
	|	жОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток КАК НаКонецВВалютеКошелька
	|ПОМЕСТИТЬ ОборотыИОстатки
	|ИЗ
	|	РегистрБухгалтерии.ЖурналОпераций.ОстаткиИОбороты(
	|			&ДатаОстатков,
	|			&Дата2,
	|			День,
	|			ДвиженияИГраницыПериода,
	|			ВЫБОР
	|				КОГДА &РазделБюджета = """"
	|					ТОГДА Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Деньги))
	|				КОГДА &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|					ТОГДА Счет = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.СвободныеДеньги)
	|				ИНАЧЕ Счет = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления)
	|			КОНЕЦ,
	|			,
	|			ЕСТЬNULL(Субконто1.Активность, ЛОЖЬ)
	|				И Субконто1.ТипСчета <> ЗНАЧЕНИЕ(Перечисление.ТипыСчетов.БанковскаяКартаКредитная)
	|				И ВЫБОР
	|					КОГДА &РазделБюджета = """"
	|							ИЛИ &РазделБюджета = ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Субконто2 = &РазделБюджета
	|				КОНЕЦ) КАК жОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО жОстаткиИОбороты.Период = КурсыВалют.Период
	|			И жОстаткиИОбороты.Валюта = КурсыВалют.Валюта
	|			И (КурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыОтчета
	|		ПО (КурсыВалют.Период = КурсыВалютыОтчета.Период)
	|			И (КурсыВалютыОтчета.Валюта = &ВалютаВарианта)
	|			И (КурсыВалютыОтчета.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсы
	|		ПО жОстаткиИОбороты.Валюта = ПоследниеКурсы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсыОтчета
	|		ПО (ПоследниеКурсыОтчета.Валюта = &ВалютаВарианта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодов КАК ТаблицаПериодов
	|		ПО (жОстаткиИОбороты.Период МЕЖДУ ТаблицаПериодов.НачалоПериода И ТаблицаПериодов.ОкончаниеПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	День,
	|	ТаблицаПериодов.НомерПериода
	|";
	#КонецОбласти
	
	
	// Дополняем текст запросом остатков по периодам ТаблицыПериодов - чтобы рассчитать курсовую разнизу на начало и конец каждого периода
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ОборотыИОстаткиПоПериодам", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""ОборотыИОстаткиПоПериодам"" ";
	
	#Область ТекстЗапроса
	// Создаем временную таблицу остатков по каждому периоду таблицы периодов
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса)+
	"ВЫБРАТЬ
	|	СводОстатков.НомерПериода,
	|	СводОстатков.НачалоПериода,
	|	СводОстатков.ОкончаниеПериода,
	|	СводОстатков.Валюта,
	|	СводОстатков.НаНачалоВВалютеКошелька,
	|	СводОстатков.НаКонецВВалютеКошелька,
	|	СУММА(ОборотыИОстатки.ПриходВВалютеКошелька * ОборотыИОстатки.Курс) КАК Приход,
	|	СУММА(ОборотыИОстатки.РасходВВалютеКошелька * ОборотыИОстатки.Курс) КАК Расход
	|ПОМЕСТИТЬ ОборотыИОстаткиПоПериодам
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		СводОстатков.НомерПериода КАК НомерПериода,
	|		МАКСИМУМ(ВЫБОР 
	|				КОГДА СводОстатков.НачалоПериода = ДАТАВРЕМЯ(1,1,1) 
	|					ТОГДА ВсеПериоды.НачалоПериода 
	|				ИНАЧЕ 
	|				СводОстатков.НачалоПериода 
	|		КОНЕЦ) КАК НачалоПериода,
	|		МАКСИМУМ(ВЫБОР 
	|			КОГДА СводОстатков.ОкончаниеПериода = ДАТАВРЕМЯ(1,1,1) 
	|				ТОГДА ВсеПериоды.ОкончаниеПериода 
	|			ИНАЧЕ 
	|				КОНЕЦПЕРИОДА(СводОстатков.ОкончаниеПериода, ДЕНЬ) 
	|		КОНЕЦ) КАК ОкончаниеПериода,
	|		СводОстатков.Валюта КАК Валюта,
	|		СУММА(СводОстатков.НаНачалоВВалютеКошелька) КАК НаНачалоВВалютеКошелька,
	|		СУММА(СводОстатков.НаКонецВВалютеКошелька) КАК НаКонецВВалютеКошелька
	|	ИЗ
	|	ТаблицаПериодов КАК ВсеПериоды
	|	ПРАВОЕ СОЕДИНЕНИЕ 
	|		(
	|		ВЫБРАТЬ
	|			ДатыОстатков.НомерПериода КАК НомерПериода,
	|			ДатыОстатков.День КАК НачалоПериода,
	|			ДАТАВРЕМЯ(1, 1, 1) КАК ОкончаниеПериода,
	|			ДатыОстатков.Валюта КАК Валюта,
	|			ВЫБОР
	|				КОГДА ДатыОстатков.СекундаОстатка < ДатыОстатков.День
	|					ТОГДА ЕСТЬNULL(ОборотыИОстатки.НаКонецВВалютеКошелька,0)
	|				ИНАЧЕ ЕСТЬNULL(ОборотыИОстатки.НаНачалоВВалютеКошелька, 0)
	|			КОНЕЦ КАК НаНачалоВВалютеКошелька,
	|			0 КАК НаКонецВВалютеКошелька
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВсеПериоды.НомерПериода КАК НомерПериода,
	|				ВсеПериоды.НачалоПериода КАК День,
	|				МАКСИМУМ(ОборотыИОстатки.День) КАК СекундаОстатка,
	|				ЕСТЬNULL(ОборотыИОстатки.Валюта, &ВалютаВарианта) КАК Валюта
	|			ИЗ
	|				ТаблицаПериодов КАК ВсеПериоды
	|					ЛЕВОЕ СОЕДИНЕНИЕ ОборотыИОстатки КАК ОборотыИОстатки
	|					ПО (ОборотыИОстатки.День <= ВсеПериоды.НачалоПериода)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВсеПериоды.НомерПериода,
	|				ВсеПериоды.НачалоПериода,
	|				ЕСТЬNULL(ОборотыИОстатки.Валюта, &ВалютаВарианта)) КАК ДатыОстатков
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОборотыИОстатки КАК ОборотыИОстатки
	|				ПО ДатыОстатков.Валюта = ОборотыИОстатки.Валюта
	|					И ДатыОстатков.СекундаОстатка = ОборотыИОстатки.День
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДатыОстатков.НомерПериода,
	|			ДАТАВРЕМЯ(1, 1, 1),
	|			ДатыОстатков.День,
	|			ДатыОстатков.Валюта,
	|			0,
	|			ВЫБОР
	|				КОГДА ДатыОстатков.СекундаОстатка > ДатыОстатков.День
	|					ТОГДА ЕСТЬNULL(ОборотыИОстатки.НаНачалоВВалютеКошелька, 0)
	|				ИНАЧЕ ЕСТЬNULL(ОборотыИОстатки.НаКонецВВалютеКошелька, 0)
	|			КОНЕЦ
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВсеПериоды.НомерПериода КАК НомерПериода,
	|				НАЧАЛОПЕРИОДА(ВсеПериоды.ОкончаниеПериода, ДЕНЬ) КАК День,
	|				МАКСИМУМ(ОборотыИОстатки.День) КАК СекундаОстатка,
	|				ЕСТЬNULL(ОборотыИОстатки.Валюта, &ВалютаВарианта) КАК Валюта
	|			ИЗ
	|				ТаблицаПериодов КАК ВсеПериоды
	|					ЛЕВОЕ СОЕДИНЕНИЕ ОборотыИОстатки КАК ОборотыИОстатки
	|					ПО (ОборотыИОстатки.День <= ВсеПериоды.ОкончаниеПериода)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВсеПериоды.НомерПериода,
	|				НАЧАЛОПЕРИОДА(ВсеПериоды.ОкончаниеПериода, ДЕНЬ),
	|				ЕСТЬNULL(ОборотыИОстатки.Валюта, &ВалютаВарианта)) КАК ДатыОстатков
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОборотыИОстатки КАК ОборотыИОстатки
	|				ПО ДатыОстатков.Валюта = ОборотыИОстатки.Валюта
	|					И ДатыОстатков.СекундаОстатка = ОборотыИОстатки.День
	|					
	|					) КАК СводОстатков
	|	 ПО ВсеПериоды.НомерПериода = СводОстатков.НомерПериода
	|	СГРУППИРОВАТЬ ПО
	|		СводОстатков.НомерПериода,
	|		СводОстатков.Валюта
	|		
	|		) КАК СводОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыИОстатки КАК ОборотыИОстатки
	|		ПО (ОборотыИОстатки.НомерПериода = СводОстатков.НомерПериода)
	|			И (ОборотыИОстатки.Валюта = СводОстатков.Валюта)
	|
	|СГРУППИРОВАТЬ ПО
	|	СводОстатков.НомерПериода,
	|	СводОстатков.НачалоПериода,
	|	СводОстатков.ОкончаниеПериода,
	|	СводОстатков.Валюта,
	|	СводОстатков.НаНачалоВВалютеКошелька,
	|	СводОстатков.НаКонецВВалютеКошелька
	|";
	#КонецОбласти
	
	
	// Дополняем текст запросом курсов валют на каждую дату периода и пердыдущую дату
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("КурсыВалютПоВсемПериодам", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " врем.таблица ""КурсыВалютПоВсемПериодам"" ";
	
	#Область ТекстЗапроса
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса)+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПериодов.День КАК День,
	|	ТаблицаПериодов.Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(КурсыВалютыОтчета.Кратность, 1) / ВЫБОР
	|			КОГДА ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(КурсыВалютыОтчета.Курс, 1) * ЕСТЬNULL(КурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|		КОНЕЦ КАК ЧИСЛО(15, 4)) КАК Курс,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПредыдущиеКурсыВалют.Курс, ЕСТЬNULL(ПоследниеКурсы.Курс, 0)) * ЕСТЬNULL(ПредыдущиеКурсыВалютыОтчета.Кратность, ЕСТЬNULL(ПоследниеКурсыОтчета.Кратность, 0)) / ВЫБОР
	|			КОГДА ЕСТЬNULL(ПредыдущиеКурсыВалютыОтчета.Курс, ЕСТЬNULL(ПоследниеКурсыОтчета.Курс, 1)) * ЕСТЬNULL(ПредыдущиеКурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1)) = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(ПредыдущиеКурсыВалютыОтчета.Курс, ЕСТЬNULL(ПоследниеКурсыОтчета.Курс, 1)) * ЕСТЬNULL(ПредыдущиеКурсыВалют.Кратность, ЕСТЬNULL(ПоследниеКурсы.Кратность, 1))
	|		КОНЕЦ КАК ЧИСЛО(15, 4)) КАК ПредыдущийКурс
	|ПОМЕСТИТЬ КурсыВалютПоВсемПериодам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОборотыИОстаткиПоПериодам.НачалоПериода КАК День,
	|		ОборотыИОстаткиПоПериодам.Валюта КАК Валюта
	|	ИЗ
	|		ОборотыИОстаткиПоПериодам КАК ОборотыИОстаткиПоПериодам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ОборотыИОстаткиПоПериодам.ОкончаниеПериода, ДЕНЬ),
	|		ОборотыИОстаткиПоПериодам.Валюта
	|	ИЗ
	|		ОборотыИОстаткиПоПериодам КАК ОборотыИОстаткиПоПериодам) КАК ТаблицаПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО (НАЧАЛОПЕРИОДА(ТаблицаПериодов.День, ДЕНЬ) = КурсыВалют.Период)
	|			И ТаблицаПериодов.Валюта = КурсыВалют.Валюта
	|			И (КурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютыОтчета
	|		ПО (КурсыВалют.Период = КурсыВалютыОтчета.Период)
	|			И (КурсыВалютыОтчета.Валюта = &ВалютаВарианта)
	|			И (КурсыВалютыОтчета.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсы
	|		ПО ТаблицаПериодов.Валюта = ПоследниеКурсы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеКурсы КАК ПоследниеКурсыОтчета
	|		ПО (ПоследниеКурсыОтчета.Валюта = &ВалютаВарианта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК ПредыдущиеКурсыВалют
	|		ПО (НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ТаблицаПериодов.День, ДЕНЬ, -1), ДЕНЬ) = ПредыдущиеКурсыВалют.Период)
	|			И ТаблицаПериодов.Валюта = ПредыдущиеКурсыВалют.Валюта
	|			И (ПредыдущиеКурсыВалют.БазоваяВалюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК ПредыдущиеКурсыВалютыОтчета
	|		ПО (ПредыдущиеКурсыВалют.Период = ПредыдущиеКурсыВалютыОтчета.Период)
	|			И (ПредыдущиеКурсыВалютыОтчета.Валюта = &ВалютаВарианта)
	|			И (ПредыдущиеКурсыВалютыОтчета.БазоваяВалюта = &ВалютаУчета)
	|";
	#КонецОбласти
	
	
	// Дополняем текст выборкой оборотов по каждому периоду
	ИндексРезультата =  СтруктураЗапроса.Количество();
	СтруктураЗапроса.Вставить("ВыборкаФактОстатки", ИндексРезультата);
	КомментарийЗапроса = " " + Формат(ИндексРезультата, "ЧЦ=2; ЧДЦ=; ЧВН=") + " получаем выборку фактических остатков и оборотов по каждому периоду ";
	
	ТекстЗапроса = ТекстЗапроса + ДеньгиКлиентСервер.ТекстРазделителяЗапросов(КомментарийЗапроса)+
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	ОборотыИОстаткиПоПериодам.НомерПериода,
	|	ОборотыИОстаткиПоПериодам.НачалоПериода,
	|	ОборотыИОстаткиПоПериодам.ОкончаниеПериода,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаНачалоВВалютеКошелька, 0) * ЕСТЬNULL(КурсыНаНачало.ПредыдущийКурс, 0)) КАК НаНачало,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.Приход, 0)) КАК Приход,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.Расход, 0)) КАК Расход,
	|	СУММА(
	|		ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаКонецВВалютеКошелька, 0) * ЕСТЬNULL(КурсыНаКонец.Курс, 0) 
	|			+ ЕСТЬNULL(ОборотыИОстаткиПоПериодам.Расход, 0) - ЕСТЬNULL(ОборотыИОстаткиПоПериодам.Приход, 0) 
	|			- ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаНачалоВВалютеКошелька,0) * ЕСТЬNULL(КурсыНаНачало.Курс, 0) 
	|			+ ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаНачалоВВалютеКошелька, 0) * (ЕСТЬNULL(КурсыНаНачало.Курс, 0) - ЕСТЬNULL(КурсыНаНачало.ПредыдущийКурс, 0))
	|			) КАК КурсоваяРазница,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаКонецВВалютеКошелька, 0) * ЕСТЬNULL(КурсыНаКонец.Курс, 0)) КАК НаКонец,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаНачалоВВалютеКошелька, 0)) КАК НаНачалоВВалютеКошелька,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаКонецВВалютеКошелька, 0)) КАК НаКонецВВалютеКошелька,
	|	СУММА(ЕСТЬNULL(ОборотыИОстаткиПоПериодам.НаНачалоВВалютеКошелька, 0) * (ЕСТЬNULL(КурсыНаНачало.Курс, 0) - ЕСТЬNULL(КурсыНаНачало.ПредыдущийКурс, 0))) КАК КурсоваяРазницаНаНачало
	|ИЗ
	|	ОборотыИОстаткиПоПериодам КАК ОборотыИОстаткиПоПериодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютПоВсемПериодам КАК КурсыНаНачало
	|		ПО (КурсыНаНачало.День = ОборотыИОстаткиПоПериодам.НачалоПериода)
	|			И (КурсыНаНачало.Валюта = ОборотыИОстаткиПоПериодам.Валюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютПоВсемПериодам КАК КурсыНаКонец
	|		ПО (КурсыНаКонец.День = НАЧАЛОПЕРИОДА(ОборотыИОстаткиПоПериодам.ОкончаниеПериода, ДЕНЬ))
	|			И (КурсыНаКонец.Валюта = ОборотыИОстаткиПоПериодам.Валюта)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыИОстаткиПоПериодам.НомерПериода,
	|	ОборотыИОстаткиПоПериодам.НачалоПериода,
	|	ОборотыИОстаткиПоПериодам.ОкончаниеПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОборотыИОстаткиПоПериодам.НомерПериода
	|";
	#КонецОбласти
	
КонецПроцедуры

Функция НоваяТаблицаОстатковПоПериодам()

	ТипСумма = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	ТипНомер = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(6, 0));
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("НомерПериода", ТипНомер);
	Результат.Колонки.Добавить("ОстатокНаНачалоПлан", ТипСумма);
	Результат.Колонки.Добавить("ОстатокНаКонецПлан", ТипСумма);
	Результат.Колонки.Добавить("ОстатокНаНачалоФакт", ТипСумма);
	Результат.Колонки.Добавить("ОстатокНаКонецФакт", ТипСумма);
	Результат.Колонки.Добавить("КурсоваяРазница",    ТипСумма);

	Возврат Результат;
	
КонецФункции

Функция УточнитьМаксимальнуюКалендарнуюДату(ВариантБюджета, РазделБюджета, ВыбраннаяКалендарнаяДата) 

	Возврат БюджетированиеСервер.МаксимальноеКалендарноеНачалоВарианта(ВариантБюджета, РазделБюджета, ВыбраннаяКалендарнаяДата);

КонецФункции
 

#КонецЕсли




