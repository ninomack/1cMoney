////////////////////////////////////////////////////////////////////////////////
// ПоддержкаПользователейДеньгиКлиент
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет отправку сообщения через почтовый клиент ОС
//
// Параметры:
//  ПараметрыПисьма - Структура - содержит всю необходимую информацию о письме:
//
//   * Кому      - Массив структур, строка - (обязательный) Интернет адрес получателя письма.
//                 Адрес         - строка - почтовый адрес.
//                 Представление - строка - имя адресата.
//
//   * Копии      - Массив - коллекция структур адресов:
//                   * Адрес         - строка - почтовый адрес (должно быть обязательно заполнено).
//                   * Представление - строка - имя адресата.
//                  
//                - Строка - интернет адреса получателей письма, разделитель - ";".
//
//   * СлепыеКопии - Массив, Строка - см. описание поля Копии.
//
//   * Тема       - Строка - (обязательный) тема почтового сообщения.
//   * Тело       - Строка - (обязательный) текст почтового сообщения (простой текст в кодировке win-1251).
//   * Важность   - ВажностьИнтернетПочтовогоСообщения.
//   * Вложения   - Соответствие - список вложений, где:
//                   * ключ     - Строка - наименование вложения
//                   * значение - ДвоичныеДанные, АдресВоВременномХранилище - данные вложения;
//                              - Структура -    содержащая следующие свойства:
//                                 * ДвоичныеДанные - ДвоичныеДанные - двоичные данные вложения
//                                 * Идентификатор  - Строка - идентификатор вложения, используется для хранения картинок,
//                                                             отображаемых в теле письма.
//
//   * АдресОтвета - Соответствие - см. описание поля Кому.
//   * Пароль      - Строка - пароль для доступа к учетной записи.
//   * ИдентификаторыОснований - Строка - идентификаторы оснований данного письма.
//   * ОбрабатыватьТексты  - Булево - необходимость обрабатывать тексты письма при отправке.
//   * УведомитьОДоставке  - Булево - необходимость запроса уведомления о доставке.
//   * УведомитьОПрочтении - Булево - необходимость запроса уведомления о прочтении.
//   * ТипТекста   - Строка, Перечисление.ТипыТекстовЭлектронныхПисем, ТипТекстаПочтовогоСообщения - определяет тип
//                  переданного теста допустимые значения:
//                  HTML/ТипыТекстовЭлектронныхПисем.HTML - текст почтового сообщения в формате HTML.
//                  ПростойТекст/ТипыТекстовЭлектронныхПисем.ПростойТекст - простой текст почтового сообщения.
//                                                                          Отображается "как есть" (значение по
//                                                                          умолчанию).
//                  РазмеченныйТекст/ТипыТекстовЭлектронныхПисем.РазмеченныйТекст - текст почтового сообщения в формате
//                                                                                  Rich Text.
//
Процедура ОтправитьПочтовоеСообщениеВнешнимПриложением(ПараметрыПисьма) Экспорт
	
	#Если Не ВебКлиент Тогда
		
	Почта     = Новый Почта;
	Сообщение = Новый ПочтовоеСообщение;
	
	Для каждого Получатель Из ПараметрыПисьма.Кому Цикл
		Сообщение.Получатели.Добавить(Получатель.Адрес);
	КонецЦикла;
	 
	Сообщение.Тема = ПараметрыПисьма.Тема;
	Сообщение.Текст = ПараметрыПисьма.Тело;
	
	Для Каждого Вложение Из ПараметрыПисьма.Вложения Цикл
		ДанныеВложения = Вложение.Значение;
		Если ТипЗнч(ДанныеВложения) = Тип("Строка") И ЭтоАдресВременногоХранилища(ДанныеВложения) Тогда
			ДанныеВложения = ПолучитьИзВременногоХранилища(ДанныеВложения);
		КонецЕсли;
		
		Если ТипЗнч(ДанныеВложения) = Тип("Картинка") Тогда
			ДанныеВложения = ДанныеВложения.ПолучитьДвоичныеДанные();
		ИначеЕсли ТипЗнч(ДанныеВложения) = Тип("Файл") И ДанныеВложения.Существует() И ДанныеВложения.ЭтоФайл() Тогда
			ДанныеВложения = Новый ДвоичныеДанные(ДанныеВложения.ПолноеИмя);
		ИначеЕсли ТипЗнч(ДанныеВложения) <> Тип("ДвоичныеДанные") Тогда
			ДанныеВложения = Неопределено;
		КонецЕсли;
		
		Если ДанныеВложения <> Неопределено Тогда
			Сообщение.Вложения.Добавить(ДанныеВложения);
		КонецЕсли;
		
	КонецЦикла;
	
	Почта.Подключиться();
	Почта.Послать(Сообщение);
	Почта.Отключиться();
	
	#КонецЕсли
	
КонецПроцедуры

// Открывает диалог с описанием ошибки, рекомендациями по исправлению и возможностью отправки сообщения в службу поддержки
//
//Параметры:
//	ТекстОшибки - Строка или ФорматированнаяСтрока
//	ЗаголовокФормы - Строка - заголовок формы сообщения об ошибке
//	НомерИконки - Число - 0 - иконка ошибки, 1 - иконка с восклицательным знаком
//	ТекстРекомендаций - Строка или ФорматированнаяСтрока - рекомендации по исправлению или обходу ошибки
//	ДополнительнаяИнформация - произвольный - любое значение, которое может потребоваться при отправки сообщения в службу поддержки
//
Процедура СообщитьОбОшибке(Знач ТекстОшибки, Знач ЗаголовокФормы = "", Знач НомерИконки = 0, Знач ТекстРекомендаций = "", Знач ДополнительнаяИнформация = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекстОшибки", ?(ТипЗнч(ТекстОшибки) = Тип("Строка"), Новый ФорматированнаяСтрока(ТекстОшибки), ТекстОшибки));
	ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормы);
	ПараметрыФормы.Вставить("НомерИконки", НомерИконки);
	ПараметрыФормы.Вставить("ДополнительнаяИнформация", ДополнительнаяИнформация);
	
	Если ЗначениеЗаполнено(ТекстРекомендаций) Тогда
		ПараметрыФормы.Вставить("ТекстРекомендаций", ?(ТипЗнч(ТекстРекомендаций) = Тип("Строка"), Новый ФорматированнаяСтрока(ТекстРекомендаций), ТекстРекомендаций));
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.СообщениеОбОшибке", ПараметрыФормы);
	
КонецПроцедуры
 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции



#КонецОбласти