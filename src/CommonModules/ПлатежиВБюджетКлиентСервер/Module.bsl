
#Область КлассификаторыТерриторий

// КЛАССИФИКАТОРЫ ТЕРРИТОРИИ (ОКАТО / ОКТМО)

Функция НачалоПримененияОКТМО() Экспорт
	
	// Приказ N 159-ст от 14 июня 2013 г.
	
	Возврат '20140101';
	
КонецФункции

Функция ПрименяетсяОКТМО(Период = Неопределено) Экспорт
	
	Возврат Период = Неопределено
		ИЛИ Период >= НачалоПримененияОКТМО();
	
КонецФункции

// Проверяем, только если передан Период.
Функция ПрименяетсяОКТМО8Символов(Период = Неопределено) Экспорт
	
	Возврат ЗначениеЗаполнено(Период)
		И Период >= НачалоДействияПриказа2017_58н();
	
КонецФункции

Функция ЭтоКодОКАТО(Знач Код, Комментарий = "") Экспорт
	
	// ОК 019-95
	
	Код = СокрП(Код);
	
	Если ПустаяСтрока(Код) Тогда
		Комментарий = НСтр("ru = 'Код не указан.'");
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Код) Тогда
		Комментарий = НСтр("ru = 'Код ОКАТО должен включать только цифры.'");
		Возврат Ложь;
	КонецЕсли;
	
	ДлинаКода = СтрДлина(Код);
	Если ДлинаКода <> 2 И ДлинаКода <> 5 И ДлинаКода <> 8 И ДлинаКода <> 11 Тогда
		Комментарий = НСтр("ru = 'Код ОКАТО может состоять из 2, 5, 8 или 11 цифр.'");
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(Код) = 2 Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Разряд 3 отведен под признак Р1, указывающий уровень классификации и вид кодируемого объекта. 
	// Признак второго уровня классификации - Р1 (разряд 3) имеет значение:
	// 1 - автономный округ;
	// 2 - район (в том числе внутригородской), округ;
	// 4 - город, поселок городского типа.
	// ...
	// 2(5)- разрядные коды ... дополняются до 8-разрядных кодов шестью (тремя) нулями
	
	Р1 = Сред(Код, 3, 1);
	
	Если Р1 = "0" ИЛИ Р1 = "1" ИЛИ Р1 = "2" ИЛИ Р1 = "4" Тогда
		Возврат Истина;
	Иначе
		Комментарий = НСтр("ru = 'Разряд 3 кода ОКАТО может принимать значения 0, 1, 2 или 4.'");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ЭтоКодОКТМО(Знач Код, Комментарий = "", Период = Неопределено) Экспорт
	
	// ОК 033-2013
	
	Код = СокрП(Код);
	
	Если ПустаяСтрока(Код) Тогда
		Комментарий = НСтр("ru = 'Код не указан.'");
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Код) Тогда
		Комментарий = НСтр("ru = 'Код ОКТМО должен включать только цифры.'");
		Возврат Ложь;
	КонецЕсли;
	
	// ОКТМО состоит из двух разделов, включающих 
	// - муниципальные образования 
	// - и населенные пункты, входящие в состав муниципальных образований.
	//
	// Первый раздел включает 8-значные цифровые коды.
	//
	// Второй раздел включает 11-значные цифровые коды.
	
	ДлинаКода = СтрДлина(Код);
	Если ПрименяетсяОКТМО8Символов(Период) Тогда
		Если ДлинаКода <> 8 Тогда
			Комментарий = НСтр("ru = 'Код ОКТМО должен указываться только для муниципального образования и состоять из 8 цифр.'");
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Если ДлинаКода <> 8 И ДлинаКода <> 11 Тогда
			Комментарий = НСтр("ru = 'Код ОКТМО может состоять из 8 или 11 цифр.'");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Знак 3 отведен под признак Р1, указывающий ступень классификации и вид кодируемого объекта. 
	// Признак второй ступени классификации - Р1 (знак 3) имеет значения:
	// 3 - внутригородская территория (внутригородское муниципальное образование) города федерального значения;
	// 6 - муниципальный район;
	// 7 - городской округ;
	// 9 - внутригородская территория города федерального значения 
	// (данное значение выделено в связи с недостаточностью резервной емкости в рамках признака со значением "3").
	// Кодирование автономных округов, округов осуществляется в рамках соответствующих субъектов Российской Федерации, 
	// признак второй ступени классификации - Р1 (знак 3) для этих объектов имеет значение:
	// 8 - муниципальные образования автономного округа, округа.
	// Если в состав края или области входит два автономных округа, 
	// признак второй ступени классификации - Р1 (знак 3) для второго автономного округа имеет значение:
	// 9 - муниципальные образования автономного округа.
	// Фактически значения "8", "9" на второй ступени классификации идентифицируют автономные округа в составе края или областей.
	// ...
	// Для группировочных позиций коды дополняются справа нулями
	
	Р1 = Сред(Код, 3, 1);
	
	Если Р1 = "0" ИЛИ Р1 = "3" ИЛИ Р1 = "6" ИЛИ Р1 = "7" ИЛИ Р1 = "8" ИЛИ Р1 = "9" Тогда
		Возврат Истина;
	Иначе
		Комментарий = НСтр("ru = 'Разряд 3 кода ОКТМО может принимать значения 0, 3, 6, 7, 8 или 9.'");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ЗаголовокКодаТерритории(Период = Неопределено) Экспорт
	
	Если ПрименяетсяОКТМО(Период) Тогда
		Возврат НСтр("ru = 'ОКТМО'");
	Иначе
		Возврат НСтр("ru = 'ОКАТО'");
	КонецЕсли;
	
КонецФункции

// Проверка

Функция ПроверитьКодТерритории(КодТерритории, ВидПеречисления, НомерСчетаПолучателя, Период, СтандартнаяПроверкаЗаполнения = Истина)
	
	СтандартнаяПроверкаЗаполнения = Истина;
	
	Если НЕ РеквизитЗаполнен(КодТерритории) Тогда
		
		Если ДопускаетсяПустойКБК(ВидПеречисления, НомерСчетаПолучателя, Период) Тогда
			СтандартнаяПроверкаЗаполнения = Ложь;
			Возврат "";
		ИначеЕсли ПрименяетсяОКТМО(Период) Тогда
			Возврат НСтр("ru = 'Поле ""Код ОКТМО"" не заполнено'");
		Иначе
			Возврат НСтр("ru = 'Поле ""Код ОКАТО"" не заполнено'");
		КонецЕсли;
		
	КонецЕсли;
	
	Комментарий = "";
	Если ПрименяетсяОКТМО(Период) Тогда
		
		// Следует указывать ОКТМО, а не ОКАТО
		Если НЕ ЭтоКодОКТМО(КодТерритории, Комментарий, Период) Тогда
			Если ЭтоКодОКАТО(КодТерритории) Тогда
				ШаблонОшибки = НСтр("ru = 'С %2 следует указывать код ОКТМО, а не код ОКАТО. %1'");
			Иначе
				ШаблонОшибки = НСтр("ru = 'В поле ""Код ОКТМО"" указано значение, не соответствующее требованиям. %1'");
			КонецЕсли;
			ДатаНовогоКода = Формат(НачалоПримененияОКТМО(), "ДЛФ=DD");
			Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Комментарий, ДатаНовогоКода);
		КонецЕсли;
		
		// ОКТМО должен соответствовать требованиям ОК 033-2013
		// В частности, см. совместное письмо от 3 февраля 2014 г. Минфина Московской области № 22исх-693/22-07-02, УФК по Московской области № 48-12-13/02-728
		Если ЭтоКодОКТМО(КодТерритории) И НЕ ЭтоКодОКАТО(КодТерритории)
			И СтрДлина(КодТерритории) = 11 И Сред(КодТерритории, 9, 3) = "000" Тогда
			Если ПрименяетсяОКТМО8Символов(Период) Тогда
				Возврат НСтр("ru = 'С 25.04.2017 указание 11-значного кода ОКТМО населенного пункта недопустимо.
					|Введите 8-значный код муниципального образования, в который входит населенный пункт.'");
			Иначе
				Возврат НСтр("ru = 'При заполнении одиннадцатизначного кода ОКТМО, значение ""000"" в 9-11 знаках кода недопустимо.
					|Введите 8-значный код муниципального образования или укажите идентификатор населенного пункта в 9-11 знаках.'");
			КонецЕсли;
		КонецЕсли;
		
		Если ТолькоНулиВСтроке(КодТерритории) Тогда
			
			Возврат НСтр("ru = 'Все знаки кода ОКТМО не могут одновременно принимать значение ""0"".'");
			
		КонецЕсли;
		
	Иначе
		// Следует указывать ОКАТО, а не ОКТМО
		Если НЕ ЭтоКодОКАТО(КодТерритории, Комментарий) Тогда
			Если ЭтоКодОКТМО(КодТерритории,, Период) Тогда
				ШаблонОшибки = НСтр("ru = 'До %2 следует указывать код ОКАТО, а не код ОКТМО. %1'");
			Иначе
				ШаблонОшибки = НСтр("ru = 'В поле ""Код ОКАТО"" указано значение, не соответствующее требованиям. %1'");
			КонецЕсли;
			ДатаНовогоКода = Формат(НачалоПримененияОКТМО(), "ДЛФ=DD");
			Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Комментарий, ДатаНовогоКода);
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция ДопустимыйКодТерритории(КодТерритории, ВидПеречисления, НомерСчетаПолучателя, КодТерриторииПоУмолчанию, Период)
	
	Если ПустаяСтрока(ПроверитьКодТерритории(КодТерритории, ВидПеречисления, НомерСчетаПолучателя, Период)) Тогда
		Возврат КодТерритории;
	КонецЕсли;
	
	ДопустимыеЗначения = Новый Массив;
	ДопустимыеЗначения.Добавить(КодТерриторииПоУмолчанию);
	
	Если ДопускаетсяПустойКБК(ВидПеречисления, НомерСчетаПолучателя, Период) Тогда
		ДопустимыеЗначения.Добавить(НезаполненноеЗначение());
	КонецЕсли;
	
	Возврат ДопустимыеЗначения;
	
КонецФункции

// Приводит код территории для платежей в бюджет к длине, установленной приказом Минфина 58н.
Процедура ПривестиКодТерриторииКФорматуПриказа58н(КодТерритории, Период = Неопределено) Экспорт
	
	Если Период = Неопределено Тогда
		Период = ТекущаяДата();
	КонецЕсли;
	
	Если НЕ ПрименяетсяОКТМО8Символов(Период) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(КодТерритории)) > 8 Тогда
		КодТерритории = СокрП(Лев(КодТерритории, 8));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



Функция ДопускаетсяПустойКБК(ВидПеречисления, НомерСчетаПолучателя, Период)
	
	Возврат Строка(ВидПеречисления) = "ИнойПлатеж"
		И ЭтоСчетИсполнителяГосуслуг(НомерСчетаПолучателя, Период);
	
КонецФункции

// Незаполненное значение ("0")
//
Функция НезаполненноеЗначение() Экспорт
	
	// При невозможности указать конкретное значение, указывается ноль "0".
	// Наличие незаполненных реквизитов не допускается.
	
	Возврат "0";
	
КонецФункции

Функция РеквизитЗаполнен(Значение) Экспорт
	
	Возврат ЗначениеЗаполнено(Значение) И СокрП(Значение) <> НезаполненноеЗначение();
	
КонецФункции


// ПРАВИЛА ЗАПОЛНЕНИЯ ПЛАТЕЖНЫХ ПОРУЧЕНИЙ - В ЦЕЛОМ

Функция НачалоДействияУказания3844У() Экспорт
	
	// Указание ЦБ РФ от 6 ноября 2015 г. № 3844-У
	// "О внесении изменений в Положение Банка России от 19 июня 2012 года № 383-П".
	
	// Совпадает с датой вступления в силу Приказа Минфина России от 23 сентября 2015 г. № 148н
	// "О внесении изменений в приказ Министерства финансов Российской Федерации от 12 ноября 2013 г. № 107н".
	
	Возврат '2016-03-28'; // Дата вступления явно прописана в тексте Указания.
	
КонецФункции

Функция НачалоДействияПриказа126н() Экспорт
	
	// Приказ Минфина №126н от 30.10.2014.
	
	Возврат '2015-01-01';
	
КонецФункции

Функция ДействуетПриказ126н(Период) Экспорт
	
	Возврат Период = Неопределено
		ИЛИ Период >= НачалоДействияПриказа126н();
	
КонецФункции

Функция НачалоДействияПриказа107н() Экспорт
	
	// Приказ Минфина №107н от 12.11.2013.
	// Опубликован 24.01.2014 и вступает в силу по истечении 10 дней с даты публикации.
	
	Возврат '2014-02-04';
	
КонецФункции

Функция ДействуетПриказ107н(Период) Экспорт
	
	Возврат Период = Неопределено
		ИЛИ Период >= НачалоДействияПриказа107н();
	
КонецФункции

Функция НачалоДействияПриказа90н() Экспорт
	
	// Приказ Минфина №90н от 08.06.2015.
	
	Возврат '2016-01-01';
	
КонецФункции

Функция ДействуетПриказ90н(Период) Экспорт
	
	Возврат Период = Неопределено
		ИЛИ Период >= НачалоДействияПриказа90н();
	
КонецФункции

Функция НачалоДействияПриказа2017_90н() Экспорт
	
	// Приказ Минфина №90н от 08.06.2015.
	
	Возврат '2017-01-01';
	
КонецФункции

Функция НачалоДействияПриказа2017_58н() Экспорт
	
	// Приказ Минфина №58н от 05.04.2017.
	
	Возврат '2017-04-25';
	
КонецФункции

Функция НачалоОтложенногоДействияПриказа2017_58н() Экспорт
	
	// Приказ Минфина №58н от 05.04.2017.
	// Настоящий приказ вступает в силу в установленном порядке, за исключением
	//  абзаца одиннадцатого подпункта "г" пункта 3,
	//  абзаца пятого подпункта "а", подпункта "в",
	//  абзацев второго, четвертого - пятого, десятого подпункта "г",
	//  абзацев второго - пятого, девятого подпункта "д" пункта 4,
	//  абзацев третьего - шестого подпункта "е",
	//  абзацев третьего - четвертого подпункта "ж" пункта 5,
	//  подпунктов "б" - "в",
	//  абзацев второго - третьего подпункта "л" пункта 6
	// Изменений, вступающих в силу со 2 октября 2017 года.
	
	Возврат '2017-10-02';
	
КонецФункции

Функция ДействуетПриказ2017_90н(Период) Экспорт
	
	Возврат Период <> Неопределено
		И Период >= НачалоДействияПриказа2017_90н();
	
КонецФункции

Функция ДействуетПриказ2017_58н(Период) Экспорт
	
	Возврат Период <> Неопределено
		И Период >= НачалоДействияПриказа2017_58н();
	
КонецФункции

Функция ДействуетПриказ2017_58н_Отложенный(Период) Экспорт
	
	Возврат Период <> Неопределено
		И Период >= НачалоОтложенногоДействияПриказа2017_58н();
	
КонецФункции

Функция ТолькоНулиВСтроке(Строка) Экспорт
	
	ЗначащиеСимволы = СокрЛП(СтрЗаменить(Строка, "0", ""));
	Возврат ПустаяСтрока(ЗначащиеСимволы);
	
КонецФункции

Функция ЭтоСчетИсполнителяГосуслуг(Знач НомерСчета, Период)
	
	Если НЕ ДействуетПриказ107н(Период) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(СокрП(НомерСчета)) <> 20 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	БалансовыйСчет       = БалансовыйСчет(НомерСчета);
	ПризнакЛицевогоСчета = Сред(НомерСчета, 14, 1);
	
	// п.2 Приложения 4 к 107н,
	// Указание ЦБ РФ от 24 декабря 2010 г. N 2547-У
	Возврат (БалансовыйСчет = "40302")
		ИЛИ (БалансовыйСчет = "40501" И  ПризнакЛицевогоСчета = "2")
		ИЛИ (БалансовыйСчет = "40601" И (ПризнакЛицевогоСчета = "1" ИЛИ ПризнакЛицевогоСчета = "3"))
		ИЛИ (БалансовыйСчет = "40701" И (ПризнакЛицевогоСчета = "1" ИЛИ ПризнакЛицевогоСчета = "3"))
		ИЛИ (БалансовыйСчет = "40503" И  ПризнакЛицевогоСчета = "4")
		ИЛИ (БалансовыйСчет = "40603" И  ПризнакЛицевогоСчета = "4")
		ИЛИ (БалансовыйСчет = "40703" И  ПризнакЛицевогоСчета = "4");
	
КонецФункции

Функция БалансовыйСчет(НомерСчета) Экспорт
	
	Возврат Лев(НомерСчета, 5);
	
КонецФункции


