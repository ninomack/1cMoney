
#Область ПрограммныйИнтерфейс

// Возвращает построитель запроса, настроенный для изменения порядка финансовых целей
//	Используется в ОМ НастройкаПорядкаЭлементовСлужебный.СоседнийЭлемент() для 
// обхода ограничений БСП на использование произвольных запросов в динамических списках при изменении 
// порядка элементов
//Подробней о передаваемых параметрах см. в НастройкаПорядкаЭлементовСлужебный.СоседнийЭлемент()
Функция ПостроительЗапросаСпискаЦелей(ПеремещаемыйЭлемент, Список, Знач Направление) Экспорт

	Если Список.КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы.Найти(Новый ПолеКомпоновкиДанных("ПотраченоВПроцентах")) = Неопределено Тогда
		ТекстЗапроса = ТекстЗапросаСпискаСправочника();
	Иначе
		ТекстЗапроса = ТекстЗапросаСтраницыНакопления();
	КонецЕсли;
	
	Если Направление = "Вверх" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ФинансовыеЦели.РеквизитДопУпорядочивания > &РеквизитДопУпорядочивания", "ФинансовыеЦели.РеквизитДопУпорядочивания < &РеквизитДопУпорядочивания");
		ТекстЗапроса = ТекстЗапроса + " УБЫВ";
	КонецЕсли; 
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапроса);
	
	// переносим значения параметров данных из настроек списка
	Для Каждого ПараметрЭлемент Из Список.КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.Элементы Цикл
		ПостроительЗапроса.Параметры.Вставить(Строка(ПараметрЭлемент.Параметр), ПараметрЭлемент.Значение);
	КонецЦикла; 
	
	Возврат ПостроительЗапроса;

КонецФункции

// Возвращает результат запроса по накоплениям на финансовые цели
//
//Параметры:
//	НомерОтбораПоСостоянию - Число - 1=только актуальные, 2=только неактуальные, 3=помеченные на удаление, 4(или 0)=все цели
//	ПредельныйПриоритет - Число - до какого максимального приоритета включительно получать цели. Если не заполнено - все цели
//	ВалютаОтчета - Валюта, в которой нужно получить общие итоги
//	ВалютаЦели - Валюта, в которой нужно получить итоги накоплений без указания цели. Используется при ненулевом значении параметра ПредельныйПриоритет
//	ПериодСостояния - Дата - момент, на который нужнополучить состояние
//
//Возвращаемое значение:
//	РезультатЗапроса
//
Функция РезультатЗапросаИнформацииОНакопленииНаЦель(НомерОтбораПоСостоянию = 1, ПредельныйПриоритет = 0, 
				ВалютаОтчета = Неопределено, ВалютаЦели = Неопределено, ПериодСостояния = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Дата2",  КонецДня(?(ЗначениеЗаполнено(ПериодСостояния), ПериодСостояния, Запрос.Параметры.ТекущаяДата)));
	Запрос.УстановитьПараметр("ПредельныйПриоритет", ПредельныйПриоритет);
	Запрос.УстановитьПараметр("НомерОтбораПоСостоянию", ?(ЗначениеЗаполнено(НомерОтбораПоСостоянию), НомерОтбораПоСостоянию, 4));
	
	ВалютаОтчета = ?(ЗначениеЗаполнено(ВалютаОтчета), ВалютаОтчета, Запрос.Параметры.ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаОтчета", ВалютаОтчета);
	Запрос.УстановитьПараметр("ВалютаВыбраннойЦели", ?(ЗначениеЗаполнено(ВалютаЦели), ВалютаЦели, ВалютаОтчета));
	
	СтруктураЗапроса = Новый Структура;
	
	// Курсы валют на дату остатков
	ОтчетыСервер.ДополнитьЗапросКурсамиВалютНаКонец(Запрос, СтруктураЗапроса, Мин(ТекущаяДатаСеанса(), Запрос.Параметры.Дата2));
	
	// Список целей, все накл
	ДополнитьЗапросНакопленийВременнымиТаблицами(Запрос, СтруктураЗапроса);

	ИмяВремТаблицы = "Выборка_Накопления";
	#Область ТекстЗапроса
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписокЦелей.ФинансоваяЦель КАК ФинансоваяЦель,
	|	СписокЦелей.Наименование КАК Наименование,
	|	СписокЦелей.Активность КАК Активность,
	|	СписокЦелей.РеквизитДопУпорядочивания КАК Приоритет,
	|	СписокЦелей.СуммаЦели КАК СуммаЦели,
	|	СписокЦелей.ПометкаУдаления КАК ПометкаУдаления,
	|	СписокЦелей.ВалютаЦели КАК ВалютаЦели,
	|	СписокЦелей.Срок КАК Срок,
	|	СписокЦелей.СрочностьЦели КАК СрочностьЦели,
	|	СписокЦелей.Предопределенный КАК Предопределенный,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗарезервированоВВалютеВыбраннойЦели, 0) КАК ЗарезервированоВВалютеВыбраннойЦели,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗарезервированоВВалютеОтчета, 0) КАК ЗарезервированоВВалютеОтчета,
	|	ЕСТЬNULL(НакопленияИРасходы.ПотраченоНаЦельВВалютеОтчета, 0) КАК ПотраченоНаЦельВВалютеОтчета,
	|	ЕСТЬNULL(НакопленияИРасходы.ПотраченоСвободныхДенегВВалютеОтчета, 0) КАК ПотраченоСвободныхДенегВВалютеОтчета,
	|	ЕСТЬNULL(НакопленияИРасходы.Зарезервировано, 0) КАК Зарезервировано,
	|	ЕСТЬNULL(НакопленияИРасходы.ПотраченоНаЦель, 0) КАК ПотраченоНаЦель,
	|	ЕСТЬNULL(НакопленияИРасходы.ПотраченоСвободныхДенег, 0) КАК ПотраченоСвободныхДенег,
	|	СписокЦелей.СуммаЦелиВВалютеОтчета КАК СуммаЦелиВВалютеОтчета,
	|	СписокЦелей.СуммаЦелиВВалютеВыбраннойЦели КАК СуммаЦелиВВалютеВыбраннойЦели,
	|	РАЗНОСТЬДАТ(&ТекущаяДата, СписокЦелей.Срок, ГОД) КАК ОсталосьЛет,
	|	РАЗНОСТЬДАТ(&ТекущаяДата, СписокЦелей.Срок, МЕСЯЦ) КАК ОсталосьМесяцев,
	|	РАЗНОСТЬДАТ(&ТекущаяДата, СписокЦелей.Срок, ДЕНЬ) КАК ОсталосьДней,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗапланированоОткладыватьВВалютеОтчета, 0) КАК ЗапланированоОткладыватьВВалютеОтчета,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗапланированоОткладывать, 0) КАК ЗапланированоОткладывать,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗапланированоОткладыватьВВалютеВыбраннойЦели, 0) КАК ЗапланированоОткладыватьВВалютеВыбраннойЦели,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗапланированоВМесяцВВалютеОтчета, 0) КАК ЗапланированоВМесяцВВалютеОтчета,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗапланированоВМесяц, 0) КАК ЗапланированоВМесяц,
	|	ЕСТЬNULL(НакопленияИРасходы.ЗапланированоВМесяцВВалютеВыбраннойЦели, 0) КАК ЗапланированоВМесяцВВалютеВыбраннойЦели
	|ИЗ
	|	СписокЦелей КАК СписокЦелей
	|		ЛЕВОЕ СОЕДИНЕНИЕ НакопленияИРасходы КАК НакопленияИРасходы
	|		ПО (СписокЦелей.ФинансоваяЦель = НакопленияИРасходы.ФинансоваяЦель)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Предопределенный УБЫВ,
	|	Приоритет";
	
	ОтчетыСервер.ДобавитьРазделительВТекстЗапроса(Запрос.Текст, ИмяВремТаблицы, СтруктураЗапроса);
	Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	#КонецОбласти 
	
	Возврат ОтчетыСервер.ПолучитьВыборкиИзПакетногоЗапроса(Запрос, СтруктураЗапроса);
	
КонецФункции

// Дополняет текст указанного запроса запросами создания временных таблиц
//
//Параметры:
//	Запрос - Запрос, текст которого следует дополнять
//	СтруктураЗапроса - Структура, в которую добавляются имена создаваемых временных таблиц
//
Процедура ДополнитьЗапросНакопленийВременнымиТаблицами(Запрос, СтруктураЗапроса) Экспорт
	
	ИмяВремТаблицы = "СписокЦелей";
	#Область ТекстЗапроса
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ФинансовыеЦели.Ссылка КАК ФинансоваяЦель,
	|	ФинансовыеЦели.Предопределенный КАК Предопределенный,
	|	ФинансовыеЦели.Наименование КАК Наименование,
	|	ФинансовыеЦели.Активность КАК Активность,
	|	ФинансовыеЦели.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	|	ФинансовыеЦели.Сумма КАК СуммаЦели,
	|	ФинансовыеЦели.Валюта КАК ВалютаЦели,
	|	ФинансовыеЦели.Срок КАК Срок,
	|	ФинансовыеЦели.Срок <> ДАТАВРЕМЯ(1,1,1) КАК СрочностьЦели,
	|	ФинансовыеЦели.Сумма * ЕСТЬNULL(КурсыОтчета.КурсПересчета, 0) КАК СуммаЦелиВВалютеОтчета,
	|	ФинансовыеЦели.Сумма * ЕСТЬNULL(КурсыВыбраннойЦели.КурсПересчета, 0) КАК СуммаЦелиВВалютеВыбраннойЦели,
	|	ФинансовыеЦели.ПометкаУдаления
	|ПОМЕСТИТЬ СписокЦелей
	|ИЗ
	|	Справочник.ФинансовыеЦели КАК ФинансовыеЦели
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыНаКонец КАК КурсыОтчета
	|		ПО ФинансовыеЦели.Валюта = КурсыОтчета.Валюта
	|			И (КурсыОтчета.ВалютаПересчета = &ВалютаОтчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыНаКонец КАК КурсыВыбраннойЦели
	|		ПО ФинансовыеЦели.Валюта = КурсыВыбраннойЦели.Валюта
	|			И (КурсыВыбраннойЦели.ВалютаПересчета = &ВалютаВыбраннойЦели)
	|ГДЕ
	|	ФинансовыеЦели.Предопределенный ИЛИ (
	|	(&НомерОтбораПоСостоянию = 4
	|			ИЛИ &НомерОтбораПоСостоянию = 1
	|				И ФинансовыеЦели.Активность
	|			ИЛИ &НомерОтбораПоСостоянию = 2
	|				И НЕ ФинансовыеЦели.Активность
	|			ИЛИ &НомерОтбораПоСостоянию = 3
	|				И ФинансовыеЦели.ПометкаУдаления)
	|	И (&ПредельныйПриоритет = 0
	|			ИЛИ ФинансовыеЦели.РеквизитДопУпорядочивания <= &ПредельныйПриоритет))";
	
	ОтчетыСервер.ДобавитьРазделительВТекстЗапроса(Запрос.Текст, ИмяВремТаблицы, СтруктураЗапроса);
	Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	#КонецОбласти 
	
	ИмяВремТаблицы = "НакопленияИРасходы";
	#Область ТекстЗапроса
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Подзапрос.ФинансоваяЦель КАК ФинансоваяЦель,
	|	СУММА(Подзапрос.ОстатокВВалюте * ЕСТЬNULL(КурсыОтчета.КурсПересчета, 0)) КАК ЗарезервированоВВалютеОтчета,
	|	СУММА(Подзапрос.ПотраченоНаЦельВВалюте * ЕСТЬNULL(КурсыОтчета.КурсПересчета, 0)) КАК ПотраченоНаЦельВВалютеОтчета,
	|	СУММА(Подзапрос.ПотраченоСвободныхДенегВВалюте * ЕСТЬNULL(КурсыОтчета.КурсПересчета, 0)) КАК ПотраченоСвободныхДенегВВалютеОтчета,
	|	Подзапрос.ВалютаЦели КАК ВалютаЦели,
	|	СУММА(Подзапрос.ОстатокВВалюте * ЕСТЬNULL(КурсыЦелей.КурсПересчета, 0)) КАК Зарезервировано,
	|	СУММА(Подзапрос.ПотраченоНаЦельВВалюте * ЕСТЬNULL(КурсыЦелей.КурсПересчета, 0)) КАК ПотраченоНаЦель,
	|	СУММА(Подзапрос.ПотраченоСвободныхДенегВВалюте * ЕСТЬNULL(КурсыЦелей.КурсПересчета, 0)) КАК ПотраченоСвободныхДенег,
	|	СУММА(Подзапрос.ОстатокВВалюте * ЕСТЬNULL(КурсВыбраннойЦели.КурсПересчета, 0)) КАК ЗарезервированоВВалютеВыбраннойЦели,
	|	СУММА(Подзапрос.ПотраченоНаЦельВВалюте * ЕСТЬNULL(КурсВыбраннойЦели.КурсПересчета, 0)) КАК ПотраченоНаЦельВВалютеВыбраннойЦели,
	|	СУММА(Подзапрос.ПотраченоСвободныхДенегВВалюте * ЕСТЬNULL(КурсВыбраннойЦели.КурсПересчета, 0)) КАК ПотраченоСвободныхДенегВВалютеВыбраннойЦели,
	|	СУММА(ЕСТЬNULL(Подзапрос.ЗапланированоОткладыватьВВалюте, 0) * ЕСТЬNULL(КурсыОтчета.КурсПересчета, 0)) КАК ЗапланированоОткладыватьВВалютеОтчета,
	|	СУММА(ЕСТЬNULL(Подзапрос.ЗапланированоОткладыватьВВалюте, 0) * ЕСТЬNULL(КурсыЦелей.КурсПересчета, 0)) КАК ЗапланированоОткладывать,
	|	СУММА(ЕСТЬNULL(Подзапрос.ЗапланированоОткладыватьВВалюте, 0) * ЕСТЬNULL(КурсВыбраннойЦели.КурсПересчета, 0)) КАК ЗапланированоОткладыватьВВалютеВыбраннойЦели,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Подзапрос.МесяцевПлана, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(Подзапрос.ЗапланированоОткладыватьВВалюте, 0) * ЕСТЬNULL(КурсыОтчета.КурсПересчета, 0) / ЕСТЬNULL(Подзапрос.МесяцевПлана, 0)
	|		КОНЕЦ) КАК ЗапланированоВМесяцВВалютеОтчета,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Подзапрос.МесяцевПлана, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(Подзапрос.ЗапланированоОткладыватьВВалюте, 0) * ЕСТЬNULL(КурсыЦелей.КурсПересчета, 0) / ЕСТЬNULL(Подзапрос.МесяцевПлана, 0)
	|		КОНЕЦ) КАК ЗапланированоВМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Подзапрос.МесяцевПлана, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(Подзапрос.ЗапланированоОткладыватьВВалюте, 0) * ЕСТЬNULL(КурсВыбраннойЦели.КурсПересчета, 0) / ЕСТЬNULL(Подзапрос.МесяцевПлана, 0)
	|		КОНЕЦ) КАК ЗапланированоВМесяцВВалютеВыбраннойЦели,
	|	МАКСИМУМ(ЕСТЬNULL(Подзапрос.МесяцевПлана, 0)) КАК МесяцевПлана
	|ПОМЕСТИТЬ НакопленияИРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЖурналОперацийОстатки.Субконто1 КАК ФинансоваяЦель,
	|		ЖурналОперацийОстатки.Валюта КАК Валюта,
	|		ЖурналОперацийОстатки.ВалютнаяСуммаОстаток КАК ОстатокВВалюте,
	|		0 КАК ПотраченоНаЦельВВалюте,
	|		0 КАК ПотраченоСвободныхДенегВВалюте,
	|		ЖурналОперацийОстатки.Субконто1.Валюта КАК ВалютаЦели,
	|		0 КАК ЗапланированоОткладыватьВВалюте,
	|		0 КАК МесяцевПлана
	|	ИЗ
	|		РегистрБухгалтерии.ЖурналОпераций.Остатки(
	|				&Дата2,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.разделыУчета.Накопления),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.ФинансовыеЦели),
	|				ВЫРАЗИТЬ(Субконто1 КАК Справочник.ФинансовыеЦели).Предопределенный
	|					ИЛИ &ПредельныйПриоритет = 0
	|					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.ФинансовыеЦели).РеквизитДопУпорядочивания <= &ПредельныйПриоритет) КАК ЖурналОперацийОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИспользованиеСуммФинансовыхЦелейОбороты.ФинансоваяЦель,
	|		ИспользованиеСуммФинансовыхЦелейОбороты.Валюта,
	|		0,
	|		ИспользованиеСуммФинансовыхЦелейОбороты.ИспользованоНакопленийОборот,
	|		ИспользованиеСуммФинансовыхЦелейОбороты.ИспользованоСвободныхСредствОборот,
	|		ИспользованиеСуммФинансовыхЦелейОбороты.ФинансоваяЦель.Валюта,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ИспользованиеСуммФинансовыхЦелей.Обороты(
	|				,
	|				&Дата2,
	|				Период,
	|				ФинансоваяЦель.Предопределенный
	|					ИЛИ &ПредельныйПриоритет = 0
	|					ИЛИ ФинансоваяЦель.РеквизитДопУпорядочивания <= &ПредельныйПриоритет) КАК ИспользованиеСуммФинансовыхЦелейОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыПлановыхОперацийОбороты.РазделБюджета,
	|		ОборотыПлановыхОперацийОбороты.Валюта,
	|		0,
	|		0,
	|		0,
	|		ОборотыПлановыхОперацийОбороты.РазделБюджета.Валюта,
	|		СУММА(ВЫБОР
	|				КОГДА ОборотыПлановыхОперацийОбороты.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|					ТОГДА ОборотыПлановыхОперацийОбороты.СуммаОборот
	|				ИНАЧЕ -ОборотыПлановыхОперацийОбороты.СуммаОборот
	|			КОНЕЦ),
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОборотыПлановыхОперацийОбороты.Период)
	|	ИЗ
	|		РегистрНакопления.ОборотыПлановыхОпераций.Обороты(
	|				НАЧАЛОПЕРИОДА(&Дата2, МЕСЯЦ),
	|				,
	|				Месяц,
	|				РазделБюджета <> ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка)
	|						И &ПредельныйПриоритет = 0
	|					ИЛИ РазделБюджета.РеквизитДопУпорядочивания <= &ПредельныйПриоритет) КАК ОборотыПлановыхОперацийОбороты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОборотыПлановыхОперацийОбороты.РазделБюджета,
	|		ОборотыПлановыхОперацийОбороты.Валюта,
	|		ОборотыПлановыхОперацийОбороты.РазделБюджета.Валюта) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыНаКонец КАК КурсыОтчета
	|		ПО Подзапрос.Валюта = КурсыОтчета.Валюта
	|			И (КурсыОтчета.ВалютаПересчета = &ВалютаОтчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыНаКонец КАК КурсыЦелей
	|		ПО Подзапрос.Валюта = КурсыЦелей.Валюта
	|			И Подзапрос.ВалютаЦели = КурсыЦелей.ВалютаПересчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыНаКонец КАК КурсВыбраннойЦели
	|		ПО Подзапрос.Валюта = КурсВыбраннойЦели.Валюта
	|			И (КурсВыбраннойЦели.ВалютаПересчета = &ВалютаВыбраннойЦели)
	|
	|СГРУППИРОВАТЬ ПО
	|	Подзапрос.ФинансоваяЦель,
	|	Подзапрос.ВалютаЦели";
	
	ОтчетыСервер.ДобавитьРазделительВТекстЗапроса(Запрос.Текст, ИмяВремТаблицы, СтруктураЗапроса);
	Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	#КонецОбласти 
	
	
КонецПроцедуры

// Возвращает структуру, заполненную данными о накоплении на финансовую цель
//
//Параметры:
//	ФинансоваяЦель- СправочникСсылка.ФинансовыеЦели - цель, по которой нужно получить информацию
//
//Возвращаемое значение:
//	Структура. Подробней см. код функции НоваяСтруктураНакопленийНаЦель()
//
Функция ИнформацияОНакопленииНаЦель(ФинансоваяЦель, Знач ВалютаОтчета = Неопределено) Экспорт

	Результат = НоваяСтруктураНакопленийНаЦель();
	
	Если Не ЗначениеЗаполнено(ФинансоваяЦель) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ВалютаОтчета = ?(ЗначениеЗаполнено(ВалютаОтчета), ВалютаОтчета, Константы.ВалютаУчета.Получить());
	ОстатокНакопленийВВалютеОтчета = 0;
	ОстатокНакопленийВВалютеЦели   = 0;
	
	РезультатыЗапроса = РезультатЗапросаИнформацииОНакопленииНаЦель(1, ФинансоваяЦель.РеквизитДопУпорядочивания, ВалютаОтчета, ФинансоваяЦель.Валюта);
	Выборка = РезультатыЗапроса.Выборка_Накопления.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Предопределенный Тогда
			// Определяем сумму общих накоплений (без указания конкретной цели)
			ОстатокНакопленийВВалютеЦели   = Выборка.ЗарезервированоВВалютеВыбраннойЦели;
			ОстатокНакопленийВВалютеОтчета = Выборка.ЗарезервированоВВалютеОтчета;
			Продолжить;
		КонецЕсли;
		
		Если Не Выборка.Активность И Не Выборка.Ссылка = ФинансоваяЦель Тогда
			// Неактивные цели в расчетах не участвуют
			Продолжить;
		КонецЕсли;
		
		// Вычисляем, сколько общих накоплений потрачено на цели, предшествующие заданной 
		Если ЗначениеЗаполнено(Выборка.СуммаЦели) Тогда
			ИзОбщихНакопленийВВалютеОтчета  = Макс(0, Выборка.СуммаЦелиВВалютеОтчета - Выборка.ЗарезервированоВВалютеОтчета - Выборка.ПотраченоНаЦельВВалютеОтчета - Выборка.ПотраченоСвободныхДенегВВалютеОтчета);
			ИзОбщихНакопленийВВалютеОтчета  = Мин(ИзОбщихНакопленийВВалютеОтчета, ОстатокНакопленийВВалютеОтчета);
			
			ИзОбщихНакопленийВВалютеЦели  = Макс(0, Выборка.СуммаЦели - Выборка.Зарезервировано - Выборка.ПотраченоНаЦель- Выборка.ПотраченоСвободныхДенег);
			ИзОбщихНакопленийВВалютеЦели  = Мин(ИзОбщихНакопленийВВалютеЦели, ОстатокНакопленийВВалютеЦели);
		Иначе
			ИзОбщихНакопленийВВалютеОтчета = Макс(0, ОстатокНакопленийВВалютеОтчета);
			ИзОбщихНакопленийВВалютеЦели   = Макс(0, ОстатокНакопленийВВалютеЦели);
		КонецЕсли;
		
		// Остаток накоплений без указания цели
		ОстатокНакопленийВВалютеОтчета = ОстатокНакопленийВВалютеОтчета - ИзОбщихНакопленийВВалютеОтчета;
		ОстатокНакопленийВВалютеЦели   = ОстатокНакопленийВВалютеЦели - ИзОбщихНакопленийВВалютеЦели;
		
		Если Выборка.ФинансоваяЦель <> ФинансоваяЦель Тогда
			Продолжить;
		КонецЕсли;
		
		// Добрались до указанной цели
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
		Результат.ПотраченоНаЦель              = Выборка.ПотраченоНаЦель + Выборка.ПотраченоСвободныхДенег;
		Результат.ПотраченоНаЦельВВалютеОтчета = Выборка.ПотраченоНаЦельВВалютеОтчета + Выборка.ПотраченоСвободныхДенегВВалютеОтчета;
		
		// Общие накопления распределяются только для актуальных целей
		Если Результат.Активность Тогда
			
			Результат.РаспределеноОбщихНакопленийВВалютеОтчета = ИзОбщихНакопленийВВалютеОтчета;
			Результат.РаспределеноОбщихНакоплений              = ИзОбщихНакопленийВВалютеЦели;
			
		КонецЕсли;
		
		Результат.НакопленоВсего = Результат.Зарезервировано 
						+ Результат.РаспределеноОбщихНакоплений
						+ Результат.ПотраченоНаЦель;
		Результат.НакопленоВсегоВВалютеОтчета = Результат.ЗарезервированоВВалютеОтчета 
						+ Результат.РаспределеноОбщихНакопленийВВалютеОтчета
						+ Результат.ПотраченоНаЦельВВалютеОтчета;
		
		Если Результат.ОсталосьМесяцев > 0 И ЗначениеЗаполнено(Результат.СуммаЦели)
			И Результат.СуммаЦели > Результат.НакопленоВсего
			Тогда
			
			ОсталосьНакопить = Результат.СуммаЦели - Результат.НакопленоВсего;
			Результат.ОткладыватьВМесяц = ОсталосьНакопить / Результат.ОсталосьМесяцев;
			ОсталосьНакопитьВВалютеОтчета = Результат.СуммаЦелиВВалютеОтчета - Результат.НакопленоВсегоВВалютеОтчета;
			Результат.ОткладыватьВМесяцВВалютеОтчета = ОсталосьНакопитьВВалютеОтчета / Результат.ОсталосьМесяцев;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции



#КонецОбласти


#Область СлужебныеПроцедурыИФункции


Функция ТекстЗапросаСтраницыНакопления() 

	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СправочникФинансовыеЦели.Ссылка,
	|	СправочникФинансовыеЦели.ВерсияДанных,
	|	СправочникФинансовыеЦели.ПометкаУдаления,
	|	СправочникФинансовыеЦели.Предопределенный,
	|	СправочникФинансовыеЦели.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	|	СправочникФинансовыеЦели.Наименование,
	|	СправочникФинансовыеЦели.Представление,
	|	СправочникФинансовыеЦели.Активность,
	|	СправочникФинансовыеЦели.Комментарий,
	|	СправочникФинансовыеЦели.Сумма,
	|	СправочникФинансовыеЦели.Валюта,
	|	СправочникФинансовыеЦели.Срок,
	|	ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) + ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0) КАК Накоплено,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Сумма <> 0
	|			ТОГДА (ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) + ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0)) / СправочникФинансовыеЦели.Сумма * 100
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК НакопленоВПроцентах,
	|	ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) КАК НакопленияВКошельках,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Сумма <> 0
	|			ТОГДА ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) / СправочникФинансовыеЦели.Сумма * 100
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК НакопленияВКошелькахВПроцентах,
	|	ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0) КАК Потрачено,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Сумма <> 0
	|			ТОГДА ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0) / СправочникФинансовыеЦели.Сумма * 100
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПотраченоВПроцентах,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Сумма <> 0
	|			ТОГДА СправочникФинансовыеЦели.Сумма - (ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) + ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0))
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ОсталосьНакопить,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Сумма <> 0
	|			ТОГДА (СправочникФинансовыеЦели.Сумма - (ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) + ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0))) / СправочникФинансовыеЦели.Сумма * 100
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ОсталосьНакопитьВПроцентах,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Срок <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РАЗНОСТЬДАТ(&ТекущаяДата, СправочникФинансовыеЦели.Срок, МЕСЯЦ)
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ОставшеесяВремя,
	|	ВЫБОР
	|		КОГДА СправочникФинансовыеЦели.Сумма <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА СправочникФинансовыеЦели.Активность
	|							И НЕ СправочникФинансовыеЦели.ПометкаУдаления
	|							И СправочникФинансовыеЦели.Сумма - (ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) + ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0)) > 0
	|						ТОГДА (СправочникФинансовыеЦели.Сумма - (ЕСТЬNULL(ИтогиПоНакоплениям.ОстатокНакоплений, 0) + ЕСТЬNULL(ИтогиПоНакоплениям.Потрачено, 0))) / ВЫБОР
	|								КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, СправочникФинансовыеЦели.Срок, МЕСЯЦ) > 0
	|									ТОГДА РАЗНОСТЬДАТ(&ТекущаяДата, СправочникФинансовыеЦели.Срок, МЕСЯЦ)
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК НадоОткладыватьВМесяц,
	|	ЕСТЬNULL(ИтогиПлановыхОпераций.ЗапланированоОткладыватьВМесяц, 0) КАК ЗапланированоОткладыватьВМесяц,
	|	&ЕдиницаИзмеренияМесяц КАК ЕдиницаИзмеренияМесяц,
	|	СправочникФинансовыеЦели.Валюта.Наименование + ""/"" + &ЕдиницаИзмеренияМесяц КАК ЕдиницаИзмеренияВалютаЦелиВМесяц
	|ИЗ
	|	Справочник.ФинансовыеЦели КАК СправочникФинансовыеЦели
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Обороты.Ссылка КАК Ссылка,
	|			СУММА(Обороты.ОстатокНакопленийВВалютеЦели) КАК ОстатокНакоплений,
	|			СУММА(Обороты.ПотраченоВВалютеЦели) КАК Потрачено
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто2 КАК Справочник.ФинансовыеЦели) КАК Ссылка,
	|				ЖурналОперацийОстатки.ВалютнаяСуммаОстаток КАК ОстатокНакопленийВВалютеОстатка,
	|				ЖурналОперацийОстатки.ВалютнаяСуммаОстаток * (ЕСТЬNULL(КурсыОстатков.Курс, 0) * ЕСТЬNULL(КурсЦели.Кратность, 0)) / (ЕСТЬNULL(КурсЦели.Курс, 1) * ЕСТЬNULL(КурсыОстатков.Кратность, 1)) КАК ОстатокНакопленийВВалютеЦели,
	|				0 КАК ПотраченоВВалютеОстатка,
	|				0 КАК ПотраченоВВалютеЦели
	|			ИЗ
	|				РегистрБухгалтерии.ЖурналОпераций.Остатки(, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления)), &ВидыСубконто, {(ВЫРАЗИТЬ(Субконто2 КАК Справочник.ФинансовыеЦели)).* КАК Ссылка}) КАК ЖурналОперацийОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыОстатков
	|					ПО ЖурналОперацийОстатки.Валюта = КурсыОстатков.Валюта
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсЦели
	|					ПО (ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто2 КАК Справочник.ФинансовыеЦели).Валюта = КурсЦели.Валюта)
	|			{ГДЕ
	|				(ВЫРАЗИТЬ(ЖурналОперацийОстатки.Субконто2 КАК Справочник.ФинансовыеЦели)).* КАК Ссылка}
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ИспользованиеОбороты.ФинансоваяЦель,
	|				0,
	|				0,
	|				ИспользованиеОбороты.ИспользованоНакопленийОборот + ИспользованиеОбороты.ИспользованоСвободныхСредствОборот,
	|				(ИспользованиеОбороты.ИспользованоНакопленийОборот + ИспользованиеОбороты.ИспользованоСвободныхСредствОборот) * (ЕСТЬNULL(КурсыОстатков.Курс, 0) * ЕСТЬNULL(КурсЦели.Кратность, 0)) / (ЕСТЬNULL(КурсЦели.Курс, 1) * ЕСТЬNULL(КурсыОстатков.Кратность, 1))
	|			ИЗ
	|				РегистрНакопления.ИспользованиеСуммФинансовыхЦелей.Обороты(, , , {(ФинансоваяЦель).* КАК Ссылка}) КАК ИспользованиеОбороты
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыОстатков
	|					ПО ИспользованиеОбороты.Валюта = КурсыОстатков.Валюта
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсЦели
	|					ПО ИспользованиеОбороты.ФинансоваяЦель.Валюта = КурсЦели.Валюта
	|			{ГДЕ
	|				ИспользованиеОбороты.ФинансоваяЦель.* КАК Ссылка}) КАК Обороты
	|		{ГДЕ
	|			Обороты.Ссылка.*,
	|			Обороты.ОстатокНакопленийВВалютеЦели КАК НакопленияВКошельках,
	|			Обороты.ПотраченоВВалютеЦели КАК Потрачено}
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Обороты.Ссылка) КАК ИтогиПоНакоплениям
	|		ПО СправочникФинансовыеЦели.Ссылка = ИтогиПоНакоплениям.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОборотыПлановыхОпераций.Ссылка КАК Ссылка,
	|			СУММА(ОборотыПлановыхОпераций.ЗапланированоНакопитьВВалютеЦели) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОборотыПлановыхОпераций.ПериодМесяц) КАК ЗапланированоОткладыватьВМесяц
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ОборотыПлановыхОперацийОбороты.РазделБюджета КАК Ссылка,
	|				ВЫБОР
	|					КОГДА ОборотыПлановыхОперацийОбороты.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|						ТОГДА ОборотыПлановыхОперацийОбороты.СуммаОборот
	|					ИНАЧЕ -ОборотыПлановыхОперацийОбороты.СуммаОборот
	|				КОНЕЦ КАК ЗапланированоНакопитьВВалютеШаблона,
	|				ВЫБОР
	|					КОГДА ОборотыПлановыхОперацийОбороты.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыБюджетныхПоказателей.Поступление)
	|						ТОГДА ОборотыПлановыхОперацийОбороты.СуммаОборот
	|					ИНАЧЕ -ОборотыПлановыхОперацийОбороты.СуммаОборот
	|				КОНЕЦ * (ЕСТЬNULL(КурсыШаблонов.Курс, 0) * ЕСТЬNULL(КурсЦели.Кратность, 0)) / (ЕСТЬNULL(КурсЦели.Курс, 1) * ЕСТЬNULL(КурсыШаблонов.Кратность, 1)) КАК ЗапланированоНакопитьВВалютеЦели,
	|				ОборотыПлановыхОперацийОбороты.ПериодМесяц КАК ПериодМесяц
	|			ИЗ
	|				РегистрНакопления.ОборотыПлановыхОпераций.Обороты(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 1), МЕСЯЦ), , Авто, РазделБюджета <> ЗНАЧЕНИЕ(Справочник.ФинансовыеЦели.ПустаяСсылка) {(РазделБюджета).* КАК Ссылка}) КАК ОборотыПлановыхОперацийОбороты
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыШаблонов
	|					ПО ОборотыПлановыхОперацийОбороты.Валюта = КурсыШаблонов.Валюта
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсЦели
	|					ПО ОборотыПлановыхОперацийОбороты.РазделБюджета.Валюта = КурсЦели.Валюта
	|			ГДЕ
	|				(ОборотыПлановыхОперацийОбороты.ПериодМесяц <= ОборотыПлановыхОперацийОбороты.РазделБюджета.Срок
	|						ИЛИ ОборотыПлановыхОперацийОбороты.РазделБюджета.Срок = ДАТАВРЕМЯ(1, 1, 1))
	|			{ГДЕ
	|				ОборотыПлановыхОперацийОбороты.РазделБюджета.* КАК Ссылка}) КАК ОборотыПлановыхОпераций
	|		{ГДЕ
	|			ОборотыПлановыхОпераций.Ссылка.*,
	|			(СУММА(ОборотыПлановыхОпераций.ЗапланированоНакопитьВВалютеЦели) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОборотыПлановыхОпераций.ПериодМесяц)) КАК ЗапланированоОткладыватьВМесяц}
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОборотыПлановыхОпераций.Ссылка) КАК ИтогиПлановыхОпераций
	|		ПО СправочникФинансовыеЦели.Ссылка = ИтогиПлановыхОпераций.Ссылка
	|ГДЕ
	|	НЕ СправочникФинансовыеЦели.Предопределенный
	|	И СправочникФинансовыеЦели.РеквизитДопУпорядочивания > &РеквизитДопУпорядочивания
	|
	|УПОРЯДОЧИТЬ ПО
	|	СправочникФинансовыеЦели.РеквизитДопУпорядочивания";

КонецФункции
 
Функция ТекстЗапросаСпискаСправочника() 

	Возврат
	"ВЫБРАТЬ
	|	ФинансовыеЦели.Ссылка КАК Ссылка,
	|	ФинансовыеЦели.ВерсияДанных КАК ВерсияДанных,
	|	ФинансовыеЦели.ПометкаУдаления КАК ПометкаУдаления,
	|	ФинансовыеЦели.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА ФинансовыеЦели.Предопределенный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ФинансовыеЦели.Активность
	|	КОНЕЦ КАК Активность,
	|	ФинансовыеЦели.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	|	ФинансовыеЦели.Комментарий КАК Комментарий,
	|	ФинансовыеЦели.Сумма КАК Сумма,
	|	ФинансовыеЦели.Валюта КАК Валюта,
	|	ФинансовыеЦели.Срок КАК Срок,
	|	ФинансовыеЦели.ШаблонНакопления КАК ШаблонНакопления,
	|	ФинансовыеЦели.Предопределенный КАК Предопределенный,
	|	ВЫРАЗИТЬ(ПодЗапрос.ОстатокНакоплений КАК ЧИСЛО(14, 2)) КАК ТекущиеНакопления,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПодЗапрос.ИспользованоНакоплений, 0) КАК ЧИСЛО(14, 2)) КАК ИспользованоНакоплений,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ПодЗапрос.ИспользованоСвободныхСредств, 0) КАК ЧИСЛО(14, 2)) КАК ИспользованоСвободныхСредств,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ПодЗапрос.ИспользованоНакоплений, 0) КАК ЧИСЛО(14, 2))) + ЕСТЬNULL(ПодЗапрос.ИспользованоСвободныхСредств, 0) КАК ВсегоИспользовано,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ФинансовыеЦели.Сумма <> 0
	|				ТОГДА ФинансовыеЦели.Сумма - ЕСТЬNULL(ПодЗапрос.ИспользованоСвободныхСредств, 0) - ЕСТЬNULL(ПодЗапрос.ИспользованоНакоплений, 0) - ЕСТЬNULL(ПодЗапрос.ОстатокНакоплений, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(14, 2)) КАК ОсталосьНакопить
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	ВерсияДанных,
	|	ПометкаУдаления,
	|	Наименование,
	|	Активность,
	|	РеквизитДопУпорядочивания,
	|	Комментарий,
	|	Сумма,
	|	Валюта.*,
	|	Срок,
	|	ШаблонНакопления.*,
	|	Предопределенный,
	|	ТекущиеНакопления,
	|	ИспользованоНакоплений,
	|	ИспользованоСвободныхСредств,
	|	ВсегоИспользовано,
	|	ОсталосьНакопить}
	|ИЗ
	|	Справочник.ФинансовыеЦели КАК ФинансовыеЦели
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОстаткиНакоплений.Ссылка КАК Ссылка,
	|			ОстаткиНакоплений.ОстатокНакоплений КАК ОстатокНакоплений,
	|			СУММА(ЕСТЬNULL(РасходыНаЦели.ИспользованоНакопленийОборот, 0) * ЕСТЬNULL(КурсыРасходов.Курс, 0) * ЕСТЬNULL(ОстаткиНакоплений.КратностьЦели, 0) / (ЕСТЬNULL(ОстаткиНакоплений.КурсЦели, 1) * ЕСТЬNULL(КурсыРасходов.Кратность, 1))) КАК ИспользованоНакоплений,
	|			СУММА(ЕСТЬNULL(РасходыНаЦели.ИспользованоСвободныхСредствОборот, 0) * ЕСТЬNULL(КурсыРасходов.Курс, 0) * ЕСТЬNULL(ОстаткиНакоплений.КратностьЦели, 0) / (ЕСТЬNULL(ОстаткиНакоплений.КурсЦели, 1) * ЕСТЬNULL(КурсыРасходов.Кратность, 1))) КАК ИспользованоСвободныхСредств
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ФинансовыеЦели.Ссылка КАК Ссылка,
	|				СУММА(ЕСТЬNULL(жОстатки.ВалютнаяСуммаОстаток, 0) * ЕСТЬNULL(КурсыКошельков.Курс, 0) * ЕСТЬNULL(КурсыЦелей.Кратность, 0) / (ЕСТЬNULL(КурсыЦелей.Курс, 1) * ЕСТЬNULL(КурсыКошельков.Кратность, 1))) КАК ОстатокНакоплений,
	|				КурсыЦелей.Курс КАК КурсЦели,
	|				КурсыЦелей.Кратность КАК КратностьЦели
	|			ИЗ
	|				Справочник.ФинансовыеЦели КАК ФинансовыеЦели
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЖурналОпераций.Остатки(
	|							,
	|							Счет = ЗНАЧЕНИЕ(ПланСчетов.РазделыУчета.Накопления),
	|							,
	|							&Кошелек = """"
	|								ИЛИ Субконто1 В ИЕРАРХИИ (&Кошелек)) КАК жОстатки
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыКошельков
	|						ПО жОстатки.Валюта = КурсыКошельков.Валюта
	|					ПО ФинансовыеЦели.Ссылка = жОстатки.Субконто2
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыЦелей
	|					ПО ФинансовыеЦели.Валюта = КурсыЦелей.Валюта
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ФинансовыеЦели.Ссылка,
	|				КурсыЦелей.Курс,
	|				КурсыЦелей.Кратность) КАК ОстаткиНакоплений
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИспользованиеСуммФинансовыхЦелей.Обороты(, , Период, ) КАК РасходыНаЦели
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, БазоваяВалюта = &ВалютаУчета) КАК КурсыРасходов
	|					ПО РасходыНаЦели.Валюта = КурсыРасходов.Валюта
	|				ПО ОстаткиНакоплений.Ссылка = РасходыНаЦели.ФинансоваяЦель
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОстаткиНакоплений.ОстатокНакоплений,
	|			ОстаткиНакоплений.Ссылка) КАК ПодЗапрос
	|		ПО ФинансовыеЦели.Ссылка = ПодЗапрос.Ссылка
	|ГДЕ
	|	НЕ ФинансовыеЦели.Предопределенный
	|	И ФинансовыеЦели.РеквизитДопУпорядочивания > &РеквизитДопУпорядочивания
	|{ГДЕ
	|	ФинансовыеЦели.Ссылка.*,
	|	ФинансовыеЦели.ПометкаУдаления,
	|	ФинансовыеЦели.Наименование,
	|	ФинансовыеЦели.Активность,
	|	ФинансовыеЦели.РеквизитДопУпорядочивания,
	|	ФинансовыеЦели.Комментарий,
	|	ФинансовыеЦели.Валюта.*,
	|	ФинансовыеЦели.Срок}
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФинансовыеЦели.РеквизитДопУпорядочивания"	;

КонецФункции

Функция НоваяСтруктураНакопленийНаЦель() 

	Результат = Новый Структура;
	Результат.Вставить("ФинансоваяЦель",    Неопределено);
	Результат.Вставить("Срок",              Дата(1,1,1));
	Результат.Вставить("ВалютаЦели",        ПараметрыСеанса.ВалютаУчета);
	Результат.Вставить("Активность",        Ложь);
	Результат.Вставить("Приоритет",         0);
	Результат.Вставить("Предопределенный",  Ложь);
	Результат.Вставить("ПометкаУдаления",   Ложь);
	
	Результат.Вставить("СуммаЦели", 0); //Сумма финансовой цели
	Результат.Вставить("Зарезервировано", 0); //сумма накопений, зарезервированных за фин. целью
	Результат.Вставить("ПотраченоНаЦель", 0); //сумма уже потраченная на достижение цели
	Результат.Вставить("РаспределеноОбщихНакоплений", 0); //сумма накоплений без указания цели, распределенных на данную цель в соответствии с ее приоритетом
	Результат.Вставить("НакопленоВсего", 0); //сумма зарезервированных, распределенных и потраченных накоплений
	Результат.Вставить("ОткладыватьВМесяц", 0); //сколько рекомендуется откладывать ежемесячно для достижения цели
	
	Результат.Вставить("СуммаЦелиВВалютеОтчета", 0); //Сумма финансовой цели в валюте отчета
	Результат.Вставить("ЗарезервированоВВалютеОтчета", 0); //сумма накопений, зарезервированных за фин. целью в валюте отчета
	Результат.Вставить("РаспределеноОбщихНакопленийВВалютеОтчета", 0); //сумма накоплений без указания цели, распределенных на данную цель в соответствии с ее приоритетом в валюте отчета
	Результат.Вставить("ПотраченоНаЦельВВалютеОтчета", 0); //сумма уже потраченная на достижение цели в валюте отчета
	Результат.Вставить("НакопленоВсегоВВалютеОтчета", 0); //сумма зарезервированных, распределенных и потраченных в валюте отчета
	Результат.Вставить("ОткладыватьВМесяцВВалютеОтчета", 0); //сколько рекомендуется откладывать ежемесячно для достижения цели в валюте отчета

	Результат.Вставить("ЗапланированоОткладывать", 0); 
	Результат.Вставить("ЗапланированоОткладыватьВВалютеОтчета", 0); 
	
	Результат.Вставить("ЗапланированоВМесяц",  0); 
	Результат.Вставить("ЗапланированоВМесяцВВалютеОтчета",  0); 
	
	Результат.Вставить("ОсталосьЛет", 0); 
	Результат.Вставить("ОсталосьМесяцев", 0); 
	Результат.Вставить("ОсталосьДней", 0); 
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти

