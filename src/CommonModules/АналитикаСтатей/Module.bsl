////////////////////////////////////////////////////////////////////////////////
//ОбщийМодуль.АналитикаСтатей: обеспечивает упралвение аналитикой и использование аналитики 
//		в формах операций
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Если Не ВнешнееСоединение Тогда
	
// Обслуживание форм документов

// Создает реквизиты формы и элементы формы для вывода аналитики.
//
// Создаются реквизиты формы:
//		ИспользуетсяАналитикаСтатей             - Флаг, сигнализирующий о наличии в документе аналитики статей
//		РазрешитьРедактированиеАналитикиВШапке
//		ЕстьАналитикаДохода						- Показывающие наличие в документе статей доходов
//		ЕстьАналитикаРасхода					- Показывающие наличие в документе статей расходов
//		РеквизитыДокумента				        - Таблица  реквизитов документа, содержащих ссылку на справочник ЗначенияСубконтоАналитика (т.е. упакованные наборы аналитики)
//												  Колонки: ИмяТабличнойЧасти, ИмяРеквизитаСтатьи, ИмяРеквизитаПакетаАналитики, ЭтоДоход, ЭтоРасход.
//		НаборАналитики				            - Таблица. Аналитики, сохраненные в документе, плюс аналитика, включенная для всей базы в ПВХ виды аналитики
//												  Колонки: ВидАналитики, ТипЗначенияАналитики, НаименованиеАналитики, РедактироватьВШапке, 
//														   ИспользоватьДляДохода, ИспользоватьДляРасхода, 
//														   ЗначениеАналитикиДоходаПоУмолчанию, ЗначениеАналитикиРасходаПоУмолчанию, 
//														   РасширенныеНастройкиДляДохода, РасширенныеНастройкиДляРасхода,
//														   ИДАналитики.
//
//		РеквизитАналитики_N	                         - Хранит значение конкретной аналитики в шапке.
//		РеквизитАналитики_N_ВидимостьКолонкиВДоходах   - Для условного оформления
//		РеквизитАналитики_N_ВидимостьКолонкиВРасходах  - Для условного оформления
//		Объект.<ИмяТабличнойЧасти.ИмяТабличнойЧасти>РеквизитАналитики_N	 - Хранит значение конкретной аналитики в таблице.
//		Объект.<ИмяТабличнойЧасти.ИмяТабличнойЧасти>РеквизитАналитики_N_Использовать - Для условного оформления
//		Объект.<ИмяТабличнойЧасти.ИмяТабличнойЧасти>РеквизитАналитики_N_Заполнено    - Для условного оформления
//
// Создаются элементы формы:
//		<ИмяТабличнойЧасти>РеквизитАналитики_N  - Поле ввода
//		НастройкаКолонокАналитики				- Команда
//
//
// Параметры:
//	Форма                              - УправляемаяФорма
//	ИмяРеквизитаСтатьиДоходов          - Строка - имя реквизита таб. части документа типа СправочникСсылка.СтатьиДоходов
//	ИменаСубконтоДоходов               - Строка - имя реквизита таб. части документа типа СправочникСсылка.ЗначенияСубконтоАналитика, 
//										 содержащего пакет аналитики для статьи дохода
//	ИмяРеквизитаСтатьиРасходов         - Строка - имя реквизита таб. части документа типа СправочникСсылка.СтатьиРасходов
//	ИменаСубконтоРасходов              - Строка - имя реквизита таб. части документа типа СправочникСсылка.ЗначенияСубконтоАналитика, 
//										 содержащего пакет аналитики для статьи расхода
//	ИмяКоманднойПанелиДляКнопкиАналитика - Строка, Неопределено - в эту командную панель будет вставлена кнопка Аналитика.
//										 Если Неопределено, кнопка не добавляется.
//	РазрешитьРедактированиеАналитикиВШапке - Булево
//
Процедура ПриСозданииНаСервере(Форма, ИмяРеквизитаСтатьиДоходов, ИменаСубконтоДоходов, ИмяРеквизитаСтатьиРасходов, ИменаСубконтоРасходов, ИмяКоманднойПанелиДляКнопкиАналитика = Неопределено, РазрешитьРедактированиеАналитикиВШапке = Ложь) Экспорт
	
	// Создаем реквизиты формы, которые потребуются для работы с аналитикой статей
	ДобавляемыеРеквизиты = Новый Массив;
	
	ИспользоватьАналитикуВНовыхОперациях = ПолучитьФункциональнуюОпцию("ИспользоватьАналитикуСтатей");
	Если НЕ ИспользоватьАналитикуВНовыхОперациях И Форма.Объект.Ссылка.Пустая() Тогда
		Реквизит = Новый РеквизитФормы("ИспользуетсяАналитикаСтатей", Новый ОписаниеТипов("Булево"), , , Ложь);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		Форма.ИспользуетсяАналитикаСтатей = Ложь;
		Возврат;
	КонецЕсли; 
	
	// Очистим добавленные реквизиты во избежание их дублирования
	УдаляемыеРеквизиты = Новый Массив;
	МассивРеквизитов = Форма.ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из МассивРеквизитов Цикл
		
		Если РеквизитФормы.Имя = "ИспользуетсяАналитикаСтатей" Тогда
			
			// Удалим условное оформление
			ПредставлениеПрефикс = "ОформлениеАналитики_";
			ПредставлениеДлинаПрефикса = СтрДлина(ПредставлениеПрефикс);
			ЭлементыОформления = Новый Массив;
			Для каждого Элемент Из Форма.УсловноеОформление.Элементы Цикл
				Если Элемент.Представление <> "ОформлениеАналитики_ИДАналитики_Видимость"
					И Элемент.Представление <> "ОформлениеАналитики_ИДАналитики_НедоступнаяЯчейка"
					И Лев(Элемент.Представление, ПредставлениеДлинаПрефикса) = ПредставлениеПрефикс Тогда
					ЭлементыОформления.Добавить(Элемент);
				КонецЕсли;
			КонецЦикла;
			Для каждого Элемент Из ЭлементыОформления Цикл
				Форма.УсловноеОформление.Элементы.Удалить(Элемент);
			КонецЦикла;
			
			// Удалим реквизиты формы для аналитик
			УдаляемыеРеквизиты.Добавить("ИспользуетсяАналитикаСтатей");
			УдаляемыеРеквизиты.Добавить("РазрешитьРедактированиеАналитикиВШапке");
			УдаляемыеРеквизиты.Добавить("ЕстьАналитикаДохода");
			УдаляемыеРеквизиты.Добавить("ЕстьАналитикаРасхода");
			
			//Прервать;
			
		ИначеЕсли РеквизитФормы.Имя = "НаборАналитики" Тогда
			
			// Удалим элементы формы для аналитик
			Для каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
				Форма.Элементы.Удалить(Форма.Элементы[СтрокаВидаАналитики.ИДАналитики]);
				Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
					Форма.Элементы.Удалить(Форма.Элементы[ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики]);
				КонецЦикла;
			КонецЦикла;
			
			// Удалим реквизиты формы для аналитик
			УдаляемыеРеквизиты.Добавить("НаборАналитики");
			Для каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
				УдаляемыеРеквизиты.Добавить(СтрокаВидаАналитики.ИДАналитики);
				УдаляемыеРеквизиты.Добавить(СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонкиВДоходах");
				УдаляемыеРеквизиты.Добавить(СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонкиВРасходах");
				Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
					ИмяОсновногоРеквизита = "Объект." + ТабличнаяЧасть.ИмяТабличнойЧасти + "." + ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
					УдаляемыеРеквизиты.Добавить(ИмяОсновногоРеквизита);
					УдаляемыеРеквизиты.Добавить(ИмяОсновногоРеквизита + "_Использовать");
					УдаляемыеРеквизиты.Добавить(ИмяОсновногоРеквизита + "_Заполнено");
				КонецЦикла;
			КонецЦикла;
			
		ИначеЕсли РеквизитФормы.Имя = "РеквизитыДокумента" Тогда
			
			УдаляемыеРеквизиты.Добавить("РеквизитыДокумента");
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	// Описания типов для создаваемых реквизитов:
	ТипБулево             = Новый ОписаниеТипов("Булево");
	ТипЧисло1			  = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1));
	
	// Флаг, сигнализирующий о наличии в документе аналитики статей:
	Реквизит = Новый РеквизитФормы("ИспользуетсяАналитикаСтатей", ТипБулево, , , Ложь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Реквизит = Новый РеквизитФормы("РазрешитьРедактированиеАналитикиВШапке", ТипБулево, , , Ложь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// Реквизиты, показывающие наличие в документе статей доходов и статей расходов:
	Реквизит = Новый РеквизитФормы("ЕстьАналитикаДохода", ТипБулево, , , Ложь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("ЕстьАналитикаРасхода", ТипБулево, , , Ложь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	
	// Определяем реквизиты документа, содержащие ссылку на справочник ЗначенияСубконтоАналитика 
	//	(т.е. упакованные наборы аналитики):
	РеквизитыДокумента = ПолучитьТаблицуРеквизитовАналитикиДокумента(Форма.Объект.Ссылка.Метаданные(), ИмяРеквизитаСтатьиДоходов, ИменаСубконтоДоходов, ИмяРеквизитаСтатьиРасходов, ИменаСубконтоРасходов);
	Для каждого ТабличнаяЧасть Из РеквизитыДокумента Цикл
		Если ПустаяСтрока(ТабличнаяЧасть.ИмяТабличнойЧасти) Тогда
			ВызватьИсключение "ИмяТабличнойЧасти не может быть пустым!";
		КонецЕсли;
	КонецЦикла;
	
	// Перед тем, как создавать колонки, нужно знать, какие виды аналитик актуальны для данного документа:
	// Актуальными для документа будут аналитики, сохраненные в документе, плюс аналитика, включенная для всей базы в ПВХ виды аналитики
	АктуальнаяАналитика = ПолучитьАктуальныйНаборАналитики(Форма, РеквизитыДокумента);
	
	Если АктуальнаяАналитика.Количество() = 0  Тогда
		// В данный момент нет активной аналитики для статей
		// и в документе не содержится ни одного значения аналитики.
		// Создаем только один реквизит для использования в прочих обработчиках событий:
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);
		Возврат;
	КонецЕсли; 
	
	// Реквизит формы, хранящий актуальную для документа аналитику:
	ДобавитьВФормуРеквизитПоТаблицеЗначений(Форма, АктуальнаяАналитика, "НаборАналитики", ДобавляемыеРеквизиты);
	
	// Реквизит формы, хранящий таблицу "РеквизитыДокумента" (см. выше):
	ДобавитьВФормуРеквизитПоТаблицеЗначений(Форма, РеквизитыДокумента, "РеквизитыДокумента", ДобавляемыеРеквизиты);
	
	// Добавляем реквизиты формы для каждого вида аналитики:
	Для каждого СтрокаВидаАналитики Из АктуальнаяАналитика Цикл
		// Значение аналитики
		Реквизит = Новый РеквизитФормы(СтрокаВидаАналитики.ИДАналитики, СтрокаВидаАналитики.ТипЗначенияАналитики, , СтрокаВидаАналитики.НаименованиеАналитики, Ложь);
		Реквизит.СохраняемыеДанные = Истина;
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		// Видимость колонки (для условного оформления)
		Реквизит = Новый РеквизитФормы(СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонкиВДоходах",  ТипБулево, , СтрокаВидаАналитики.НаименованиеАналитики + ". Видимость колонки в доходах",  Ложь);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		Реквизит = Новый РеквизитФормы(СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонкиВРасходах", ТипБулево, , СтрокаВидаАналитики.НаименованиеАналитики + ". Видимость колонки в расходах", Ложь);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЦикла;
	
	// Добавляем реквизиты формы в табличные части документа для каждого вида аналитики:
	ТабличныеЧасти = РеквизитыДокумента.Скопировать(, "ИмяТабличнойЧасти, ЭтоДоход, ЭтоРасход");
	ТабличныеЧасти.Свернуть("ИмяТабличнойЧасти, ЭтоДоход, ЭтоРасход");
	НужнаКнопкаАналитики = Ложь;
	Для каждого СтрокаТЧ Из ТабличныеЧасти Цикл
		НужнаКнопкаАналитики = Истина;
		
		// Создаем колонки для табличной части:
		Для каждого СтрокаВидаАналитики Из АктуальнаяАналитика Цикл
			ИмяКолонки = СтрокаТЧ.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
			
			// Значение аналитики
			Реквизит = Новый РеквизитФормы(ИмяКолонки, СтрокаВидаАналитики.ТипЗначенияАналитики, 
						"Объект." + СтрокаТЧ.ИмяТабличнойЧасти, СтрокаВидаАналитики.НаименованиеАналитики);
			Реквизит.СохраняемыеДанные = Истина;
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			
			// Использовать для текущей строки (для условного оформления)
			Реквизит = Новый РеквизитФормы(ИмяКолонки + "_Использовать", ТипЧисло1, 
						"Объект." + СтрокаТЧ.ИмяТабличнойЧасти, СтрокаВидаАналитики.НаименованиеАналитики + ". Использовать");
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			
			// Заполнено в текущей строке (для условного оформления)
			Реквизит = Новый РеквизитФормы(ИмяКолонки + "_Заполнено", ТипЧисло1, 
						"Объект." + СтрокаТЧ.ИмяТабличнойЧасти, СтрокаВидаАналитики.НаименованиеАналитики + ". Заполнено");
			ДобавляемыеРеквизиты.Добавить(Реквизит);
		КонецЦикла;
	КонецЦикла;
	
	// Обновляем состав реквизитов формы:
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);
	
	
	// Заполняем основные реквизиты полученными значениями:
	Форма.ИспользуетсяАналитикаСтатей = Истина;
	Форма.РазрешитьРедактированиеАналитикиВШапке = РазрешитьРедактированиеАналитикиВШапке;
	Форма.НаборАналитики.Загрузить(АктуальнаяАналитика);
	Форма.РеквизитыДокумента.Загрузить(РеквизитыДокумента);
	Форма.ЕстьАналитикаДохода  = РеквизитыДокумента.НайтиСтроки(Новый Структура("ЭтоДоход", Истина)).Количество() > 0;
	Форма.ЕстьАналитикаРасхода = РеквизитыДокумента.НайтиСтроки(Новый Структура("ЭтоРасход", Истина)).Количество() > 0;

	
	// Создаем элементы в шапке и в табличных полях формы:
	ТипПолеФормы          = Тип("ПолеФормы");
	ТипКнопкаФормы        = Тип("КнопкаФормы");
	ГруппаЭлементовШапки  = Форма.Элементы.Найти("ГруппаАналитикиДокумента");
	
	Для каждого СтрокаВидаАналитики Из АктуальнаяАналитика Цикл
		
		НовыйЭлемент = Форма.Элементы.Добавить(СтрокаВидаАналитики.ИДАналитики, 
							ТипПолеФормы, ГруппаЭлементовШапки);
		НовыйЭлемент.ПутьКДанным = СтрокаВидаАналитики.ИДАналитики;
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		//НовыйЭлемент.КнопкаОткрытия = Ложь;
		//НовыйЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСпискеИВПолеВвода;
		МассивПараметровВыбора = Новый Массив;
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СтрокаВидаАналитики.ВидАналитики));
		НовыйЭлемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
		НовыйЭлемент.ЦветФона = ЦветаСтиля.АльтернативныйЦветФонаПоля;
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииАналитикиВШапке");
		НовыйЭлемент.ВыборГруппИЭлементов = ГруппыИЭлементы.ГруппыИЭлементы;
		
		Для каждого СтрокаТЧ Из ТабличныеЧасти Цикл
			// Размещаем колонку в табличной части:
			ИмяКолонки = СтрокаТЧ.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
			ЭлементКолонки = Форма.Элементы.Добавить(ИмяКолонки, ТипПолеФормы, Форма.Элементы[СтрокаТЧ.ИмяТабличнойЧасти]);
			ЭлементКолонки.ПутьКДанным = "Объект." + СтрокаТЧ.ИмяТабличнойЧасти + "." + СтрокаТЧ.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
			ЭлементКолонки.Вид = ВидПоляФормы.ПолеВвода;
			ЭлементКолонки.КартинкаШапки = БиблиотекаКартинок.ИконкаЗакладки16х16;
			МассивПараметровВыбора = Новый Массив;
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СтрокаВидаАналитики.ВидАналитики));
			ЭлементКолонки.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
			ЭлементКолонки.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииАналитикиВТаблице");
			ЭлементКолонки.ВыборГруппИЭлементов = ГруппыИЭлементы.ГруппыИЭлементы;
			
			ДобавитьУсловноеОформлениеДляАналитикиПоШаблонам(Форма, СтрокаТЧ.ЭтоРасход, СтрокаВидаАналитики.ИДАналитики, ЭлементКолонки.ПутьКДанным, ИмяКолонки);
		КонецЦикла;
		
	КонецЦикла;
	
	// Создаем кнопку Аналитика
	Если НужнаКнопкаАналитики И ИмяКоманднойПанелиДляКнопкиАналитика <> Неопределено 
			И Форма.Элементы.Найти("НастройкаКолонокАналитики") = Неопределено Тогда
		НоваяКоманда = Форма.Команды.Добавить("НастройкаКолонокАналитики");
		НоваяКоманда.Заголовок = "Аналитика";
		НоваяКоманда.Действие = "Подключаемый_НастройкаКолонокАналитики";
		НоваяКоманда.Картинка = БиблиотекаКартинок.ИконкаЗакладки16х16;
		НоваяКоманда.Отображение = ОтображениеКнопки.КартинкаИТекст;
		НоваяКоманда.Подсказка = НСтр("ru = 'Настройка колонок аналитики'");
		
		НоваяКнопка = Форма.Элементы.Добавить(НоваяКоманда.Имя, ТипКнопкаФормы, Форма.Элементы[ИмяКоманднойПанелиДляКнопкиАналитика]);
		НоваяКнопка.ИмяКоманды = НоваяКоманда.Имя;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события общий для всех форм операций
Процедура ПередЗаписьюНаСервере(Форма, ДокументОбъект) Экспорт
	
	Если НЕ Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат;
	КонецЕсли; 
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ЕстьОбщаяАналитикаДокумента = МетаданныеДокумента.ТабличныеЧасти.Найти("АналитикаДокумента") <> Неопределено;
	
	// 1. Записываем в аналитику документа общие виды аналитики:
	Если ЕстьОбщаяАналитикаДокумента Тогда
		
		ЕстьРеквизитИспользоватьДляДохода  = МетаданныеДокумента.ТабличныеЧасти.АналитикаДокумента.Реквизиты.Найти("ИспользоватьДляДохода") <> Неопределено;
		ЕстьРеквизитИспользоватьДляРасхода = МетаданныеДокумента.ТабличныеЧасти.АналитикаДокумента.Реквизиты.Найти("ИспользоватьДляРасхода") <> Неопределено;
		
		ДокументОбъект.АналитикаДокумента.Очистить();
		Для каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
			
			Если Форма.ЕстьАналитикаДохода И СтрокаВидаАналитики.ИспользоватьДляДохода 
				ИЛИ Форма.ЕстьАналитикаРасхода И СтрокаВидаАналитики.ИспользоватьДляРасхода Тогда
				НоваяСтрока                      = ДокументОбъект.АналитикаДокумента.Добавить();
				НоваяСтрока.ВидАналитики         = СтрокаВидаАналитики.ВидАналитики;
				НоваяСтрока.РедактироватьВШапке  = СтрокаВидаАналитики.РедактироватьВШапке;
				НоваяСтрока.ЗначениеАналитикиВШапке  = Форма[СтрокаВидаАналитики.ИДАналитики];
				Если ЕстьРеквизитИспользоватьДляДохода Тогда
					НоваяСтрока.ИспользоватьДляДохода = СтрокаВидаАналитики.ИспользоватьДляДохода;
				КонецЕсли;
				Если ЕстьРеквизитИспользоватьДляРасхода Тогда
					НоваяСтрока.ИспользоватьДляРасхода = СтрокаВидаАналитики.ИспользоватьДляРасхода;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// 2. Определяем и записываем ссылки на справочник ЗначенияСубконтоАналитика в реквизиты документа
	ВидИЗначениеАналитики = НоваяТаблицаВидИЗначениеАналитики();
	
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если ТабличнаяЧасть.ЭтоДоход Тогда
			ОтборНабораАналитики = Новый Структура("ИспользоватьДляДохода", Истина);
		Иначе //Если ТабличнаяЧасть.ЭтоРасход Тогда
			ОтборНабораАналитики = Новый Структура("ИспользоватьДляРасхода", Истина);
		КонецЕсли;
		МассивСтрокНабораАналитики = Форма.НаборАналитики.НайтиСтроки(ОтборНабораАналитики);
		
		// реквизит табличной части
		Счетчик = 0;
		Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
			
			ВидИЗначениеАналитики.Очистить();
			
			Для каждого СтрокаВидаАналитики Из МассивСтрокНабораАналитики Цикл
				
				ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
				
				Если СтрокаВидаАналитики.РедактироватьВШапке Тогда
					//  Здесь надо проверить заполненность для расширенных аналитик
					Если ЗначениеЗаполнено(Форма[СтрокаВидаАналитики.ИДАналитики]) Тогда
						Если (ТабличнаяЧасть.ЭтоДоход И СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
							ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода)
							И НЕ СтрокаТабЧасти[ИмяКолонки + "_Использовать"] И НЕ СтрокаТабЧасти[ИмяКолонки + "_Заполнено"] Тогда
							Продолжить;
						КонецЕсли;
						СтрокаТаблицы = ВидИЗначениеАналитики.Добавить();
						СтрокаТаблицы.ВидАналитики      = СтрокаВидаАналитики.ВидАналитики;
						СтрокаТаблицы.ЗначениеАналитики = Форма[СтрокаВидаАналитики.ИДАналитики];
					КонецЕсли;
				Иначе
					Если ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]) Тогда
						СтрокаТаблицы = ВидИЗначениеАналитики.Добавить();
						СтрокаТаблицы.ВидАналитики      = СтрокаВидаАналитики.ВидАналитики;
						СтрокаТаблицы.ЗначениеАналитики = СтрокаТабЧасти[ИмяКолонки];
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			СтрокаДокументаОбъекта = ДокументОбъект[ТабличнаяЧасть.ИмяТабличнойЧасти][Счетчик];
			Если ВидИЗначениеАналитики.Количество() > 0 Тогда
				СсылкаНаНаборАналитики = ПолучитьСсылкуНаНаборЗначенийАналитик(ВидИЗначениеАналитики, Истина);
				СтрокаДокументаОбъекта[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики] = СсылкаНаНаборАналитики;
			Иначе
				СтрокаДокументаОбъекта[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики] = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
			КонецЕсли;
			
			Счетчик = Счетчик + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	 
	
КонецПроцедуры

// Находит или создает для статьи Статья такой ПакетАналитикСтатьи, 
// чтобы значения расширенных аналитик в нем соответствовали значениям по умолчанию.
//
Процедура ПриИзмененииСтатьиВШапке(Статья, ПакетАналитикиСтатьи) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Статья) Тогда
		ПакетАналитикиСтатьи = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
	РасширеннаяАналитикаСтатьи = ПолучитьРасширеннуюАналитикуДляСтатьи(Статья);
	
	ВидыИЗначенияАналитики = НоваяТаблицаВидИЗначениеАналитики();
	
	// Сформируем пакет без пустых значений
	Для каждого СтрокаРасширеннойАналитикиСтатьи Из РасширеннаяАналитикаСтатьи Цикл
		Если ЗначениеЗаполнено(СтрокаРасширеннойАналитикиСтатьи.ЗначениеПоУмолчанию) Тогда
			НоваяСтрока = ВидыИЗначенияАналитики.Добавить();
			НоваяСтрока.ВидАналитики      = СтрокаРасширеннойАналитикиСтатьи.ВидАналитики;
			НоваяСтрока.ЗначениеАналитики = СтрокаРасширеннойАналитикиСтатьи.ЗначениеПоУмолчанию;
		КонецЕсли;
	КонецЦикла;
	
	// Найдем пакет в справочнике
	Если ВидыИЗначенияАналитики.Количество() > 0 Тогда
		ПакетАналитикиСтатьи = ПолучитьСсылкуНаНаборЗначенийАналитик(ВидыИЗначенияАналитики);
	Иначе
		ПакетАналитикиСтатьи = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события общий для всех форм операций
Процедура ПриИзмененииСтатьиВТабличнойЧасти(Форма, Статья, ИмяТабличнойЧасти, ИдентификаторСтроки) Экспорт

	Если НЕ Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат;
	КонецЕсли; 
	
	СтрокаТабЧасти = Форма.Объект[ИмяТабличнойЧасти].НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаТабЧасти = Неопределено ИЛИ Форма.НаборАналитики.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	 
	// Прочитаем расширенные настройки
	ТабличныеЧасти = Форма.РеквизитыДокумента.НайтиСтроки(Новый Структура("ИмяТабличнойЧасти", ИмяТабличнойЧасти));
	Если ТабличныеЧасти.Количество() <> 1 Тогда
		ВызватьИсключение "Не найдена табличная часть " + ИмяТабличнойЧасти;
	КонецЕсли;
	
	ТабличнаяЧасть = ТабличныеЧасти[0];
	ЭтоДоход  = ТабличнаяЧасть.ЭтоДоход;
	ЭтоРасход = ТабличнаяЧасть.ЭтоРасход;
	Если ЭтоДоход Тогда
		ОтборРасширеннойАналитики = Новый Структура("РасширенныеНастройкиДляДохода", Истина);
	ИначеЕсли ЭтоРасход Тогда
		ОтборРасширеннойАналитики = Новый Структура("РасширенныеНастройкиДляРасхода", Истина);
	КонецЕсли;
	МассивСтрокРасширеннойАналитики = Форма.НаборАналитики.НайтиСтроки(ОтборРасширеннойАналитики);
	МассивАналитик = Форма.НаборАналитики.Выгрузить(МассивСтрокРасширеннойАналитики, "ВидАналитики").ВыгрузитьКолонку("ВидАналитики");
	РасширенныеНастройкиАналитик = ПолучитьРасширенныеНастройкиАналитикПоСтатьям(Статья, МассивАналитик);
	
	// Обновляем значения по умолчанию для статьи
	Для каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
		Если (ЭтоРасход И НЕ СтрокаВидаАналитики.ИспользоватьДляРасхода) ИЛИ (ЭтоДоход И НЕ СтрокаВидаАналитики.ИспользоватьДляДохода) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКолонки = ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
		
		// Определим использование
		СтрокаТабЧасти[ИмяКолонки + "_Использовать"] = ОпределитьИспользованиеАналитикиДляСтатьи(ТабличнаяЧасть, СтрокаТабЧасти, СтрокаВидаАналитики, РасширенныеНастройкиАналитик);
		
		// Если не используется, очистим, иначе заполним по умолчанию
		Если НЕ ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]) Тогда
			Если ЭтоДоход И СтрокаВидаАналитики.РасширенныеНастройкиДляДохода 
				ИЛИ ЭтоРасход И СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода Тогда
				Если СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
					Настройки = НайтиРасширенныеНастройкиДляСтатьиИАналитики(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи], СтрокаВидаАналитики.ВидАналитики, РасширенныеНастройкиАналитик);
					Если СтрокаВидаАналитики.РедактироватьВШапке Тогда
						Если НЕ ЗначениеЗаполнено(Форма[СтрокаВидаАналитики.ИДАналитики]) Тогда
							Форма[СтрокаВидаАналитики.ИДАналитики] = Настройки.ЗначениеПоУмолчаниюВШапке;
						КонецЕсли;
						ЗначениеПоУмолчанию = Форма[СтрокаВидаАналитики.ИДАналитики];
					Иначе
						ЗначениеПоУмолчанию = Настройки.ЗначениеПоУмолчаниюВТаблице;
					КонецЕсли;
					//ЗначениеПоУмолчанию = ?(СтрокаВидаАналитики.РедактироватьВШапке, Форма[СтрокаВидаАналитики.ИДАналитики], Настройки.ЗначениеПоУмолчаниюВТаблице);
					СтрокаТабЧасти[ИмяКолонки] = ?(Настройки = Неопределено, Неопределено, ЗначениеПоУмолчанию);
				КонецЕсли;
			ИначеЕсли ЭтоДоход И СтрокаВидаАналитики.ИспользоватьДляДохода Тогда
				СтрокаТабЧасти[ИмяКолонки] = ?(СтрокаВидаАналитики.РедактироватьВШапке, Форма[СтрокаВидаАналитики.ИДАналитики], СтрокаВидаАналитики.ЗначениеАналитикиДоходаПоУмолчанию);
			ИначеЕсли ЭтоРасход И СтрокаВидаАналитики.ИспользоватьДляРасхода Тогда
				СтрокаТабЧасти[ИмяКолонки] = ?(СтрокаВидаАналитики.РедактироватьВШапке, Форма[СтрокаВидаАналитики.ИДАналитики], СтрокаВидаАналитики.ЗначениеАналитикиРасходаПоУмолчанию);
			КонецЕсли;
		КонецЕсли;
		Если НЕ СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
			СтрокаТабЧасти[ИмяКолонки] = Неопределено;
		КонецЕсли;
		
		// Проверим заполненность
		СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
		 
	КонецЦикла;
	
	// Вычислим видимость
	УправлениеФормой(Форма);

КонецПроцедуры

// Разворот пакетов аналитики. Начальное заполнение реквизитов формы документа значениями аналитики,
//	полученными из справочника ЗначенияСубконтоАналитика
//	Если документ новый, то все несохраненные значения будут пустыми
Процедура ЗаполнитьРеквизитыАналитикой(Форма) Экспорт
	
	Если НЕ Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтоНовыйДокумент           = Форма.Объект.Ссылка.Пустая();
	ЕстьСтрокиВТабличныхЧастях = Ложь;
	
	// Запомним значения аналитик, которые нужно прочитать в базе:
	МассивПакетовАналитики = Новый Массив;
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Количество() > 0 Тогда
			ЕстьСтрокиВТабличныхЧастях = Истина;
			// Значение реквизита табличной части
			Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
				Если ЗначениеЗаполнено(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики]) Тогда
					МассивПакетовАналитики.Добавить(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики]);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	// Считываем значения аналитик:
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПакетовАналитики", МассивПакетовАналитики);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияСубконтоАналитика.ВидАналитики КАК ВидАналитики,
	|	ЗначенияСубконтоАналитика.ЗначениеАналитики,
	|	ЗначенияСубконтоАналитика.Ссылка КАК ПакетАналитики
	|ИЗ
	|	Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК ЗначенияСубконтоАналитика
	|ГДЕ
	|	ЗначенияСубконтоАналитика.Ссылка В(&МассивПакетовАналитики)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ЗначенияСубконтоАналитика.ВидАналитики.Наименование";
	СохраненнаяАналитика = Запрос.Выполнить().Выгрузить();
	
	ЗаполнятьПоУмолчанию = ЭтоНовыйДокумент 
		И Форма.Объект.АналитикаДокумента.Количество() = 0 
		И НЕ ЕстьСтрокиВТабличныхЧастях;
	
	// Заполняем реквизиты формы значениями аналитики:
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если ТабличнаяЧасть.ЭтоДоход Тогда
			ОтборНабораАналитики = Новый Структура("ИспользоватьДляДохода", Истина);
			ОтборРасширеннойАналитики = Новый Структура("РасширенныеНастройкиДляДохода", Истина);
		Иначе //Если ТабличнаяЧасть.ЭтоРасход Тогда
			ОтборНабораАналитики = Новый Структура("ИспользоватьДляРасхода", Истина);
			ОтборРасширеннойАналитики = Новый Структура("РасширенныеНастройкиДляРасхода", Истина);
		КонецЕсли;
		МассивСтрокНабораАналитики = Форма.НаборАналитики.НайтиСтроки(ОтборНабораАналитики);
		
		ОтборСохраненнойАналитики = Новый Структура("ПакетАналитики, ВидАналитики");
		
		МассивСтрокРасширеннойАналитики = Форма.НаборАналитики.НайтиСтроки(ОтборРасширеннойАналитики);
		МассивАналитик = Форма.НаборАналитики.Выгрузить(МассивСтрокРасширеннойАналитики, "ВидАналитики").ВыгрузитьКолонку("ВидАналитики");
		МассивСтатей   = Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Выгрузить(, ТабличнаяЧасть.ИмяРеквизитаСтатьи).ВыгрузитьКолонку(ТабличнаяЧасть.ИмяРеквизитаСтатьи);
		РасширенныеНастройкиАналитик = ПолучитьРасширенныеНастройкиАналитикПоСтатьям(МассивСтатей, МассивАналитик);
		
		// Значение реквизита табличной части
		Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
			
			Для каждого СтрокаВидаАналитики Из МассивСтрокНабораАналитики Цикл
				
				ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
				
				СтрокаТабЧасти[ИмяКолонки + "_Использовать"] = ОпределитьИспользованиеАналитикиДляСтатьи(ТабличнаяЧасть, СтрокаТабЧасти, СтрокаВидаАналитики, РасширенныеНастройкиАналитик);
				 
				Если ЗаполнятьПоУмолчанию Тогда
					// Заполняем значением по умолчанию:
					Если ТабличнаяЧасть.ЭтоДоход И СтрокаВидаАналитики.РасширенныеНастройкиДляДохода 
						ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода Тогда
						Если СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
							Настройки = НайтиРасширенныеНастройкиДляСтатьиИАналитики(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи], СтрокаВидаАналитики.ВидАналитики, РасширенныеНастройкиАналитик);
							СтрокаТабЧасти[ИмяКолонки] = ?(Настройки = Неопределено, Неопределено, Настройки.ЗначениеПоУмолчаниюВТаблице);
						Иначе
							СтрокаТабЧасти[ИмяКолонки] = Неопределено;
						КонецЕсли;
					ИначеЕсли ТабличнаяЧасть.ЭтоДоход И СтрокаВидаАналитики.ИспользоватьДляДохода Тогда
						СтрокаТабЧасти[ИмяКолонки] = СтрокаВидаАналитики.ЗначениеАналитикиДоходаПоУмолчанию;
					ИначеЕсли ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.ИспользоватьДляРасхода Тогда
						СтрокаТабЧасти[ИмяКолонки] = СтрокаВидаАналитики.ЗначениеАналитикиРасходаПоУмолчанию;
					КонецЕсли;
				Иначе
					ОтборСохраненнойАналитики.ПакетАналитики = СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики];
					ОтборСохраненнойАналитики.ВидАналитики   = СтрокаВидаАналитики.ВидАналитики;
					ЗначенияАналитики = СохраненнаяАналитика.НайтиСтроки(ОтборСохраненнойАналитики);
					Если ЗначенияАналитики.Количество() > 0 Тогда
						СтрокаТабЧасти[ИмяКолонки] = ЗначенияАналитики[0].ЗначениеАналитики;
					КонецЕсли;
				КонецЕсли;
				
				СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	// Так же нужно считать общие значения аналитики и заполнить ими реквизиты шапки:
	Для каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл

		Если ЗаполнятьПоУмолчанию Тогда
			Если Форма.ЕстьАналитикаДохода И СтрокаВидаАналитики.ИспользоватьДляДохода Тогда
				Форма[СтрокаВидаАналитики.ИДАналитики] = СтрокаВидаАналитики.ЗначениеАналитикиДоходаПоУмолчанию;
			ИначеЕсли Форма.ЕстьАналитикаРасхода И СтрокаВидаАналитики.ИспользоватьДляРасхода Тогда
				Форма[СтрокаВидаАналитики.ИДАналитики] = СтрокаВидаАналитики.ЗначениеАналитикиРасходаПоУмолчанию;
			КонецЕсли;
		Иначе
			СтрокиАналитикиДокумента = Форма.Объект.АналитикаДокумента.НайтиСтроки(Новый Структура("ВидАналитики", СтрокаВидаАналитики.ВидАналитики));
			Если СтрокиАналитикиДокумента.Количество() > 0 И СтрокиАналитикиДокумента[0].РедактироватьВШапке Тогда
				Форма[СтрокаВидаАналитики.ИДАналитики] = СтрокиАналитикиДокумента[0].ЗначениеАналитикиВШапке;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	 
	
КонецПроцедуры

// Управляет видимостью реквизитов аналитики
//
Процедура УправлениеФормой(Форма, ЗаполнятьЗначениямиПоУмолчанию = Ложь, ПотеряДанныхРазрешена = Ложь) Экспорт

	Если НЕ Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат;
	КонецЕсли; 
	
	// Прочитаем расширенные настройки
	РасширенныеНастройкиАналитикДляДохода = Неопределено;
	РасширенныеНастройкиАналитикДляРасхода = Неопределено;
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если ТабличнаяЧасть.ЭтоДоход Тогда
			ОтборРасширеннойАналитики = Новый Структура("РасширенныеНастройкиДляДохода", Истина);
		ИначеЕсли ТабличнаяЧасть.ЭтоРасход Тогда
			ОтборРасширеннойАналитики = Новый Структура("РасширенныеНастройкиДляРасхода", Истина);
		КонецЕсли;
		
		МассивСтрокРасширеннойАналитики = Форма.НаборАналитики.НайтиСтроки(ОтборРасширеннойАналитики);
		МассивАналитик = Форма.НаборАналитики.Выгрузить(МассивСтрокРасширеннойАналитики, "ВидАналитики").ВыгрузитьКолонку("ВидАналитики");
		МассивСтатей   = Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Выгрузить(, ТабличнаяЧасть.ИмяРеквизитаСтатьи).ВыгрузитьКолонку(ТабличнаяЧасть.ИмяРеквизитаСтатьи);
		Если ТабличнаяЧасть.ЭтоДоход Тогда
			РасширенныеНастройкиАналитикДляДохода = ПолучитьРасширенныеНастройкиАналитикПоСтатьям(МассивСтатей, МассивАналитик);
		ИначеЕсли ТабличнаяЧасть.ЭтоРасход Тогда
			РасширенныеНастройкиАналитикДляРасхода = ПолучитьРасширенныеНастройкиАналитикПоСтатьям(МассивСтатей, МассивАналитик);
		КонецЕсли;
		
	КонецЦикла;
	
	
	Для Каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
		
		// Обновим настройки вида аналитики, зависящие только от ПВХ.ВидыАналитик
 		СтрокаВидаАналитики.ЗначениеАналитикиДоходаПоУмолчанию  = СтрокаВидаАналитики.ВидАналитики.ЗначениеАналитикиДохода;
		СтрокаВидаАналитики.ЗначениеАналитикиРасходаПоУмолчанию = СтрокаВидаАналитики.ВидАналитики.ЗначениеАналитикиРасхода;
		СтрокаВидаАналитики.РасширенныеНастройкиДляДохода  = СтрокаВидаАналитики.ВидАналитики.РасширенныеНастройкиДляДохода;
		СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода = СтрокаВидаАналитики.ВидАналитики.РасширенныеНастройкиДляРасхода;
		
		// Обновим признаки использования и заполненности в ячейках
		Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
			РасширенныеНастройкиАналитик = ?(ТабличнаяЧасть.ЭтоДоход, РасширенныеНастройкиАналитикДляДохода, РасширенныеНастройкиАналитикДляРасхода);
			
			ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
			Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
				СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
				СтрокаТабЧасти[ИмяКолонки + "_Использовать"] = ОпределитьИспользованиеАналитикиДляСтатьи(ТабличнаяЧасть, СтрокаТабЧасти, СтрокаВидаАналитики, РасширенныеНастройкиАналитик);
			КонецЦикла;
		КонецЦикла;
		
		
		// Элементы шапки
		РедактироватьВШапке = СтрокаВидаАналитики.РедактироватьВШапке И Форма.РазрешитьРедактированиеАналитикиВШапке 
			И (ПотеряДанныхРазрешена ИЛИ МожноПеренестиАналитикуВШапкуБезПотерь(Форма, СтрокаВидаАналитики));
		СтрокаВидаАналитики.РедактироватьВШапке = РедактироватьВШапке;
		
		Если СтрокаВидаАналитики.ИспользоватьДляДохода И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
			ИЛИ СтрокаВидаАналитики.ИспользоватьДляРасхода И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода
			ИЛИ НЕ РедактироватьВШапке Тогда
			
			НоваяВидимость = РедактироватьВШапке;
			
		Иначе
			
			// Определим использование аналитики в строках
			ЕстьСтатьиИспользующиеАналитику = Ложь;
			Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
				
				Если НЕ ЗначениеЗаполнено(Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти]) Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
				
				ЕстьСтатьиИспользующиеАналитику = ЕстьСтатьиИспользующиеАналитику 
				ИЛИ ТабличнаяЧасть.ЭтоДоход  И СтрокаВидаАналитики.ИспользоватьДляДохода  И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода  
				ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.ИспользоватьДляРасхода И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода 
				ИЛИ Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Использовать") <> 0
				ИЛИ Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Заполнено") <> 0;
				
				Если ЕстьСтатьиИспользующиеАналитику Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			НоваяВидимость = РедактироватьВШапке И ЕстьСтатьиИспользующиеАналитику;
			
		КонецЕсли;
		
		ЗначениеИзШапкиВСтроки = NULL;
		
		ЭлементФормы = Форма.Элементы.Найти(СтрокаВидаАналитики.ИДАналитики);
		Если ЭлементФормы <> Неопределено И ЭлементФормы.Видимость <> НоваяВидимость Тогда
			
			ЭлементФормы.Видимость = НоваяВидимость;
			
			Если ЭлементФормы.Видимость Тогда
				
				// Из табличной части перенесли в шапку (или добавили новую аналитику). 
				// Если в строках одинаковое значение то подставляем его в шапку
				Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
					
					ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
					
					ЭлементФормы = Форма.Элементы.Найти(ИмяКолонки);
					Если ЭлементФормы <> Неопределено Тогда
						
						АналитикаВТабЧасти = Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Выгрузить(, ИмяКолонки);
						АналитикаВТабЧасти.Свернуть(ИмяКолонки);
						Если АналитикаВТабЧасти.Количество() = 1 Тогда
							
							Если ЗначениеЗаполнено(АналитикаВТабЧасти[0][ИмяКолонки]) Тогда
								Форма[СтрокаВидаАналитики.ИДАналитики] = АналитикаВТабЧасти[0][ИмяКолонки];
								
							ИначеЕсли ЗаполнятьЗначениямиПоУмолчанию Тогда
								ЗначениеПоУмолчанию = ?(ТабличнаяЧасть.ЭтоДоход, СтрокаВидаАналитики.ЗначениеАналитикиДоходаПоУмолчанию, СтрокаВидаАналитики.ЗначениеАналитикиРасходаПоУмолчанию);
								Форма[СтрокаВидаАналитики.ИДАналитики] = ЗначениеПоУмолчанию;
								
							КонецЕсли;
							
						Иначе
							
							Форма[СтрокаВидаАналитики.ИДАналитики] = Неопределено;
							Для каждого Строка Из АналитикаВТабЧасти Цикл
								// Подставим первое непустое значение
								Если ЗначениеЗаполнено(Строка[ИмяКолонки]) Тогда
									Форма[СтрокаВидаАналитики.ИДАналитики] = Строка[ИмяКолонки];
									Прервать;
								КонецЕсли;
							КонецЦикла;
							
						КонецЕсли; 
						
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				// Из шапки перенесли в табличную часть (или удалили аналитику). Заполняем этим значением все строки.
				ЗначениеИзШапкиВСтроки = Форма[СтрокаВидаАналитики.ИДАналитики];
				
			КонецЕсли; 
			
		КонецЕсли;
		
		// Элементы таблицы
		Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
			
			РасширенныеНастройкиАналитик = ?(ТабличнаяЧасть.ЭтоДоход, РасширенныеНастройкиАналитикДляДохода, РасширенныеНастройкиАналитикДляРасхода);
			
			ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
			
			ЭлементФормы = Форма.Элементы.Найти(ИмяКолонки);
			НоваяВидимость = НЕ РедактироватьВШапке 
								И (ТабличнаяЧасть.ЭтоДоход И (СтрокаВидаАналитики.ИспользоватьДляДохода ИЛИ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода)
									ИЛИ ТабличнаяЧасть.ЭтоРасход И (СтрокаВидаАналитики.ИспользоватьДляРасхода ИЛИ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода));
			Если ЭлементФормы <> Неопределено И ЭлементФормы.Видимость <> НоваяВидимость Тогда
				
				ЭлементФормы.Видимость = НоваяВидимость;
				
				Если ЗначениеИзШапкиВСтроки <> NULL И ЗначениеЗаполнено(ЗначениеИзШапкиВСтроки) Тогда
					
					Для Каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
						СтрокаТабЧасти[ИмяКолонки + "_Использовать"] = ОпределитьИспользованиеАналитикиДляСтатьи(ТабличнаяЧасть, СтрокаТабЧасти, СтрокаВидаАналитики, РасширенныеНастройкиАналитик);
						СтрокаТабЧасти[ИмяКолонки] = ?(СтрокаТабЧасти[ИмяКолонки + "_Использовать"], ЗначениеИзШапкиВСтроки, Неопределено);
						СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
					КонецЦикла; 
					
				ИначеЕсли ЗаполнятьЗначениямиПоУмолчанию Тогда
									
					Для Каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
						СтрокаТабЧасти[ИмяКолонки + "_Использовать"] = ОпределитьИспользованиеАналитикиДляСтатьи(ТабличнаяЧасть, СтрокаТабЧасти, СтрокаВидаАналитики, РасширенныеНастройкиАналитик);
						Если ТабличнаяЧасть.ЭтоДоход И СтрокаВидаАналитики.РасширенныеНастройкиДляДохода 
							ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода Тогда
							Если СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
								Настройки = НайтиРасширенныеНастройкиДляСтатьиИАналитики(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи], СтрокаВидаАналитики.ВидАналитики, РасширенныеНастройкиАналитик);
								СтрокаТабЧасти[ИмяКолонки] = ?(Настройки = Неопределено, Неопределено, Настройки.ЗначениеПоУмолчаниюВТаблице);
							Иначе
								СтрокаТабЧасти[ИмяКолонки] = Неопределено;
							КонецЕсли;
						Иначе
							СтрокаТабЧасти[ИмяКолонки] = ?(ТабличнаяЧасть.ЭтоДоход, СтрокаВидаАналитики.ЗначениеАналитикиДоходаПоУмолчанию, СтрокаВидаАналитики.ЗначениеАналитикиРасходаПоУмолчанию);
						КонецЕсли;
						СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
					КонецЦикла; 
					
				КонецЕсли; 
				
			КонецЕсли;
			
			Форма[СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонки" + ?(ТабличнаяЧасть.ЭтоДоход, "ВДоходах", "ВРасходах")] = ЭлементФормы.Видимость 
				И (ТабличнаяЧасть.ЭтоДоход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
					ИЛИ ТабличнаяЧасть.ЭтоРасход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода)
				ИЛИ Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Использовать") <> 0 
				ИЛИ Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Заполнено") <> 0;
			
		КонецЦикла;
		 
	КонецЦикла;
	

КонецПроцедуры

#КонецЕсли

// Прочие

// Возвращает таблицу значений, содержащую виды и значения по умолчанию расширенных аналитик для статьи
//
Функция ПолучитьРасширеннуюАналитикуДляСтатьи(Статья) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Статья", Статья);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыАналитикИСтатьи.ВидАналитики,
	|	ВидыАналитикИСтатьи.Статья,
	|	ВидыАналитикИСтатьи.ЭтоСтатьяРасходов
	|ПОМЕСТИТЬ ВидыАналитикИСтатьи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВидыАналитик.Ссылка КАК ВидАналитики,
	|		СтатьиДоходов.Ссылка КАК Статья,
	|		ВЫБОР
	|			КОГДА СтатьиДоходов.Ссылка ЕСТЬ НЕ NULL 
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ КАК ЭтоСтатьяРасходов
	|	ИЗ
	|		ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СтатьиДоходов.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.СтатьиДоходов КАК СтатьиДоходов
	|			ГДЕ
	|				СтатьиДоходов.Ссылка = &Статья) КАК СтатьиДоходов
	|			ПО (ВидыАналитик.АктуальнаДляДохода)
	|				И (ВидыАналитик.РасширенныеНастройкиДляДохода)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВидыАналитик.Ссылка,
	|		СтатьиРасходов.Ссылка,
	|		ВЫБОР
	|			КОГДА СтатьиРасходов.Ссылка ЕСТЬ НЕ NULL 
	|				ТОГДА ИСТИНА
	|		КОНЕЦ
	|	ИЗ
	|		ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СтатьиРасходов.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.СтатьиРасходов КАК СтатьиРасходов
	|			ГДЕ
	|				СтатьиРасходов.Ссылка = &Статья) КАК СтатьиРасходов
	|			ПО (ВидыАналитик.АктуальнаДляРасхода)
	|				И (ВидыАналитик.РасширенныеНастройкиДляРасхода)) КАК ВидыАналитикИСтатьи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыАналитикИСтатьи.ЭтоСтатьяРасходов,
	|	ВидыАналитикИСтатьи.Статья,
	|	ВидыАналитикИСтатьи.ВидАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыАналитикИСтатьи.ВидАналитики КАК ВидАналитики,
	|	ВидыАналитикИСтатьи.Статья КАК Статья,
	|	ВидыАналитикИСтатьи.ЭтоСтатьяРасходов КАК ЭтоСтатьяРасходов,
	|	ЕСТЬNULL(НастройкиАналитикиПоСтатьям.Использовать, ЛОЖЬ) КАК Использовать,
	|	ВЫБОР
	|		КОГДА НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию ЕСТЬ НЕ NULL 
	|			ТОГДА НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию
	|		КОГДА НастройкиАналитикиПоСтатьям.Статья ССЫЛКА Справочник.СтатьиДоходов
	|			ТОГДА НастройкиАналитикиПоСтатьям.ВидАналитики.ЗначениеАналитикиДохода
	|		КОГДА НастройкиАналитикиПоСтатьям.Статья ССЫЛКА Справочник.СтатьиРасходов
	|			ТОГДА НастройкиАналитикиПоСтатьям.ВидАналитики.ЗначениеАналитикиРасхода
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЗначениеПоУмолчанию
	|ИЗ
	|	ВидыАналитикИСтатьи КАК ВидыАналитикИСтатьи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|		ПО ВидыАналитикИСтатьи.Статья = НастройкиАналитикиПоСтатьям.Статья
	|			И ВидыАналитикИСтатьи.ВидАналитики = НастройкиАналитикиПоСтатьям.ВидАналитики
	|ГДЕ
	|	ЕСТЬNULL(НастройкиАналитикиПоСтатьям.Использовать, ЛОЖЬ) = ИСТИНА";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает ссылку на "пакет", содержащий указанные виды и значения аналитики
//
//Параметры:
//	ТаблицаАналитикиСтатьи - ТаблицаЗначений из 2-х колонок:
//							* ВидАналитики - ПланВидовХарактеристикСсылка.ВидыАналитики
//							* ЗначениеАналитики - значение характеристики
//	СоздаватьНовую - Булево - елси Истина, то отсутствующая коллекция Видов и значений аналитики 
//							будет добавлена в новую запись справочника ЗначенияСубконтоАналитика
//
//Возвращаемое значение:
//	СправочникСсылка.ЗначенияСубконтоАналитика
//
Функция ПолучитьСсылкуНаНаборЗначенийАналитик(ТаблицаАналитикиСтатьи, СоздаватьНовую = Истина) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Ссылки.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСубконтоАналитика КАК Ссылки
	|		//ВнутреннееСоединение
	|";
	
	СчетчикЗначений = 0;
	Для Каждого ПараЗначений Из ТаблицаАналитикиСтатьи Цикл
		
		СчетчикЗначений = СчетчикЗначений + 1;
		
		СуффиксПараметров = Формат(СчетчикЗначений, "ЧДЦ=0; ЧГ=");
		СинонимТаблицы = "ВидыИЗначения" + СуффиксПараметров;
		Запрос.УстановитьПараметр("ВидАналитики" + СуффиксПараметров, ПараЗначений.ВидАналитики);
		Запрос.УстановитьПараметр("ЗначениеАналитики" + СуффиксПараметров, ПараЗначений.ЗначениеАналитики);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ВнутреннееСоединение", "
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК " + СинонимТаблицы + "
			|		ПО Ссылки.Ссылка = " + СинонимТаблицы + ".Ссылка
			|			И (" + СинонимТаблицы + ".ВидАналитики = &ВидАналитики" + СуффиксПараметров + ")
			|			И (" + СинонимТаблицы + ".ЗначениеАналитики = &ЗначениеАналитики" + СуффиксПараметров + ")
			|	//ВнутреннееСоединение");
			
	КонецЦикла; 
	
	Запрос.УстановитьПараметр("КоличествоАналитики", СчетчикЗначений);
	Запрос.Текст = Запрос.Текст + 
	"ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		КонтрольнаяВыборка.Ссылка,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КонтрольнаяВыборка.ВидАналитики) КАК КоличествоАналитики
	|	ИЗ
	|		Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК КонтрольнаяВыборка
	|
	|	СГРУППИРОВАТЬ ПО
	|		КонтрольнаяВыборка.Ссылка) КАК КонтрольнаяВыборка
	|ПО Ссылки.Ссылка = КонтрольнаяВыборка.Ссылка И КонтрольнаяВыборка.КоличествоАналитики = &КоличествоАналитики
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли; 

	Если СоздаватьНовую Тогда
		
		СправочникОбъект = Справочники.ЗначенияСубконтоАналитика.СоздатьЭлемент();
		Для Каждого ПараЗначений Из ТаблицаАналитикиСтатьи Цикл
			СтрокаВидаИЗначения = СправочникОбъект.ВидыИЗначенияАналитики.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВидаИЗначения, ПараЗначений);
		КонецЦикла; 
		СправочникОбъект.ВидыИЗначенияАналитики.Сортировать("ВидАналитики");
		СправочникОбъект.Записать();
		Возврат СправочникОбъект.Ссылка;
		
	КонецЕсли; 
	
	Возврат Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
	
КонецФункции

// Очищает ссылки на аналитику. Используется, например, в момент отказа пользователя от аналитики
Функция ОчиститьЗначенияАналитикиВДокументахИОборотах(ВидАналитики) Экспорт

	// 1. Получаем все ссылки "ЗначенийСубконтоАналитика", В которых использован очищаемый вид аналитики
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидАналитики", ВидАналитики);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СсылкиНаЗначения.Ссылка КАК Ссылка,
	|	НаборыЗначений.ВидАналитики,
	|	НаборыЗначений.ЗначениеАналитики,
	|	НаборыЗначений.ВидАналитики КАК КоличествоВидовАналитики
	|ИЗ
	|	Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК СсылкиНаЗначения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК НаборыЗначений
	|		ПО СсылкиНаЗначения.Ссылка = НаборыЗначений.Ссылка
	|			И (НаборыЗначений.ВидАналитики <> &ВидАналитики)
	|ГДЕ
	|	СсылкиНаЗначения.ВидАналитики = &ВидАналитики
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоВидовАналитики)
	|ПО
	|	Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// 2. Готовим таблицу замен, в которой каждому набору с удаляемым видом аналитики подбирается набор без удаляемого вида аналитики
	ТаблицаЗамен = Новый ТаблицаЗначений;
	ТаблицаЗамен.Колонки.Добавить("УдаляемаяСсылка", Новый ОписаниеТипов("СправочникСсылка.ЗначенияСубконтоАналитика"));
	ТаблицаЗамен.Колонки.Добавить("НоваяСсылка");
	
	ТаблицаАналитики = НоваяТаблицаВидИЗначениеАналитики();
	
	ВыборкаСсылок = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	Пока ВыборкаСсылок.Следующий() Цикл
		СтрокаЗамены = ТаблицаЗамен.Добавить();
		СтрокаЗамены.УдаляемаяСсылка = ВыборкаСсылок.Ссылка;
		Если ВыборкаСсылок.КоличествоВидовАналитики = 0 Тогда
			СтрокаЗамены.НоваяСсылка = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
		Иначе
			
			ТаблицаАналитики.Очистить();
			ВыборкаЗначений = ВыборкаСсылок.Выбрать();
			Пока ВыборкаЗначений.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаЗначений.ВидАналитики) И ЗначениеЗаполнено(ВыборкаЗначений.ЗначениеАналитики) Тогда
					СтрокаАналитики = ТаблицаАналитики.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаАналитики, ВыборкаЗначений);
				КонецЕсли;
			КонецЦикла;
			
			Если ТаблицаАналитики.Количество() = 0 Тогда
				СтрокаЗамены.НоваяСсылка = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
			Иначе
				СтрокаЗамены.НоваяСсылка = ПолучитьСсылкуНаНаборЗначенийАналитик(ТаблицаАналитики, Истина);
			КонецЕсли;
			
		КонецЕсли;
		 
	КонецЦикла;
	
	// 3. Ищем использование заменяемых ссылок:
	МассивУдаляемыхСсылок = ТаблицаЗамен.ВыгрузитьКолонку("УдаляемаяСсылка");
	ТаблицаСсылок = НайтиПоСсылкам(МассивУдаляемыхСсылок);
	НачатьТранзакцию();
	Попытка
	
		Для каждого СтрокаДанных Из ТаблицаСсылок Цикл
			СтрокаЗамены = ТаблицаЗамен.Найти(СтрокаДанных.Ссылка, "УдаляемаяСсылка");
			ЗаменитьСсылкиВОбъекте(СтрокаДанных.Ссылка, СтрокаЗамены.НоваяСсылка, СтрокаДанных.Данные, СтрокаДанных.Метаданные);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();
	КонецПопытки; 
	
	Возврат Истина;

КонецФункции

// Проверяет, установлен ли признак актуальности хотябы для одной дополнительной аналитки
//	Результат проверки записывает в константу "ИспользоватьАналитикуСтатей"
Процедура ПроверитьОбновитьИспользованиеАналитики() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыАналитик.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|ГДЕ
	|	(ВидыАналитик.АктуальнаДляРасхода
	|	ИЛИ ВидыАналитик.АктуальнаДляДохода)
	|	И НЕ ВидыАналитик.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	АналитикаИспользуется = НЕ РезультатЗапроса.Пустой();
	
	Если АналитикаИспользуется <> ПолучитьФункциональнуюОпцию("ИспользоватьАналитикуСтатей") Тогда
		Константы.ИспользоватьАналитикуСтатей.Установить(АналитикаИспользуется);
	КонецЕсли; 

КонецПроцедуры

// Снимает признак актуальности у всех видов аналитки
Процедура ВыключитьАктуальностьАналитик() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыАналитик.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|ГДЕ
	|	(ВидыАналитик.АктуальнаДляРасхода
	|	ИЛИ ВидыАналитик.АктуальнаДляДохода)
	|	И НЕ ВидыАналитик.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.АктуальнаДляДохода  = Ложь;
		Объект.АктуальнаДляРасхода = Ложь;
		Объект.ДополнительныеСвойства.Вставить("НеПроверятьСостояние", Истина);
		Объект.Записать();
	
	КонецЦикла; 
	
	Константы.ИспользоватьАналитикуСтатей.Установить(Ложь);

КонецПроцедуры

// Находит (а в случае остутствия - создает) и возвращает набор аналитики, заполненный значениями по умолчанию для 
//указанных статей в указанном виде документа
//	ВНИМАНИЕ! Статьи должны иметь одинаковый тип значения!
//
//Параметры:
//	Статьи	- одна статья, или массив или список значений статей расхода или дохода, для которых нужно найти значения по умолчанию
//	ВидДокумента	- строка - Имя метаданных документа, в котором требуется заполнить аналитику значениями по умолчанию
//	АналитикаШапкиДокумента	- ТаблицаЗначений с колонками "ВидАналитики" и "ЗначениеАналитики" - общая для документа аналитика. 
//						Если заполнена, то умолчания 
//
//Возвращаемое значение:
//	Соответствие - ключами соответствия являются статьи, значениями - СправочникСсылка.ЗначенияСубконтоАналитика 
//				- "пакет аналитики", заполненный значениями по умолчани, или пустые ссылки, если таких значений не найдено
//
Функция ЗначенияПоУмолчаниюДляВидаДокумента(Статьи, ВидДокумента, АналитикаШапкиДокумента = Неопределено) Экспорт

	// Проверяем параметры и настройки
	Если Метаданные.Документы.Найти(ВидДокумента) = Неопределено Тогда
		ВызватьИсключение "Для определения значений аналитики по умолсанию указан неверный вид документа!";
	КонецЕсли;
	
	Результат = Новый Соответствие;
	ИспользоватьАналитику = ПолучитьФункциональнуюОпцию("ИспользоватьАналитикуСтатей");
	
	КоллекцияСтатей = Неопределено;
	ТипЗначенияСтатьи = ТипЗнч(Статьи);
	Если ТипЗначенияСтатьи = Тип("Массив") Или ТипЗначенияСтатьи = Тип("СписокЗначений") Тогда
		КоллекцияСтатей = Статьи;
		ЭтоДоход = ТипЗнч(КоллекцияСтатей[0]) = Тип("СправочникСсылка.СтатьиДоходов");
	ИначеЕсли ТипЗначенияСтатьи = Тип("СписокЗначений") Тогда
		КоллекцияСтатей = Статьи;
		ЭтоДоход = ТипЗнч(КоллекцияСтатей[0].Значение) = Тип("СправочникСсылка.СтатьиДоходов");
	Иначе
		КоллекцияСтатей = Новый Массив;
		КоллекцияСтатей.Добавить(Статьи);
		ЭтоДоход = ТипЗначенияСтатьи = Тип("СправочникСсылка.СтатьиДоходов");
	КонецЕсли;
	
	Если КоллекцияСтатей.Количество() = 0 Или Не ИспользоватьАналитику Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
	Запрос.УстановитьПараметр("КоллекцияСтатей", КоллекцияСтатей);
	Запрос.УстановитьПараметр("ПолучатьУмолчанияШапки", АналитикаШапкиДокумента = Неопределено);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиДоходов.Ссылка КАК Статья
	|ПОМЕСТИТЬ СтатьиДокумента
	|ИЗ
	|	Справочник.СтатьиДоходов КАК СтатьиДоходов
	|ГДЕ
	|	СтатьиДоходов.Ссылка В(&КоллекцияСтатей)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подзапрос.Статья КАК Статья,
	|	Подзапрос.ВидАналитики КАК ВидАналитики,
	|	МАКСИМУМ(Подзапрос.ВидАналитики.РасширенныеНастройкиДляДохода) КАК РасширенныеНастройки,
	|	МАКСИМУМ(Подзапрос.ЗначениеПоУмолчаниюДляАналитики) КАК ЗначениеПоУмолчаниюДляАналитики,
	|	МАКСИМУМ(Подзапрос.ЗначениеПоУмолчаниюДляСтатьи) КАК ЗначениеПоУмолчаниюДляСтатьи
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтатьиДокумента.Статья КАК Статья,
	|		АналитикаДокумента.ВидАналитики КАК ВидАналитики,
	|		АналитикаДокумента.ВидАналитики.ЗначениеАналитикиДохода КАК ЗначениеПоУмолчаниюДляАналитики,
	|		НЕОПРЕДЕЛЕНО КАК ЗначениеПоУмолчаниюДляСтатьи
	|	ИЗ
	|		СтатьиДокумента КАК СтатьиДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАналитикиВДокументахПоУмолчанию КАК АналитикаДокумента
	|			ПО (АналитикаДокумента.ВидДокумента = &ВидДокумента)
	|				И (АналитикаДокумента.ВидАналитики.АктуальнаДляДохода)
	|				И (НЕ АналитикаДокумента.ВидАналитики.ПометкаУдаления)
	|	ГДЕ
	|		&ПолучатьУмолчанияШапки
	|		И АналитикаДокумента.ВидДокумента = &ВидДокумента
	|		И АналитикаДокумента.ВидАналитики.АктуальнаДляДохода
	|		И НЕ АналитикаДокумента.ВидАналитики.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтатьиДокумента.Статья,
	|		НастройкиАналитикиПоСтатьям.ВидАналитики,
	|		НЕОПРЕДЕЛЕНО,
	|		ВЫБОР
	|			КОГДА НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию = НЕОПРЕДЕЛЕНО
	|				ТОГДА НастройкиАналитикиПоСтатьям.ВидАналитики.ЗначениеАналитикиДохода
	|			ИНАЧЕ НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию
	|		КОНЕЦ
	|	ИЗ
	|		СтатьиДокумента КАК СтатьиДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|			ПО СтатьиДокумента.Статья = НастройкиАналитикиПоСтатьям.Статья
	|				И (НастройкиАналитикиПоСтатьям.Использовать)
	|				И (НастройкиАналитикиПоСтатьям.ВидАналитики.АктуальнаДляДохода)
	|				И (НЕ НастройкиАналитикиПоСтатьям.ВидАналитики.ПометкаУдаления)) КАК Подзапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	Подзапрос.Статья,
	|	Подзапрос.ВидАналитики
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статья,
	|	ВидАналитики
	|ИТОГИ ПО
	|	Статья";
	
	Если Не ЭтоДоход Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Дохода", "Расхода");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СтатьиДоходов", "СтатьиРасходов");
	КонецЕсли;
	
	ТаблицаАналитики = НоваяТаблицаВидИЗначениеАналитики();
	ВыборкаСтатей = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Статья");
	Пока ВыборкаСтатей.Следующий() Цикл
		
		Если АналитикаШапкиДокумента = Неопределено Тогда
			ТаблицаАналитики.Очистить();
		Иначе
			ТаблицаАналитики = АналитикаШапкиДокумента.Скопировать();
		КонецЕсли;
		ВыборкаАналитик = ВыборкаСтатей.Выбрать();
		Пока ВыборкаАналитик.Следующий() Цикл
			
			ЗначениеПоУмолчанию = ?(ЗначениеЗаполнено(ВыборкаАналитик.ЗначениеПоУмолчаниюДляСтатьи),
									ВыборкаАналитик.ЗначениеПоУмолчаниюДляСтатьи, ВыборкаАналитик.ЗначениеПоУмолчаниюДляАналитики);
			Если ЗначениеЗаполнено(ЗначениеПоУмолчанию) Или ВыборкаАналитик.РасширенныеНастройки = Ложь Тогда
				СтрокаАналитики = ТаблицаАналитики.Добавить();
				СтрокаАналитики.ВидАналитики      = ВыборкаАналитик.ВидАналитики;
				СтрокаАналитики.ЗначениеАналитики = ЗначениеПоУмолчанию;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ТаблицаАналитики.Количество() > 0 Тогда
			Результат.Вставить(ВыборкаСтатей.Статья, ПолучитьСсылкуНаНаборЗначенийАналитик(ТаблицаАналитики, Истина));
		Иначе
			Результат.Вставить(ВыборкаСтатей.Статья, Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка());
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат; 

КонецФункции

// Заполняет шапку документа и его статьи значениями аналитики по умолчанию. 
// Используется для заполнения аналитики в документах, полученных из мобильного приложения.
// При заполнении аналитики анализируется шаблон, по которому создан документ, а так же настройки аналитики
// для вида документа и для каждой статьи, использованной в документе
//
//Параметры:
//	ДокументОбъект	- документ, в котором нужно заплнить аналитику
//
Процедура ЗаполнитьАналитикуДокументаЗначениямиПоУмолчанию(ДокументОбъект) Экспорт
	
	Если ДокументОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	МодульДокумента = Документы[МетаданныеДокумента.Имя];
	
	// Заполняем дополнительные свойства объекта
	МодульДокумента.ПроверитьДополнительныеСвойстваОперации(ДокументОбъект, ДокументОбъект.ДополнительныеСвойства, Ложь);
	
	// Проверка корректности заполнения свойств докумета
	Если Не ДокументОбъект.ДополнительныеСвойства.Свойство("ЭтоПлановаяОперация") Тогда
		
		// Регистрация предупреждения в журнале
		ЗаписьЖурналаРегистрации("Аналитика.УстановкаЗначенийПоУмолчанию", 
						УровеньЖурналаРегистрации.Предупреждение, МетаданныеДокумента, ДокументОбъект, 
						"После проверки дополнительных свойств не найден признак ""ЭтоПлановаяОперация""");
		Возврат;
		
	КонецЕсли;
	
	// Параметры, необходимые для заполнения аналитики
	ЭтоПлановаяОперация  = ДокументОбъект.ДополнительныеСвойства.ЭтоПлановаяОперация;
	ШаблонОперации       = ДокументОбъект.ДополнительныеСвойства.ШаблонОперации;
	БратьСтатьиИзШаблона = ЭтоПлановаяОперация И ШаблонОперации <> ДокументОбъект.Ссылка;
	
	АналитикаШапки = Новый Массив;
	Если БратьСтатьиИзШаблона Тогда
		// Заполняем аналитику шапки документа значениями из шапки шаблона
		ДокументОбъект.АналитикаДокумента.Загрузить(ШаблонОперации.АналитикаДокумента.Выгрузить());
		АналитикаШапки = ШаблонОперации.АналитикаДокумента.Выгрузить(Новый Структура("РедактироватьВШапке", Истина), "ВидАналитики,ЗначениеАналитикиВШапке");
		АналитикаШапки.Колонки.ЗначениеАналитикиВШапке.Имя = "ЗначениеАналитики";
	КонецЕсли;
	
	// Получаем список статей, для которых требуется заполнить значения аналитик
	СтатьиДохода           = Новый Массив;
	СтатьиРасхода          = Новый Массив;
	АналитикаШапкиДохода   = Неопределено;
	АналитикаШапкиРасхода  = Неопределено;
	
	Если МетаданныеДокумента.Имя = "Доход" Тогда
		
		Если БратьСтатьиИзШаблона Тогда
			
			Если АналитикаШапки.Количество() > 0 Тогда
				АналитикаШапкиДохода = АналитикаШапки;
			КонецЕсли;
			
			Для каждого СтрокаДокумента Из ДокументОбъект.Доходы Цикл
				
				СтрокаШаблона = ШаблонОперации.Доходы.Найти(СтрокаДокумента.СтатьяДохода, "СтатьяДохода");
				Если СтрокаШаблона = Неопределено Тогда
					СтатьиДохода.Добавить(СтрокаДокумента.СтатьяДохода);
				Иначе
					СтрокаДокумента.АналитикаСтатьи = СтрокаШаблона.АналитикаСтатьи;
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			СтатьиДохода = ДокументОбъект.Доходы.ВыгрузитьКолонку("СтатьяДохода");
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокумента.Имя = "Расход" Тогда
		
		Если БратьСтатьиИзШаблона И АналитикаШапки.Количество() > 0 Тогда
			АналитикаШапкиРасхода = АналитикаШапки;
		КонецЕсли;
		
		Для каждого СтрокаДокумента Из ДокументОбъект.Расходы Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаДокумента.СтатьяРасходаИмущество) 
				Или ТипЗнч(СтрокаДокумента.СтатьяРасходаИмущество) <> Тип("СправочникСсылка.СтатьиРасходов") Тогда
				Продолжить;
			КонецЕсли;
			
			Если БратьСтатьиИзШаблона Тогда
				СтрокаШаблона = ШаблонОперации.Расходы.Найти(СтрокаДокумента.СтатьяРасходаИмущество, "СтатьяРасходаИмущество");
				Если СтрокаШаблона = Неопределено Тогда
					СтатьиРасхода.Добавить(СтрокаДокумента.СтатьяРасходаИмущество);
				Иначе
					СтрокаДокумента.АналитикаСтатьи = СтрокаШаблона.АналитикаСтатьи;
				КонецЕсли;
			Иначе
				СтатьиРасхода.Добавить(СтрокаДокумента.СтатьяРасходаИмущество);
			КонецЕсли;
			
		КонецЦикла;
		 
		
	ИначеЕсли МетаданныеДокумента.Имя = "УниверсальнаяОперация" Тогда
		
		Если БратьСтатьиИзШаблона Тогда
			
			Если ДокументОбъект.Доходы.Количество() > 0 Тогда
				
				АналитикаШапкиДохода = НоваяТаблицаВидИЗначениеАналитики();
				Для каждого СтрокаАналитики Из АналитикаШапки Цикл
					
					Если СтрокаАналитики.ИспользоватьДляДохода Тогда
						СтрокаАналитикиШапки = АналитикаШапкиДохода.Добавить();
						СтрокаАналитикиШапки.ВидАналитики = СтрокаАналитики.ВидАналитики;
						СтрокаАналитикиШапки.ЗначениеАналитики = СтрокаАналитики.ЗначениеАналитикиВШапке;
					КонецЕсли;
					
				КонецЦикла;
				
				Для каждого СтрокаДокумента Из ДокументОбъект.Доходы Цикл
					
					СтрокаШаблона = ШаблонОперации.Доходы.Найти(СтрокаДокумента.СтатьяДохода, "СтатьяДохода");
					Если СтрокаШаблона = Неопределено Тогда
						СтатьиДохода.Добавить(СтрокаДокумента.СтатьяДохода);
					Иначе
						СтрокаДокумента.АналитикаСтатьиДохода = СтрокаШаблона.АналитикаСтатьиДохода;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			
			Если ДокументОбъект.Расходы.Количество() > 0 Тогда
				
				АналитикаШапкиРасхода = НоваяТаблицаВидИЗначениеАналитики();
				Для каждого СтрокаАналитики Из АналитикаШапки Цикл
					
					Если СтрокаАналитики.ИспользоватьДляРасхода Тогда
						СтрокаАналитикиШапки = АналитикаШапкиРасхода.Добавить();
						СтрокаАналитикиШапки.ВидАналитики = СтрокаАналитики.ВидАналитики;
						СтрокаАналитикиШапки.ЗначениеАналитики = СтрокаАналитики.ЗначениеАналитикиВШапке;
					КонецЕсли;
					
				КонецЦикла;
				
				Для каждого СтрокаДокумента Из ДокументОбъект.Расходы Цикл
					
					СтрокаШаблона = ШаблонОперации.Расходы.Найти(СтрокаДокумента.СтатьяРасхода, "СтатьяРасхода");
					Если СтрокаШаблона = Неопределено Тогда
						СтатьиРасхода.Добавить(СтрокаДокумента.СтатьяРасхода);
					Иначе
						СтрокаДокумента.АналитикаСтатьиРасхода = СтрокаШаблона.АналитикаСтатьиРасхода;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			 
		Иначе
			СтатьиДохода = ДокументОбъект.Доходы.ВыгрузитьКолонку("СтатьяДохода");
			СтатьиРасхода = ДокументОбъект.Расходы.ВыгрузитьКолонку("СтатьяРасхода");
		КонецЕсли;
		
	Иначе
		
		Если ДокументОбъект.ДополнительныеРасходы.Количество() > 0 Тогда
			
			Если БратьСтатьиИзШаблона Тогда
				
				Если ДокументОбъект.АналитикаДокумента.Количество() > 0 Тогда
					АналитикаШапкиРасхода = ДокументОбъект.АналитикаДокумента.ВыгрузитьКолонки("ВидАналитики,ЗначениеАналитикиВШапке");
					АналитикаШапкиРасхода.Колонки.ЗначениеАналитикиВШапке.Имя = "ЗначениеАналитики";
				КонецЕсли;
				
				Для каждого СтрокаДокумента Из ДокументОбъект.ДополнительныеРасходы Цикл
					
					СтрокаШаблона = ШаблонОперации.Расходы.Найти(СтрокаДокумента.СтатьяРасхода, "СтатьяРасхода");
					Если СтрокаШаблона = Неопределено Тогда
						СтатьиРасхода.Добавить(СтрокаДокумента.СтатьяРасхода);
					Иначе
						СтрокаДокумента.АналитикаСтатьи = СтрокаШаблона.АналитикаСтатьи;
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				СтатьиРасхода = ДокументОбъект.ДополнительныеРасходы.ВыгрузитьКолонку("СтатьяРасхода");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Получаем значения аналитики по умолчанию
	Если СтатьиДохода.Количество() > 0 Тогда
		АналитикаДоходов = ЗначенияПоУмолчаниюДляВидаДокумента(СтатьиДохода, МетаданныеДокумента.Имя, АналитикаШапкиДохода);
	КонецЕсли;
	Если СтатьиРасхода.Количество() > 0 Тогда
		АналитикаРасходов = ЗначенияПоУмолчаниюДляВидаДокумента(СтатьиРасхода, МетаданныеДокумента.Имя, АналитикаШапкиРасхода);
	КонецЕсли;
	
	// Добавляем полученную аналитику в статьи документа
	Если МетаданныеДокумента.Имя = "Доход" И СтатьиДохода.Количество() > 0 Тогда
		
		Для каждого СтрокаДокумента Из ДокументОбъект.Доходы Цикл
			Если АналитикаДоходов[СтрокаДокумента.СтатьяДохода] <> Неопределено Тогда
				СтрокаДокумента.АналитикаСтатьи = АналитикаДоходов[СтрокаДокумента.СтатьяДохода];
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли МетаданныеДокумента.Имя = "Расход" И СтатьиРасхода.Количество() > 0 Тогда
		
		Для каждого СтрокаДокумента Из ДокументОбъект.Расходы Цикл
			Если АналитикаРасходов[СтрокаДокумента.СтатьяРасходаИмущество] <> Неопределено Тогда
				СтрокаДокумента.АналитикаСтатьи = АналитикаРасходов[СтрокаДокумента.СтатьяРасходаИмущество];
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли МетаданныеДокумента.Имя = "УниверсальнаяОперация" Тогда
		
		Если СтатьиДохода.Количество() > 0 Тогда
			
			Для каждого СтрокаДокумента Из ДокументОбъект.Доходы Цикл
				Если АналитикаДоходов[СтрокаДокумента.СтатьяДохода] <> Неопределено Тогда
					СтрокаДокумента.АналитикаСтатьиДохода = АналитикаДоходов[СтрокаДокумента.СтатьяДохода];
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтатьиРасхода.Количество() > 0 Тогда
			
			Для каждого СтрокаДокумента Из ДокументОбъект.Расходы Цикл
				Если АналитикаРасходов[СтрокаДокумента.СтатьяРасхода] <> Неопределено Тогда
					СтрокаДокумента.АналитикаСтатьиРасхода = АналитикаРасходов[СтрокаДокумента.СтатьяРасхода];
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли СтатьиРасхода.Количество() > 0 Тогда
		
		Для каждого СтрокаДокумента Из ДокументОбъект.ДополнительныеРасходы Цикл
			Если АналитикаРасходов[СтрокаДокумента.СтатьяРасхода] <> Неопределено Тогда
				СтрокаДокумента.АналитикаСтатьи = АналитикаРасходов[СтрокаДокумента.СтатьяРасхода];
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет значения общей аналитики документа в значениях аналитики шапки
// Используется для поверки аналитики в документах, измененных в мобильном приложении
//
//Параметры:
//	ДокументОбъект	- документ, в котором нужно заплнить аналитику
//
Процедура ПроверитьАналитикуШапкиВСтроках(ДокументОбъект) Экспорт
	
	ТаблицаИзШапки = НоваяТаблицаВидИЗначениеАналитики();
	
	МдДокумента = ДокументОбъект.Метаданные();
	Если МдДокумента = Метаданные.Документы.ВводИзменениеОстатка 
		Или МдДокумента = Метаданные.Документы.УниверсальнаяОперация Тогда
		Возврат;
		
	Иначе
		
		ВидИЗначениеАналитики = ТаблицаОбщейАналитикиДокумента(ДокументОбъект.АналитикаДокумента.НайтиСтроки(Новый Структура("РедактироватьВШапке", Истина)));
		Если Не ЗначениеЗаполнено(ВидИЗначениеАналитики) Тогда
			Возврат;
		КонецЕсли;
		
		СсылкаАналитики = ПолучитьСсылкуНаНаборЗначенийАналитик(ВидИЗначениеАналитики, Истина);
		ПустаяАналитика = Справочники.ЗначенияСубконтоАналитика.ПустаяСсылка();
		Если МдДокумента = Метаданные.Документы.Доход Тогда
			ТаблицаДокумента = ДокументОбъект.Доходы.НайтиСтроки(Новый Структура("АналитикаСтатьи", ПустаяАналитика));
		ИначеЕсли МдДокумента = Метаданные.Документы.Расход Тогда
			ТаблицаДокумента = ДокументОбъект.Расходы.НайтиСтроки(Новый Структура("АналитикаСтатьи", ПустаяАналитика));
		Иначе
			ТаблицаДокумента = ДокументОбъект.ДополнительныеРасходы.НайтиСтроки(Новый Структура("АналитикаСтатьи", ПустаяАналитика));
		КонецЕсли;
		
		Для каждого Строка Из ТаблицаДокумента Цикл
			Строка.АналитикаСтатьи = СсылкаАналитики;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуРеквизитовАналитикиДокумента(МетаданныеДокумента, ИмяРеквизитаСтатьиДоходов, ИменаСубконтоДоходов, ИмяРеквизитаСтатьиРасходов, ИменаСубконтоРасходов) 

	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("ИмяТабличнойЧасти",            Новый ОписаниеТипов("Строка"));
	ТаблицаРеквизитов.Колонки.Добавить("ИмяРеквизитаСтатьи",           Новый ОписаниеТипов("Строка"));
	ТаблицаРеквизитов.Колонки.Добавить("ИмяРеквизитаПакетаАналитики",  Новый ОписаниеТипов("Строка"));
	ТаблицаРеквизитов.Колонки.Добавить("ЭтоДоход",                     Новый ОписаниеТипов("Булево"));
	ТаблицаРеквизитов.Колонки.Добавить("ЭтоРасход",                    Новый ОписаниеТипов("Булево"));
	
	ИменаРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаСубконтоДоходов);
	Для каждого ИмяРеквизита Из ИменаРеквизитов Цикл
		Для каждого ТабЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл
			Если ТабЧасть.Реквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
				СтрокаТаблицы = ТаблицаРеквизитов.Добавить();
				СтрокаТаблицы.ИмяТабличнойЧасти            = ТабЧасть.Имя;
				СтрокаТаблицы.ИмяРеквизитаСтатьи           = ИмяРеквизитаСтатьиДоходов;
				СтрокаТаблицы.ИмяРеквизитаПакетаАналитики  = ИмяРеквизита;
				СтрокаТаблицы.ЭтоДоход                     = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	 
	ИменаРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаСубконтоРасходов);
	Для каждого ИмяРеквизита Из ИменаРеквизитов Цикл
		Для каждого ТабЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл
			Если ТабЧасть.Реквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
				СтрокаТаблицы = ТаблицаРеквизитов.Добавить();
				СтрокаТаблицы.ИмяТабличнойЧасти            = ТабЧасть.Имя;
				СтрокаТаблицы.ИмяРеквизитаСтатьи           = ИмяРеквизитаСтатьиРасходов;
				СтрокаТаблицы.ИмяРеквизитаПакетаАналитики  = ИмяРеквизита;
				СтрокаТаблицы.ЭтоРасход                    = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаРеквизитов;

КонецФункции

#Если Не ВнешнееСоединение Тогда

Процедура ДобавитьВФормуРеквизитПоТаблицеЗначений(Форма, Таблица, ИмяРеквизита, ДобавляемыеРеквизиты) 
	
	Реквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТаблицаЗначений"), , , Ложь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Для каждого Колонка Из Таблица.Колонки Цикл
		РеквизитКолонка = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяРеквизита, , Ложь);
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли

// В условном оформлении формы должны присутствовать элементы с представлениями:
//		ОформлениеАналитики_ИДАналитики_Видимость
//		ОформлениеАналитики_ИДАналитики_НедоступнаяЯчейка
// Обязательно должно быть заполнено только Оформление.
// Использование элементов должно быть выключено.
//
Процедура ДобавитьУсловноеОформлениеДляАналитикиПоШаблонам(Форма, ЭтоРасход, ИДАналитики, ИмяРеквизитаВТаблице, ИмяЭлементаОформляемойКолонки)
	
	////////////////////////////////////////////////////////////////////////////////
	// "ОформлениеАналитики_ИДАналитики_Видимость"
	//
	НовыйЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	НовыйЭлементУО.Использование = Истина;
	НовыйЭлементУО.Представление = СтрЗаменить("ОформлениеАналитики_ИДАналитики_Видимость", "_ИДАналитики", "_" + ИДАналитики);
	
	// Отбор
	НовыйЭлемент = НовыйЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИДАналитики + "_ВидимостьКолонки" + ?(ЭтоРасход, "ВРасходах", "ВДоходах"));
	НовыйЭлемент.ПравоеЗначение = Ложь;
	
	// Оформляемые элементы
	НовыйЭлемент = НовыйЭлементУО.Поля.Элементы.Добавить();
	НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлементаОформляемойКолонки);
	
	// Оформление
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("Видимость");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = Ложь;
	
	////////////////////////////////////////////////////////////////////////////////
	// "ОформлениеАналитики_ИДАналитики_НедоступнаяЯчейка"
	//
	НовыйЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	НовыйЭлементУО.Использование = Истина;
	НовыйЭлементУО.Представление = СтрЗаменить("ОформлениеАналитики_ИДАналитики_НедоступнаяЯчейка", "_ИДАналитики", "_" + ИДАналитики);
	
	// Отбор
	НовыйЭлемент = НовыйЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяРеквизитаВТаблице + "_Использовать");
	НовыйЭлемент.ПравоеЗначение = 0;
	
	НовыйЭлемент = НовыйЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяРеквизитаВТаблице + "_Заполнено");
	НовыйЭлемент.ПравоеЗначение = 0;
	
	// Оформляемые элементы
	НовыйЭлемент = НовыйЭлементУО.Поля.Элементы.Добавить();
	НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлементаОформляемойКолонки);
	
	// Оформление
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("ЦветФона");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = ЦветаСтиля.ФонЗапрещеннойЯчейкиЦвет;
	
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("ЦветТекста");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("ГоризонтальноеПоложение");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = ГоризонтальноеПоложение.Лево;
	
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("ОтметкаНезаполненного");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = Ложь;
	
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("Текст");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = "-";
	
	НовыйЭлемент = НовыйЭлементУО.Оформление.Элементы.Найти("ТолькоПросмотр");
	НовыйЭлемент.Использование = Истина;
	НовыйЭлемент.Значение = Истина;
	
	
	//// Создадим новые элементы оформления по шаблонам
	//Для каждого ШаблонОформления Из ШаблоныОформления Цикл
	//	
	//	//Если НЕ ШаблонОформления.Использование Тогда
	//	//	Продолжить;
	//	//КонецЕсли;
	//	
	//	ЭтоШаблонВидимость         = ШаблонОформления.Представление = "ОформлениеАналитики_ИДАналитики_Видимость";
	//	ЭтоШаблонНедоступнаяЯчейка = ШаблонОформления.Представление = "ОформлениеАналитики_ИДАналитики_НедоступнаяЯчейка";
	//	
	//	НовыйЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	//	ЗаполнитьЗначенияСвойств(НовыйЭлементУО, ШаблонОформления);
	//	НовыйЭлементУО.Представление = СтрЗаменить(НовыйЭлементУО.Представление, "_ИДАналитики", "_" + ИДАналитики);
	//	НовыйЭлементУО.Использование = Истина;
	//	
	//	// Отбор
	//	Если ЭтоШаблонВидимость Тогда
	//		НовыйЭлемент = НовыйЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//		НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИДАналитики + "_ВидимостьКолонки");
	//		НовыйЭлемент.ПравоеЗначение = Ложь;
	//		
	//	ИначеЕсли ЭтоШаблонНедоступнаяЯчейка Тогда
	//		НовыйЭлемент = НовыйЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//		НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяРеквизитаВТаблице + "_Использовать");
	//		НовыйЭлемент.ПравоеЗначение = 0;
	//		
	//		НовыйЭлемент = НовыйЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//		НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяРеквизитаВТаблице + "_Заполнено");
	//		НовыйЭлемент.ПравоеЗначение = 0;
	//		
	//	КонецЕсли;
	//	
	//	// Оформление
	//	Для каждого Элемент Из ШаблонОформления.Оформление.Элементы Цикл
	//		Если Элемент.Использование Тогда
	//			НовыйЭлемент = НовыйЭлементУО.Оформление.ПолучитьОбъектПоИдентификатору(ШаблонОформления.Оформление.ПолучитьИдентификаторПоОбъекту(Элемент));
	//			ЗаполнитьЗначенияСвойств(НовыйЭлемент, Элемент);
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	// Оформляемые элементы
	//	НовыйЭлемент = НовыйЭлементУО.Поля.Элементы.Добавить();
	//	НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлементаОформляемойКолонки);
	//	
	//КонецЦикла;
	
КонецПроцедуры

// Возвращает таблицу значений, содержащей виды аналитики и их значения по умолчанию, актуальные для 
//	конкретного документа: все виды аналитики, что активны у пользователя на текущий момент, плюс виды аналитики, 
//	сохраненные в документе ранее
Функция ПолучитьАктуальныйНаборАналитики(Форма, РеквизитыДокумента) 
	
	МетаданныеДокумента = Форма.Объект.Ссылка.Метаданные();
	ЕстьОбщаяАналитикаДокумента = МетаданныеДокумента.ТабличныеЧасти.Найти("АналитикаДокумента") <> Неопределено;
	ЕстьДоход   = РеквизитыДокумента.НайтиСтроки(Новый Структура("ЭтоДоход", Истина)).Количество() > 0;
	ЕстьРасход  = РеквизитыДокумента.НайтиСтроки(Новый Структура("ЭтоРасход", Истина)).Количество() > 0;
	ИспользоватьАналитикуВНовыхОперациях = ПолучитьФункциональнуюОпцию("ИспользоватьАналитикуСтатей");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИспользоватьДляДоходов",  ЕстьДоход);
	Запрос.УстановитьПараметр("ИспользоватьДляРасходов", ЕстьРасход);
	Запрос.УстановитьПараметр("ИмяВидаДокумента",  МетаданныеДокумента.Имя);
	
	// Собираем в таблицу все наборы значений аналитики, сохраненные в документе:
	ПакетыАналитики = Новый ТаблицаЗначений;
	ПакетыАналитики.Колонки.Добавить("ПакетАналитики",                Новый ОписаниеТипов("СправочникСсылка.ЗначенияСубконтоАналитика"));
	ПакетыАналитики.Колонки.Добавить("ИспользоватьДляДохода",         Новый ОписаниеТипов("Булево"));
	ПакетыАналитики.Колонки.Добавить("ИспользоватьДляРасхода",        Новый ОписаниеТипов("Булево"));
	ПакетыАналитики.Колонки.Добавить("РедактироватьВШапке",           Новый ОписаниеТипов("Булево"));
	
	Для каждого ТабличнаяЧасть Из РеквизитыДокумента Цикл
		// Значение реквизита табличной части
		Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
			Если ЗначениеЗаполнено(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики]) Тогда
				СтрокаАналитики = ПакетыАналитики.Добавить();
				СтрокаАналитики.ПакетАналитики = СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаПакетаАналитики];
				СтрокаАналитики.ИспользоватьДляДохода   = ТабличнаяЧасть.ЭтоДоход;
				СтрокаАналитики.ИспользоватьДляРасхода  = ТабличнаяЧасть.ЭтоРасход;
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
	
	ПакетыАналитики.Свернуть("ПакетАналитики", "ИспользоватьДляДохода, ИспользоватьДляРасхода, РедактироватьВШапке");
	Запрос.УстановитьПараметр("ПакетыАналитики", ПакетыАналитики);
	Запрос.УстановитьПараметр("ПрименятьНастройкиАналитики", ПакетыАналитики.Количество() = 0 И Форма.Объект.Ссылка.Пустая() И ИспользоватьАналитикуВНовыхОперациях);
	
	Если ЕстьОбщаяАналитикаДокумента Тогда
		ЕстьРеквизитИспользоватьДляДохода  = МетаданныеДокумента.ТабличныеЧасти.АналитикаДокумента.Реквизиты.Найти("ИспользоватьДляДохода") <> Неопределено;
		ЕстьРеквизитИспользоватьДляРасхода = МетаданныеДокумента.ТабличныеЧасти.АналитикаДокумента.Реквизиты.Найти("ИспользоватьДляРасхода") <> Неопределено;
		
		ОбщаяАналитикаДокумента = Форма.Объект.АналитикаДокумента.Выгрузить();
		
		// Если отсутствуют реквизиты ИспользоватьДляДохода, ИспользоватьДляРасхода, значит в документе есть или только доход, или только расход.
		Если НЕ ЕстьРеквизитИспользоватьДляДохода Тогда
			ОбщаяАналитикаДокумента.Колонки.Добавить("ИспользоватьДляДохода", Новый ОписаниеТипов("Булево"));
			ОбщаяАналитикаДокумента.ЗаполнитьЗначения(ЕстьДоход, "ИспользоватьДляДохода");
		КонецЕсли;
		Если НЕ ЕстьРеквизитИспользоватьДляРасхода Тогда
			ОбщаяАналитикаДокумента.Колонки.Добавить("ИспользоватьДляРасхода", Новый ОписаниеТипов("Булево"));
			ОбщаяАналитикаДокумента.ЗаполнитьЗначения(ЕстьРасход, "ИспользоватьДляРасхода");
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ОбщаяАналитикаДокумента", ОбщаяАналитикаДокумента);
		
	Иначе
		ПустаяТаблица = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыАналитик");
		Запрос.УстановитьПараметр("ОбщаяАналитикаДокумента", ПустаяТаблица);
		
	КонецЕсли;
	
	// Добавляем активные аналитики из других источников
	//
	// Поля ИспользоватьДляДохода, ИспользоватьДляРасхода объединяются по ИЛИ из источников:
	//	ПВХ                   - ПланВидовХарактеристик.ВидыАналитик (Истина, если РасширенныеНастройки)
	//	РСв.Настройки         - Настройки аналитики по умолчанию (РегистрСведений.НастройкиАналитикиВДокументахПоУмолчанию)
	//	ТЧ.АналитикаДокумента - Настройки аналитики документа (ТабличнаяЧасть.АналитикаДокумента)
	//	ФактАналитика         - Фактически использованная аналитика
	//
	// Поле РедактироватьВШапке определяется по приоритетам, чтобы исключить потерю данных, т.к. при переносе аналитики в шапку теряются значения по строкам
	// Приоритет для нового документа:
	//		ПВХ - низший приоритет
	//		РСв.Настройки
	// Приоритет для сохраненного документа:
	//		ПВХ.ВидыАналитик - низший приоритет
	//		ТЧ.АналитикаДокумента (в старых документах не заполнена!)
	//		Ложь (если не заполнена ТЧ.АналитикаДокумента)
	//
	// Для нового документа:
	// ЗаполнятьДляДохода = (ПВХ.ЗаполнятьДляДохода ИЛИ РСв.Настройки.ЗаполнятьДляДохода)
	// ЗаполнятьДляДохода = (ПВХ.ЗаполнятьДляРасхода ИЛИ РСв.Настройки.ЗаполнятьДляРасхода)
	// РедактироватьВШапке = последнее заполненное значение из {ПВХ.РедактироватьВШапке, РСв.Настройки.РедактироватьВШапке}
	//
	// Для существующего документа:
	// ЗаполнятьДляДохода = (ПВХ.ЗаполнятьДляДохода ИЛИ ТЧ.АналитикаДокумента.ЗаполнятьДляДохода ИЛИ АналитикаФактическиЗаполненаДляДохода)
	// ЗаполнятьДляРасхода = (ПВХ.ЗаполнятьДляРасхода ИЛИ ТЧ.АналитикаДокумента.ЗаполнятьДляРасхода ИЛИ АналитикаФактическиЗаполненаДляРасхода)
	// РедактироватьВШапке = последнее заполненное значение из {ПВХ.РедактироватьВШапке, ТЧ.АналитикаДокумента.РедактироватьВШапке, Ложь}
	//
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбщаяАналитикаДокумента.ВидАналитики,
	|	ОбщаяАналитикаДокумента.РедактироватьВШапке,
	|	ОбщаяАналитикаДокумента.ЗначениеАналитикиВШапке,
	|	ОбщаяАналитикаДокумента.ИспользоватьДляДохода,
	|	ОбщаяАналитикаДокумента.ИспользоватьДляРасхода
	|ПОМЕСТИТЬ ОбщаяАналитикаДокумента
	|ИЗ
	|	&ОбщаяАналитикаДокумента КАК ОбщаяАналитикаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетыАналитики.ПакетАналитики,
	|	ПакетыАналитики.ИспользоватьДляДохода,
	|	ПакетыАналитики.ИспользоватьДляРасхода,
	|	ПакетыАналитики.РедактироватьВШапке
	|ПОМЕСТИТЬ ПакетыАналитикиДокумента
	|ИЗ
	|	&ПакетыАналитики КАК ПакетыАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктуальнаяАналитика.ВидАналитики,
	|	АктуальнаяАналитика.ВидАналитики.ТипЗначения КАК ТипЗначенияАналитики,
	|	АктуальнаяАналитика.ВидАналитики.Наименование КАК НаименованиеАналитики,
	|	АктуальнаяАналитика.ИспользоватьДляДохода,
	|	АктуальнаяАналитика.ИспользоватьДляРасхода,
	|	АктуальнаяАналитика.РедактироватьВШапке,
	|	АктуальнаяАналитика.ВидАналитики.ЗначениеАналитикиДохода КАК ЗначениеАналитикиДоходаПоУмолчанию,
	|	АктуальнаяАналитика.ВидАналитики.ЗначениеАналитикиРасхода КАК ЗначениеАналитикиРасходаПоУмолчанию,
	|	АктуальнаяАналитика.ВидАналитики.РасширенныеНастройкиДляДохода КАК РасширенныеНастройкиДляДохода,
	|	АктуальнаяАналитика.ВидАналитики.РасширенныеНастройкиДляРасхода КАК РасширенныеНастройкиДляРасхода
	|ИЗ
	|	(ВЫБРАТЬ
	|		Сбор.ВидАналитики КАК ВидАналитики,
	|		МАКСИМУМ(Сбор.ИспользоватьДляДохода) КАК ИспользоватьДляДохода,
	|		МАКСИМУМ(Сбор.ИспользоватьДляРасхода) КАК ИспользоватьДляРасхода,
	|		ВЫБОР
	|			КОГДА МАКСИМУМ(Сбор.РедактироватьВШапкеПриоритет) = 1
	|				ТОГДА МАКСИМУМ(Сбор.РедактироватьВШапке1)
	|			КОГДА МАКСИМУМ(Сбор.РедактироватьВШапкеПриоритет) = 2
	|				ТОГДА МАКСИМУМ(Сбор.РедактироватьВШапке2)
	|			КОГДА МАКСИМУМ(Сбор.РедактироватьВШапкеПриоритет) = 3
	|				ТОГДА МАКСИМУМ(Сбор.РедактироватьВШапке3)
	|		КОНЕЦ КАК РедактироватьВШапке
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВидыАналитик.Ссылка КАК ВидАналитики,
	|			(ВидыАналитик.РасширенныеНастройкиДляДохода)
	|				И ВидыАналитик.АктуальнаДляДохода КАК ИспользоватьДляДохода,
	|			(ВидыАналитик.РасширенныеНастройкиДляРасхода)
	|				И ВидыАналитик.АктуальнаДляРасхода КАК ИспользоватьДляРасхода,
	|			1 КАК РедактироватьВШапкеПриоритет,
	|			ВЫБОР
	|				КОГДА &ИспользоватьДляДоходов
	|						И &ИспользоватьДляРасходов
	|					ТОГДА ВидыАналитик.РедактироватьВШапкеДляДохода
	|							И ВидыАналитик.РедактироватьВШапкеДляРасхода
	|				КОГДА &ИспользоватьДляДоходов
	|					ТОГДА ВидыАналитик.РедактироватьВШапкеДляДохода
	|				КОГДА &ИспользоватьДляРасходов
	|					ТОГДА ВидыАналитик.РедактироватьВШапкеДляРасхода
	|			КОНЕЦ КАК РедактироватьВШапке1,
	|			NULL КАК РедактироватьВШапке2,
	|			NULL КАК РедактироватьВШапке3
	|		ИЗ
	|			ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|		ГДЕ
	|			НЕ ВидыАналитик.ПометкаУдаления
	|			И (&ИспользоватьДляДоходов
	|						И ВидыАналитик.АктуальнаДляДохода
	|					ИЛИ &ИспользоватьДляРасходов
	|						И ВидыАналитик.АктуальнаДляРасхода)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			НастройкиАналитики.ВидАналитики,
	|			&ИспользоватьДляДоходов
	|				И НастройкиАналитики.ВидАналитики.АктуальнаДляДохода,
	|			&ИспользоватьДляРасходов
	|				И НастройкиАналитики.ВидАналитики.АктуальнаДляРасхода,
	|			2,
	|			NULL,
	|			НастройкиАналитики.РедактироватьВШапке,
	|			NULL
	|		ИЗ
	|			РегистрСведений.НастройкиАналитикиВДокументахПоУмолчанию КАК НастройкиАналитики
	|		ГДЕ
	|			НастройкиАналитики.ВидДокумента = &ИмяВидаДокумента
	|			И &ПрименятьНастройкиАналитики
	|			И НЕ НастройкиАналитики.ВидАналитики.ПометкаУдаления
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ОбщаяАналитикаДокумента.ВидАналитики,
	|			ОбщаяАналитикаДокумента.ИспользоватьДляДохода,
	|			ОбщаяАналитикаДокумента.ИспользоватьДляРасхода,
	|			3,
	|			NULL,
	|			NULL,
	|			ОбщаяАналитикаДокумента.РедактироватьВШапке
	|		ИЗ
	|			ОбщаяАналитикаДокумента КАК ОбщаяАналитикаДокумента
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ВидыАналитикиИзДокумента.ВидАналитики,
	|			ПакетыАналитикиДокумента.ИспользоватьДляДохода,
	|			ПакетыАналитикиДокумента.ИспользоватьДляРасхода,
	|			3,
	|			NULL,
	|			NULL,
	|			ЛОЖЬ
	|		ИЗ
	|			ПакетыАналитикиДокумента КАК ПакетыАналитикиДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗначенияСубконтоАналитика.ВидыИЗначенияАналитики КАК ВидыАналитикиИзДокумента
	|				ПО ПакетыАналитикиДокумента.ПакетАналитики = ВидыАналитикиИзДокумента.Ссылка) КАК Сбор
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Сбор.ВидАналитики) КАК АктуальнаяАналитика
	|ГДЕ
	|	НЕ АктуальнаяАналитика.ВидАналитики ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	АктуальнаяАналитика.ВидАналитики.Наименование";
		
	ТаблицаАналитики = Запрос.Выполнить().Выгрузить();
	ТаблицаАналитики.Колонки.Добавить("ИДАналитики"); // идентификатор, из которого будут получаться имена реквизитов и элементов формы
	
	Счетчик = 0;
	Для Каждого СтрокаАналитики Из ТаблицаАналитики Цикл
		Счетчик = Счетчик + 1;
		СтрокаАналитики.ИДАналитики = "РеквизитАналитики_" + Формат(Счетчик, "ЧДЦ=0; ЧГ=");
	КонецЦикла; 
	
	Возврат ТаблицаАналитики;
	
КонецФункции

// Возвращает соответствие или Неопределено. В ключах - статьи доходов/расходов, в значениях соответствие с настройками.
// Соответствие настроек. В ключах - вид аналитики, в значениях структура.
// Ключи структуры с настройками: "Использовать", "ЗначениеПоУмолчаниюВТаблице", "ЗначениеПоУмолчаниюВШапке"
//
// Пример обращения к настройкам в коде: А = РезультатФункции[СтатьяСсылка][ВидАналитикиСсылка].Использовать;
//
// Настройки Использовать и ЗначениеПоУмолчаниюВТаблице считываются из регистра сведений НастройкиАналитикиПоСтатьям, 
// если запись не найдена, то Использовать = Истина, ЗначениеПоУмолчаниюВТаблице = Неопределено,
// если для аналитики не включена расширенная настройка, то Использовать = Истина, ЗначениеПоУмолчаниюВТаблице считывается из ПВХ.ВидыАналитики,
// ЗначениеПоУмолчаниюВШапке считывается из ПВХ.ВидыАналитики.
//
Функция ПолучитьРасширенныеНастройкиАналитикПоСтатьям(МассивСтатей, МассивАналитик)

	Если НЕ ЗначениеЗаполнено(МассивСтатей) Тогда
		Возврат Неопределено
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	Запрос.УстановитьПараметр("МассивАналитик", МассивАналитик);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиИВидыАналитик.Статья,
	|	СтатьиИВидыАналитик.ВидАналитики КАК ВидАналитики,
	|	ЕСТЬNULL(НастройкиАналитикиПоСтатьям.Использовать, ЛОЖЬ) КАК Использовать,
	|	ЕСТЬNULL(НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию, ЕСТЬNULL(СтатьиИВидыАналитик.ЗначениеАналитикиДохода, НЕОПРЕДЕЛЕНО)) КАК ЗначениеПоУмолчаниюВТаблице,
	|	ЕСТЬNULL(СтатьиИВидыАналитик.ЗначениеАналитикиДохода, НЕОПРЕДЕЛЕНО) КАК ЗначениеПоУмолчаниюВШапке
	|ИЗ
	|	(ВЫБРАТЬ
	|		Статьи.Ссылка КАК Статья,
	|		ВидыАналитик.Ссылка КАК ВидАналитики,
	|		ВидыАналитик.ЗначениеАналитикиДохода КАК ЗначениеАналитикиДохода
	|	ИЗ
	|		Справочник.СтатьиДоходов КАК Статьи
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|			ПО (ВидыАналитик.Ссылка В (&МассивАналитик))
	|	ГДЕ
	|		Статьи.Ссылка В(&МассивСтатей)) КАК СтатьиИВидыАналитик
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|		ПО СтатьиИВидыАналитик.Статья = НастройкиАналитикиПоСтатьям.Статья
	|			И СтатьиИВидыАналитик.ВидАналитики = НастройкиАналитикиПоСтатьям.ВидАналитики
	|			И (НастройкиАналитикиПоСтатьям.ВидАналитики.РасширенныеНастройкиДляДохода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатьиИВидыАналитик.Статья,
	|	СтатьиИВидыАналитик.ВидАналитики,
	|	ЕСТЬNULL(НастройкиАналитикиПоСтатьям.Использовать, ЛОЖЬ),
	|	ЕСТЬNULL(НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию, ЕСТЬNULL(СтатьиИВидыАналитик.ЗначениеАналитикиРасхода, НЕОПРЕДЕЛЕНО)),
	|	ЕСТЬNULL(СтатьиИВидыАналитик.ЗначениеАналитикиРасхода, НЕОПРЕДЕЛЕНО)
	|ИЗ
	|	(ВЫБРАТЬ
	|		Статьи.Ссылка КАК Статья,
	|		ВидыАналитик.Ссылка КАК ВидАналитики,
	|		ВидыАналитик.ЗначениеАналитикиРасхода КАК ЗначениеАналитикиРасхода
	|	ИЗ
	|		Справочник.СтатьиРасходов КАК Статьи
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыАналитик КАК ВидыАналитик
	|			ПО (ВидыАналитик.Ссылка В (&МассивАналитик))
	|	ГДЕ
	|		Статьи.Ссылка В(&МассивСтатей)) КАК СтатьиИВидыАналитик
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|		ПО СтатьиИВидыАналитик.Статья = НастройкиАналитикиПоСтатьям.Статья
	|			И СтатьиИВидыАналитик.ВидАналитики = НастройкиАналитикиПоСтатьям.ВидАналитики
	|			И (НастройкиАналитикиПоСтатьям.ВидАналитики.РасширенныеНастройкиДляРасхода)";
	
	НастройкиАналитикПоСтатьям = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	
		Если НЕ ЗначениеЗаполнено(Выборка.ВидАналитики) Тогда
			Продолжить;
		КонецЕсли;
		
		НастройкиСтруктура = Новый Структура("Использовать, ЗначениеПоУмолчаниюВТаблице, ЗначениеПоУмолчаниюВШапке");
		ЗаполнитьЗначенияСвойств(НастройкиСтруктура, Выборка);
		
		Если НастройкиАналитикПоСтатьям[Выборка.Статья] = Неопределено Тогда
			НастройкиАналитикПоСтатьям.Вставить(Выборка.Статья, Новый Соответствие);
		КонецЕсли;
		НастройкиПоСтатьеСоответствие = НастройкиАналитикПоСтатьям[Выборка.Статья];
		
		НастройкиПоСтатьеСоответствие.Вставить(Выборка.ВидАналитики, НастройкиСтруктура);
	
	КонецЦикла;
	
	Если НастройкиАналитикПоСтатьям.Количество() = 0 Тогда
		Возврат Неопределено
	Иначе
		Возврат НастройкиАналитикПоСтатьям
	КонецЕсли;

КонецФункции

Функция НайтиРасширенныеНастройкиДляСтатьиИАналитики(Статья, ВидАналитики, РасширенныеНастройкиАналитик)

	Если НЕ ЗначениеЗаполнено(Статья) ИЛИ НЕ ЗначениеЗаполнено(ВидАналитики) ИЛИ НЕ ЗначениеЗаполнено(РасширенныеНастройкиАналитик) Тогда 
		//ИЛИ ТипЗнч(Статья) <> Тип("СправочникСсылка.СтатьиРасходов") И ТипЗнч(Статья) <> Тип("СправочникСсылка.СтатьиДоходов") Тогда
		Возврат Неопределено;
	Иначе
		Возврат РасширенныеНастройкиАналитик[Статья][ВидАналитики];
	КонецЕсли;

КонецФункции

Функция ОпределитьИспользованиеАналитикиДляСтатьи(ТабличнаяЧасть, СтрокаТабЧасти, СтрокаВидаАналитики, РасширенныеНастройкиАналитик)

	ТипСтатьи = ТипЗнч(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи]);
	
	Если ТипСтатьи <> Тип("СправочникСсылка.СтатьиРасходов") И ТипСтатьи <> Тип("СправочникСсылка.СтатьиДоходов") Тогда
		Возврат Ложь;
		
	ИначеЕсли ТабличнаяЧасть.ЭтоДоход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода Тогда
		Возврат СтрокаВидаАналитики.ИспользоватьДляДохода;
		
	ИначеЕсли ТабличнаяЧасть.ЭтоРасход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода Тогда
		Возврат СтрокаВидаАналитики.ИспользоватьДляРасхода;
			
	Иначе
		Статья       = СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи];
		ВидАналитики = СтрокаВидаАналитики.ВидАналитики;
		
		Настройки = НайтиРасширенныеНастройкиДляСтатьиИАналитики(Статья, ВидАналитики, РасширенныеНастройкиАналитик);
		Возврат ?(Настройки = Неопределено, Ложь, Настройки.Использовать);
		
	КонецЕсли;

КонецФункции

// Проверяет, не будут ли потеряны данные, если перенести аналитику в шапку
//
Функция МожноПеренестиАналитикуВШапкуБезПотерь(Форма, СтрокаВидаАналитики)

	ЕстьПотеряДанных = Ложь;
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если НЕ ЗначениеЗаполнено(Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти]) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
		
		АналитикаВТабЧасти = Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Выгрузить(, ИмяКолонки);
		// Блок для проверки типа значения.
		АналитикаВТабЧасти.Очистить();
		Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
			ТипСтатьи = ТипЗнч(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи]);
			Если ТипСтатьи <> Тип("СправочникСсылка.СтатьиРасходов") И ТипСтатьи <> Тип("СправочникСсылка.СтатьиДоходов") Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = АналитикаВТабЧасти.Добавить();
			НоваяСтрока[ИмяКолонки] = СтрокаТабЧасти[ИмяКолонки];
		КонецЦикла;
		// Блок для проверки типа значения. Конец.
		АналитикаВТабЧасти.Свернуть(ИмяКолонки);
		ВТаблицеОдинаковыеЗначения = АналитикаВТабЧасти.Количество() <= 1;
		
		Если ВТаблицеОдинаковыеЗначения Тогда
			// Дальнейшие проверки не имеют смысла
			Продолжить;
		КонецЕсли;
		
		Если ТабличнаяЧасть.ЭтоДоход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
			ИЛИ ТабличнаяЧасть.ЭтоРасход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода Тогда
			
			// В таблице неодинаковые значения.
			// Возможно раньше у аналитики была расширенная настройка, поэтому не все строки заполнены.
			ЕстьПотеряДанных = Истина;
			Прервать;
			
		Иначе
			// Если при создании документа аналитика редактировалась в шапке, 
			// значит в строках могут быть только два значения: пустое и любое другое, но одно.
			// Потеря может произойти, если изменилось использование аналитики для статьи.
			// Старое использование мы можем определить по заполненности, новое - по расширенным настройкам.
			Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
				Если СтрокаТабЧасти[ИмяКолонки + "_Заполнено"] <> СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
					ЕстьПотеряДанных = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьПотеряДанных Тогда
				Прервать;
			КонецЕсли;
		
		КонецЕсли; 
	
	КонецЦикла;
	
	Возврат НЕ ЕстьПотеряДанных;

КонецФункции

Процедура ЗаменитьСсылкиВОбъекте(ЧтоМеняем, НаЧтоМеняем, СсылкаНаОбъект, МетаданныеОбъекта) 
	
	Если ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(МетаданныеОбъекта) Тогда
		Объект = СсылкаНаОбъект.ПолучитьОбъект();
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			Если Объект[реквизит.Имя] = ЧтоМеняем Тогда
				Объект[реквизит.Имя] = НаЧтоМеняем;
			КонецЕсли;
		КонецЦикла;
		Для каждого ТабЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
			Для каждого СтрокаТабЧасти Из Объект[ТабЧасть.Имя] Цикл
				Для каждого Реквизит Из ТабЧасть.Реквизиты Цикл
					Если СтрокаТабЧасти[Реквизит.Имя] = ЧтоМеняем Тогда
						СтрокаТабЧасти[Реквизит.Имя] = НаЧтоМеняем;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Объект.Модифицированность() Тогда
		Объект.Записать();
	КонецЕсли;
	
	Если ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) 
		И МетаданныеОбъекта.Движения.Содержит(Метаданные.РегистрыБухгалтерии.ЖурналОпераций) Тогда
		ТаблицаДвижений = Объект.Движения.ЖурналОпераций.Выгрузить();
		ЕстьЗамены = Ложь;
		Для каждого СтрокаДвижения Из ТаблицаДвижений Цикл
			Для каждого Колонка Из ТаблицаДвижений.Колонки Цикл
				Если СтрокаДвижения[Колонка.Имя] = ЧтоМеняем Тогда
					СтрокаДвижения[Колонка.Имя] = НаЧтоМеняем;
					ЕстьЗамены = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Если ЕстьЗамены Тогда
			Объект.Движения.ЖурналОпераций.Загрузить(ТаблицаДвижений);
			Объект.Движения.ЖурналОпераций.Записывать = Истина;
			Объект.Движения.Записать();
		КонецЕсли;
		 
	КонецЕсли;
	
	 
КонецПроцедуры

// Возвращает таблицу значений с колонками "ВидАналитики" и "ЗначениеАналитики"
//
//
//Возвращаемое значение:
//	ТаблицаЗначений
//
Функция НоваяТаблицаВидИЗначениеАналитики() Экспорт

	ВидИЗначениеАналитики = Новый ТаблицаЗначений;
	ВидИЗначениеАналитики.Колонки.Добавить("ВидАналитики", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыАналитик"));
	ВидИЗначениеАналитики.Колонки.Добавить("ЗначениеАналитики");
	
	Возврат ВидИЗначениеАналитики;

КонецФункции

Функция ТаблицаОбщейАналитикиДокумента(СтрокиАналитики) 
	
	Результат = НоваяТаблицаВидИЗначениеАналитики();
	Для каждого Строка Из СтрокиАналитики Цикл
		
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ВидАналитики      = Строка.ВидАналитики;
		НоваяСтрока.ЗначениеАналитики = Строка.ЗначениеАналитикиВШапке;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции 

#КонецОбласти


