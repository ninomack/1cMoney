
Функция ПолучитьСвойстваСчета(Счет) Экспорт

	ДанныеСчета = Новый Структура;

	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.РазделыУчета") Тогда
		ДанныеСчета.Вставить("Ссылка"                         , Счет.Ссылка);
		ДанныеСчета.Вставить("Наименование"                   , Счет.Наименование);
		ДанныеСчета.Вставить("Код"                            , Счет.Код);
		ДанныеСчета.Вставить("Родитель"                       , Счет.Родитель);
		ДанныеСчета.Вставить("Наименование"                   , Счет.Наименование);
		ДанныеСчета.Вставить("Вид"                            , Счет.Вид);
		ДанныеСчета.Вставить("Забалансовый"                   , Счет.Забалансовый);
		ДанныеСчета.Вставить("КоличествоСубконто"             , Счет.ВидыСубконто.Количество());

		МаксКоличествоСубконто = ПолучитьМаксКоличествоСубконто();
		Для Индекс = 1 По МаксКоличествоСубконто Цикл
			Если Индекс <= Счет.ВидыСубконто.Количество() Тогда
				ДанныеСчета.Вставить("ВидСубконто" + Индекс,                   Счет.ВидыСубконто[Индекс - 1].ВидСубконто);
				ДанныеСчета.Вставить("ВидСубконто" + Индекс + "Наименование",  Строка(Счет.ВидыСубконто[Индекс - 1].ВидСубконто));
				ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТипЗначения",   Счет.ВидыСубконто[Индекс - 1].ВидСубконто.ТипЗначения);
				ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТолькоОбороты", Счет.ВидыСубконто[Индекс - 1].ТолькоОбороты);
			Иначе
				ДанныеСчета.Вставить("ВидСубконто" + Индекс,                   Неопределено);
				ДанныеСчета.Вставить("ВидСубконто" + Индекс + "Наименование",  Неопределено);
				ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТипЗначения",   Неопределено);
				ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТолькоОбороты", Ложь);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ДанныеСчета.Вставить("Ссылка"                         , ПланыСчетов.РазделыУчета.ПустаяСсылка());
		ДанныеСчета.Вставить("Наименование"                   , "");
		ДанныеСчета.Вставить("Код"                            , "");
		ДанныеСчета.Вставить("Родитель"                       , ПланыСчетов.РазделыУчета.ПустаяСсылка());
		ДанныеСчета.Вставить("Наименование"                   , "");
		ДанныеСчета.Вставить("Вид"                            , Неопределено);
		ДанныеСчета.Вставить("Забалансовый"                   , Ложь);
		ДанныеСчета.Вставить("КоличествоСубконто"             , 0);
	КонецЕсли;

	Возврат ДанныеСчета;

КонецФункции

Функция ПолучитьМаксКоличествоСубконто() Экспорт

	Возврат Метаданные.ПланыСчетов.РазделыУчета.МаксКоличествоСубконто;

КонецФункции

// Возвращает таблицу значений с разделами учета, 
//	соответствующими им счетами, типами субконто и условиями 
//	учета остатков
Функция ПолучитьТаблицуВсехРазделов() Экспорт

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("НазваниеРаздела",   Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150))); // Название, которое видит пользователь в своих списках
	Результат.Колонки.Добавить("Порядок",           Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4))); // Строка для сортировки
	Результат.Колонки.Добавить("Счет",              Новый ОписаниеТипов("ПланСчетовСсылка.РазделыУчета")); // Счет полана счетов, по которому учитываются остатки в РБ
	Результат.Колонки.Добавить("ОстатокДебетовый",  Новый ОписаниеТипов("Булево"));  
	Результат.Колонки.Добавить("ОстатокКредитовый", Новый ОписаниеТипов("Булево"));  
	Результат.Колонки.Добавить("ИмяСубконто1",      Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(60))); // Имя справочника в субконто 1
	Результат.Колонки.Добавить("ИмяСубконто2",      Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(60))); // Имя справочника в субконто 2

	СтрокаРезультата = Результат.Добавить();
	СтрокаРезультата.НазваниеРаздела   = НСтр("ru = 'Деньги'");
	СтрокаРезультата.Порядок           = "0010";
	СтрокаРезультата.Счет              = ПланыСчетов.РазделыУчета.Деньги;
	СтрокаРезультата.ОстатокДебетовый  = Истина;
	СтрокаРезультата.ОстатокКредитовый = Ложь;
	СтрокаРезультата.ИмяСубконто1      = "КошелькиИСчета";
	СтрокаРезультата.ИмяСубконто2      = "";
	
	СтрокаРезультата = Результат.Добавить();
	СтрокаРезультата.НазваниеРаздела   = НСтр("ru = 'Кредитные карты'");
	СтрокаРезультата.Порядок           = "0020";
	СтрокаРезультата.Счет              = ПланыСчетов.РазделыУчета.Деньги;
	СтрокаРезультата.ОстатокДебетовый  = Ложь;
	СтрокаРезультата.ОстатокКредитовый = Истина;
	СтрокаРезультата.ИмяСубконто1      = "КошелькиИСчета";
	СтрокаРезультата.ИмяСубконто2      = "";
	
	СтрокаРезультата = Результат.Добавить();
	СтрокаРезультата.НазваниеРаздела   = НСтр("ru = 'Имущество'");
	СтрокаРезультата.Порядок           = "0030";
	СтрокаРезультата.Счет              = ПланыСчетов.РазделыУчета.Имущество;
	СтрокаРезультата.ОстатокДебетовый  = Истина;
	СтрокаРезультата.ОстатокКредитовый = Ложь;
	СтрокаРезультата.ИмяСубконто1      = "Имущество";
	СтрокаРезультата.ИмяСубконто2      = "";
	
	СтрокаРезультата = Результат.Добавить();
	СтрокаРезультата.НазваниеРаздела   = НСтр("ru = 'Займы выданные'");
	СтрокаРезультата.Порядок           = "0040";
	СтрокаРезультата.Счет              = ПланыСчетов.РазделыУчета.Долги;
	СтрокаРезультата.ОстатокДебетовый  = Истина;
	СтрокаРезультата.ОстатокКредитовый = Ложь;
	СтрокаРезультата.ИмяСубконто1      = "Долги";
	СтрокаРезультата.ИмяСубконто2      = "";
	
	СтрокаРезультата = Результат.Добавить();
	СтрокаРезультата.НазваниеРаздела   = НСтр("ru = 'Кредиты полученные'");
	СтрокаРезультата.Порядок           = "0050";
	СтрокаРезультата.Счет              = ПланыСчетов.РазделыУчета.Долги;
	СтрокаРезультата.ОстатокДебетовый  = Ложь;
	СтрокаРезультата.ОстатокКредитовый = Истина;
	СтрокаРезультата.ИмяСубконто1      = "Долги";
	СтрокаРезультата.ИмяСубконто2      = "";
	
	СтрокаРезультата = Результат.Добавить();
	СтрокаРезультата.НазваниеРаздела   = НСтр("ru = 'Финансовый результат'");
	СтрокаРезультата.Порядок           = "9000";
	СтрокаРезультата.Счет              = ПланыСчетов.РазделыУчета.Капитал;
	СтрокаРезультата.ОстатокДебетовый  = Ложь;
	СтрокаРезультата.ОстатокКредитовый = Истина;
	СтрокаРезультата.ИмяСубконто1      = "Статьи";
	СтрокаРезультата.ИмяСубконто2      = "ЗначенияСубконтоАналитика";
	
	Возврат Результат;
	
КонецФункции

 