////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность БРО".
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Для задания обработчиков параметров сеанса следует использовать шаблон:
// Обработчики.Вставить("<ИмяПараметраСеанса>|<НачалоИмениПараметраСеанса*>", "Обработчик");
//
// Примечание. Символ '*'используется в конце имени параметра сеанса и обозначает,
//             что один обработчик будет вызван для инициализации всех параметров сеанса
//             с именем, начинающимся на слово НачалоИмениПараметраСеанса
//
Процедура ОбработчикиИнициализацииПараметровСеанса(Обработчики) Экспорт
	
	// ДЕНЬГИ
	Обработчики.Вставить("ПараметрыВнешнихРегламентированныхОтчетов", "РегламентированнаяОтчетностьВызовСервера.УстановитьПараметрыВнешнихРегламентированныхОтчетов");
	Возврат;
	// Конец ДЕНЬГИ 
	
КонецПроцедуры

// Заполняет структуру массивами поддерживаемых версий всех подлежащих версионированию программных интерфейсов,
// используя в качестве ключей имена программных интерфейсов.
// Обеспечивает функциональность Web-сервиса InterfaceVersion.
// При внедрении надо поменять тело процедуры так, чтобы она возвращала актуальные наборы версий (см. пример.ниже).
//
// Параметры:
// СтруктураПоддерживаемыхВерсий - Структура:
//  Ключ - Имя программного интерфейса,
//  Значение - Массив(Строка) - поддерживаемые версии программного интерфейса.
//
// Пример реализации:
//
//  // СервисПередачиФайлов
//  МассивВерсий = Новый Массив;
//  МассивВерсий.Добавить("1.0.1.1");
//  МассивВерсий.Добавить("1.0.2.1"); 
//  СтруктураПоддерживаемыхВерсий.Вставить("СервисПередачиФайлов", МассивВерсий);
//  // Конец СервисПередачиФайлов
//
Процедура ПриОпределенииПоддерживаемыхВерсийПрограммныхИнтерфейсов(СтруктураПоддерживаемыхВерсий) Экспорт
	
	// ЭлектроннаяПодписьВМоделиСервиса
	// ДЕНЬГИ
	// 	ЭлектроннаяПодписьВМоделиСервиса.ПриОпределенииПоддерживаемыхВерсийПрограммныхИнтерфейсов(СтруктураПоддерживаемыхВерсий);
	// Конец ДЕНЬГИ
	// Конец ЭлектроннаяПодписьВМоделиСервиса
	
	// СервисФормированияМЧБсPDF417
	МассивВерсий = Новый Массив;
	МассивВерсий.Добавить("1.0.1.1");
	МассивВерсий.Добавить("1.0.1.2");
	СтруктураПоддерживаемыхВерсий.Вставить("СервисФормированияМЧБсPDF417", МассивВерсий);
	// Конец СервисФормированияМЧБсPDF417
	
КонецПроцедуры

// Возвращает структуру параметров, необходимых для работы клиентского кода
// при запуске конфигурации, т.е. в обработчиках событий
// - ПередНачаломРаботыСистемы,
// - ПриНачалеРаботыСистемы
//
// Важно: при запуске недопустимо использовать команды сброса кэша
// повторно используемых модулей, иначе запуск может привести
// к непредсказуемым ошибкам и лишним серверным вызовам
//
// Параметры:
//   Параметры - Структура - (возвращаемое значение) структура параметров работы клиента при запуске.
//
// Пример реализации:
//   Для установки параметров работы клиента можно использовать шаблон:
//
//     Параметры.Вставить(<ИмяПараметра>, <код получения значения параметра>);
//
//
Процедура ПараметрыРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	// ДЕНЬГИ
	Параметры.Вставить("ДокументооборотСКонтролирующимиОрганами_ТекущемуПользователюЭДОДоступен", Ложь);
	Параметры.Вставить("ДокументооборотСКонтролирующимиОрганами_ТекущемуПользователюАОДоступен", Ложь);
	Параметры.Вставить("ДокументооборотСКонтролирующимиОрганами_ВыбранныйCSPИзВременныхНастроек", Неопределено);
	Параметры.Вставить("ДокументооборотСКонтролирующимиОрганами_ИспользованиеЭлектроннойПодписиВМоделиСервисаВозможно", Ложь);
	// Конец ДЕНЬГИ 
	
КонецПроцедуры

// Заполняет соответствие имен методов их псевдонимам для вызова из очереди заданий.
//
// Параметры:
//  СоответствиеИменПсевдонимам - Соответствие
//   Ключ - Псевдоним метода, например ОчиститьОбластьДанных.
//   Значение - Имя метода для вызова, например РаботаВМоделиСервиса.ОчиститьОбластьДанных.
//    В качестве значения можно указать Неопределено, в этом случае считается что имя 
//    совпадает с псевдонимом.
//
Процедура ПриОпределенииПсевдонимовОбработчиков(СоответствиеИменПсевдонимам) Экспорт
	
	// ДЕНЬГИ
	Возврат;
	// Конец ДЕНЬГИ 
	
КонецПроцедуры