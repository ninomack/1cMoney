
////////////////////////////////////////////////////////////////////////////////
// АналитикаСтатейКлиент: обеспечивает упралвение аналитикой и использование аналитики 
//		в формах операций
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обслуживание форм документов

Процедура ПриИзмененииАналитикиВШапке(Форма, Элемент) Экспорт

	МассивСтрок = Форма.НаборАналитики.НайтиСтроки(Новый Структура("ИДАналитики", Элемент.Имя));
	Если МассивСтрок.Количество() <> 1 Тогда
		ВызватьИсключение "Не найдена строка вида аналитики";
	КонецЕсли;
	
	СтрокаВидаАналитики = МассивСтрок[0];
	
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если НЕ (ТабличнаяЧасть.ЭтоДоход И СтрокаВидаАналитики.ИспользоватьДляДохода
			 ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.ИспользоватьДляРасхода) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
		
		Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
			
			// Если используется, заполним новым значением, иначе очистим
			Если СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
				СтрокаТабЧасти[ИмяКолонки] = Форма[СтрокаВидаАналитики.ИДАналитики];
			Иначе
				СтрокаТабЧасти[ИмяКолонки] = Неопределено;
			КонецЕсли;
			
			// Проверим заполненность
			СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриИзмененииАналитикиВТаблице(Форма, Элемент, ИмяТаблицы) Экспорт

	ТекущиеДанные = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	ВыделенныеСтроки = Форма.Элементы[ИмяТаблицы].ВыделенныеСтроки;
	Если ТекущиеДанные = Неопределено ИЛИ ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ИмяКолонки = Элемент.Имя;
	ЗначениеАналитики = ТекущиеДанные[ИмяКолонки];
	ИДАналитики = Сред(Элемент.Имя, СтрДлина(ИмяТаблицы) + 1);
	
	МассивСтрок = Форма.НаборАналитики.НайтиСтроки(Новый Структура("ИДАналитики", ИДАналитики));
	Если МассивСтрок.Количество() <> 1 Тогда
		ВызватьИсключение "Не найдена строка вида аналитики";
	КонецЕсли;
	
	СтрокаВидаАналитики = МассивСтрок[0];
	
	Для каждого ИДСтроки Из ВыделенныеСтроки Цикл
		
		СтрокаТабЧасти = Форма.Объект[ИмяТаблицы].НайтиПоИдентификатору(ИДСтроки);
		
		// Если используется, заполним новым значением, иначе очистим
		Если СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
			Если СтрокаТабЧасти[ИмяКолонки] <> ЗначениеАналитики Тогда
				СтрокаТабЧасти[ИмяКолонки] = ЗначениеАналитики;
			КонецЕсли; 
		Иначе
			СтрокаТабЧасти[ИмяКолонки] = Неопределено;
		КонецЕсли;
		
		// Проверим заполненность
		СтрокаТабЧасти[ИмяКолонки + "_Заполнено"]    = ?(ТипЗнч(СтрокаТабЧасти[ИмяКолонки]) = Тип("Булево"), СтрокаТабЧасти[ИмяКолонки], ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]));
		
	КонецЦикла;

КонецПроцедуры
 
Процедура ПриИзмененииСтатьиВТабличнойЧасти(Форма, Статья, ИмяТабличнойЧасти, ИдентификаторСтроки) Экспорт

	АналитикаСтатейВызовСервера.ПриИзмененииСтатьиВТабличнойЧасти(Форма, Статья, ИмяТабличнойЧасти, ИдентификаторСтроки);

КонецПроцедуры

// Чтобы корректно отрабатывалась видимость элементов шапки, в вызывающем коде необходимо выполнить проверку:
//	Если АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
//		АналитикаСтатей.УправлениеФормой(ЭтаФорма);
//	Иначе
//		АналитикаСтатейКлиент.ПриОкончанииРедактированияСтрокиТабличнойЧасти(...)
//	КонецЕсли;
//
Процедура ПриОкончанииРедактированияСтрокиТабличнойЧасти(Форма, ЭтоРасход, ИмяТабличнойЧасти, ТекущиеДанные) Экспорт

	Если НЕ Форма.ИспользуетсяАналитикаСтатей ИЛИ ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтоДоход = НЕ ЭтоРасход;
	
	// Видимость колонок
	Для Каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
		
		ИмяКолонки = ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
		ЭлементФормы = Форма.Элементы.Найти(ИмяКолонки);
		
		ТекущиеДанные[ИмяКолонки + "_Заполнено"] = ?(ТипЗнч(ТекущиеДанные[ИмяКолонки]) = Тип("Булево"), ТекущиеДанные[ИмяКолонки], ЗначениеЗаполнено(ТекущиеДанные[ИмяКолонки]));
		
		Форма[СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонки" + ?(ЭтоРасход, "ВРасходах", "ВДоходах")] = ЭлементФормы.Видимость 
			И (ЭтоДоход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
				ИЛИ ЭтоРасход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода)
			ИЛИ Форма.Объект[ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Использовать") <> 0 
			ИЛИ Форма.Объект[ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Заполнено") <> 0;
		
	КонецЦикла;
	
КонецПроцедуры

// Чтобы корректно отрабатывалась видимость элементов шапки, в вызывающем коде необходимо выполнить проверку:
//	Если АналитикаСтатейКлиент.ВидимостьЭлементовШапкиИзменилась(ЭтаФорма) Тогда
//		АналитикаСтатей.УправлениеФормой(ЭтаФорма);
//	Иначе
//		АналитикаСтатейКлиент.ПослеУдаленияСтрокиТабличнойЧасти(...)
//	КонецЕсли;
//
Процедура ПослеУдаленияСтрокиТабличнойЧасти(Форма, ЭтоРасход, ИмяТабличнойЧасти) Экспорт

	Если НЕ Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтоДоход = НЕ ЭтоРасход;
	
	// Видимость колонок
	Для Каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
		
		ИмяКолонки = ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
		ЭлементФормы = Форма.Элементы.Найти(ИмяКолонки);
		
		Форма[СтрокаВидаАналитики.ИДАналитики + "_ВидимостьКолонки" + ?(ЭтоРасход, "ВРасходах", "ВДоходах")] = ЭлементФормы.Видимость 
			И (ЭтоДоход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
				ИЛИ ЭтоРасход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода)
			ИЛИ Форма.Объект[ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Использовать") <> 0 
			ИЛИ Форма.Объект[ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Заполнено") <> 0;
			
	КонецЦикла;
	
КонецПроцедуры

Функция ВидимостьЭлементовШапкиИзменилась(Форма) Экспорт

	Если НЕ Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Для Каждого СтрокаВидаАналитики Из Форма.НаборАналитики Цикл
		
		РедактироватьВШапке = СтрокаВидаАналитики.РедактироватьВШапке И МожноПеренестиАналитикуВШапкуБезПотерь(Форма, СтрокаВидаАналитики);
		
		Если СтрокаВидаАналитики.ИспользоватьДляДохода И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
			ИЛИ СтрокаВидаАналитики.ИспользоватьДляРасхода И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода
			ИЛИ НЕ РедактироватьВШапке Тогда
			
			НоваяВидимость = РедактироватьВШапке;
			
		Иначе
			
			// Определим использование аналитики в строках
			ЕстьСтатьиИспользующиеАналитику = Ложь;
			Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
				
				Если НЕ ЗначениеЗаполнено(Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти]) Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
				
				ЕстьСтатьиИспользующиеАналитику = ЕстьСтатьиИспользующиеАналитику 
				ИЛИ ТабличнаяЧасть.ЭтоДоход  И СтрокаВидаАналитики.ИспользоватьДляДохода  И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода  
				ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.ИспользоватьДляРасхода И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода 
				ИЛИ Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Использовать") <> 0
				ИЛИ Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти].Итог(ИмяКолонки + "_Заполнено") <> 0;
				
				Если ЕстьСтатьиИспользующиеАналитику Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			НоваяВидимость = РедактироватьВШапке И ЕстьСтатьиИспользующиеАналитику;
			
		КонецЕсли;
		
		ЭлементФормы = Форма.Элементы.Найти(СтрокаВидаАналитики.ИДАналитики);
		Если ЭлементФормы <> Неопределено И ЭлементФормы.Видимость <> НоваяВидимость Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции


// Прочие

// Открывает диалог настроек аналитики конкретной операции. 
//	Результат выбора этого диалога обрабатывается в ИзменитьНастройкиКолонокАналитикиЗавершение()
//
//Параметры:
//	Форма 			 - УправляемаяФорма - форма операции, в которой осуществляется настройка аналитки
//	ЭтоРасход 		 - Булево - признак того, что аналитика настраивается для статей расхода
//	ИмяВидаДокумента - Строка - текстовое представление вида операции
//
Процедура ИзменитьНастройкиКолонокАналитики(Форма, ЭтоРасход, ИмяВидаДокумента) Экспорт

	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ИспользуетсяАналитикаСтатей")
		Или Не Форма.ИспользуетсяАналитикаСтатей Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("НаборАналитики, ЭтоРасход, ИмяВидаДокумента, РазрешитьРедактированиеАналитикиВШапке", 
								Форма.НаборАналитики, ЭтоРасход, ИмяВидаДокумента, Форма.РазрешитьРедактированиеАналитикиВШапке);
	ДополнительныеПараметры = Новый Структура("ФормаОперации", Форма);
	ЗавершениеДиалога = Новый ОписаниеОповещения("ИзменитьНастройкиКолонокАналитикиЗавершение", АналитикаСтатейКлиент, ДополнительныеПараметры);
	ОткрытьФорму("ОбщаяФорма.НастройкаКолонокАналитики", ПараметрыФормы, Форма, ,,, ЗавершениеДиалога, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Завершение диалога настроек колонок аналитики
Процедура ИзменитьНастройкиКолонокАналитикиЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("ДанныеФормыКоллекция") Тогда
		
		Форма = ДополнительныеПараметры.ФормаОперации;
		
		// Проверки на потерю данных
		СтрПеремещенныеАналитикиСПотерей = "";
		СтрУдаленныеАналитикиСПотерей = "";
		
		Если ВозможнаПотеряДанныхВКолонкахАналитики(Форма, Результат, СтрПеремещенныеАналитикиСПотерей, СтрУдаленныеАналитикиСПотерей) Тогда
			
			// Запрос подтверждения:
			// Надо предупредить, что данные удалятся не только в таб. части, для которой выполнялась настройка
			СтрДоходыИРасходы = "";
			Если Форма.ЕстьАналитикаДохода И Форма.ЕстьАналитикаРасхода Тогда
				СтрДоходыИРасходы = НСтр("ru = 'в таблицах доходов и расходов'") + " ";
			КонецЕсли;
			
			ТекстВопроса = "";
			Если НЕ ПустаяСтрока(СтрПеремещенныеАналитикиСПотерей) Тогда
				ТекстВопроса = ТекстВопроса + НСтр("ru = 'При перемещении в шапку значения следующих аналитик
				|%1 будут очищены:
				|%2
				|'");
			КонецЕсли;
			Если НЕ ПустаяСтрока(СтрУдаленныеАналитикиСПотерей) Тогда
				ТекстВопроса = ТекстВопроса + НСтр("ru = 'Следующие удаляемые аналитики не пусты:
				|%3
				|'");
			КонецЕсли;
			ТекстВопроса = ТекстВопроса + НСтр("ru = 'Продолжить?'");
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, СтрДоходыИРасходы, СтрПеремещенныеАналитикиСПотерей, СтрУдаленныеАналитикиСПотерей);
			
			ДополнительныеПараметры = Новый Структура("ФормаОперации, Результат", Форма, Результат);
			ЗавершениеДиалога = Новый ОписаниеОповещения("ИзменитьНастройкиКолонокАналитикиВопросЗавершение", АналитикаСтатейКлиент, ДополнительныеПараметры);
			ПоказатьВопрос(ЗавершениеДиалога, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, НСтр("ru = 'Настройка аналитики'"));
			
		Иначе
			
			ПрименитьНастройкиКолонокАналитики(Форма, Результат);
			
		КонецЕсли; 
		
	КонецЕсли; 

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПрименитьНастройкиКолонокАналитики(Форма, Результат)

	// Применим новые настройки
	Для Каждого СтрокаРезультата Из Результат Цикл
		СтруктураОтбораСтрок = Новый Структура("ВидАналитики", СтрокаРезультата.ВидАналитики);
		СтрокаВидаАналитики = Форма.НаборАналитики.НайтиСтроки(СтруктураОтбораСтрок)[0];
		Если СтрокаВидаАналитики <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаВидаАналитики, СтрокаРезультата, "РедактироватьВШапке, ИспользоватьДляРасхода, ИспользоватьДляДохода");
		Иначе
			// Появился новый вид аналитики, надо добавить реквизит и элемент формы
		КонецЕсли; 
	КонецЦикла; 
	
	Форма.НастройкаКолонокАналитикиЗавершение(Истина);

КонецПроцедуры
 
Функция ВозможнаПотеряДанныхВКолонкахАналитики(Форма, Результат, СтрПеремещенныеАналитикиСПотерей, СтрУдаленныеАналитикиСПотерей)
	
	ТабличныеЧасти = Форма.РеквизитыДокумента;
	
	ОтборВидовАналитики = Новый Структура("ВидАналитики");
	Для Каждого СтрокаРезультата Из Результат Цикл
		
		// Обновим Форма.НаборАналитики актуальными данными ИБ
		ОтборВидовАналитики.ВидАналитики = СтрокаРезультата.ВидАналитики;
		СтрокиНабораАналитики = Форма.НаборАналитики.НайтиСтроки(ОтборВидовАналитики);
		Если ЗначениеЗаполнено(СтрокиНабораАналитики) Тогда
			ЗаполнитьЗначенияСвойств(СтрокиНабораАналитики[0], СтрокаРезультата, "РасширенныеНастройкиДляДохода, РасширенныеНастройкиДляРасхода");
		КонецЕсли;
		
		СтруктураОтбораСтрок = Новый Структура("ВидАналитики", СтрокаРезультата.ВидАналитики);
		СтрокаВидаАналитики = Форма.НаборАналитики.НайтиСтроки(СтруктураОтбораСтрок)[0];
		Если СтрокаВидаАналитики <> Неопределено Тогда
			
			// Если аналитика перемещена в шапку, а значения в таблицах были различными
			Если НЕ СтрокаВидаАналитики.РедактироватьВШапке И СтрокаРезультата.РедактироватьВШапке Тогда
				
				Если НЕ МожноПеренестиАналитикуВШапкуБезПотерь(Форма, СтрокаВидаАналитики) Тогда
					СтрПеремещенныеАналитикиСПотерей = СтрПеремещенныеАналитикиСПотерей + Символы.Таб + "- " + СтрокаВидаАналитики.НаименованиеАналитики + Символы.ПС;
				КонецЕсли;
			
			КонецЕсли;
			
			// Если аналитика удалена, а значения были не пустыми (для дохода)
			Если СтрокаВидаАналитики.ИспользоватьДляДохода И НЕ СтрокаРезультата.ИспользоватьДляДохода Тогда
				
				ЕстьПотеряДанных = Ложь;
				
				Если СтрокаВидаАналитики.РедактироватьВШапке Тогда
					// Если аналитика используется для расхода, то она совсем не исчезнет
					Если ЗначениеЗаполнено(Форма[СтрокаВидаАналитики.ИДАналитики]) И НЕ СтрокаВидаАналитики.ИспользоватьДляРасхода Тогда
						ЕстьПотеряДанных = Истина;
					КонецЕсли;
					
				Иначе
					
					Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
						
						Если НЕ ТабличнаяЧасть.ЭтоДоход ИЛИ НЕ ЗначениеЗаполнено(Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти]) Тогда
							Продолжить;
						КонецЕсли;
						
						ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
						
						Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
							Если ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]) Тогда
								ЕстьПотеряДанных = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Если ЕстьПотеряДанных Тогда
					СтрУдаленныеАналитикиСПотерей = СтрУдаленныеАналитикиСПотерей + Символы.Таб + "- " + СтрокаВидаАналитики.НаименованиеАналитики + Символы.ПС;
				КонецЕсли;
			
			КонецЕсли;
			
			// Если аналитика удалена, а значения были не пустыми (для расхода)
			Если СтрокаВидаАналитики.ИспользоватьДляРасхода И НЕ СтрокаРезультата.ИспользоватьДляРасхода Тогда
				
				ЕстьПотеряДанных = Ложь;
				
				Если СтрокаВидаАналитики.РедактироватьВШапке Тогда
					// Если аналитика используется для дохода, то она совсем не исчезнет
					Если ЗначениеЗаполнено(Форма[СтрокаВидаАналитики.ИДАналитики]) И НЕ СтрокаВидаАналитики.ИспользоватьДляДохода Тогда
						ЕстьПотеряДанных = Истина;
					КонецЕсли;
					
				Иначе
					
					Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
						
						Если НЕ ТабличнаяЧасть.ЭтоРасход ИЛИ НЕ ЗначениеЗаполнено(Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти]) ИЛИ ЕстьПотеряДанных Тогда
							Продолжить;
						КонецЕсли;
						
						ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
						
						Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
							Если ЗначениеЗаполнено(СтрокаТабЧасти[ИмяКолонки]) Тогда
								ЕстьПотеряДанных = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Если ЕстьПотеряДанных Тогда
					СтрУдаленныеАналитикиСПотерей = СтрУдаленныеАналитикиСПотерей + Символы.Таб + "- " + СтрокаВидаАналитики.НаименованиеАналитики + Символы.ПС;
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат НЕ ПустаяСтрока(СтрПеремещенныеАналитикиСПотерей) ИЛИ НЕ ПустаяСтрока(СтрУдаленныеАналитикиСПотерей); 
	
КонецФункции

Процедура ИзменитьНастройкиКолонокАналитикиВопросЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПрименитьНастройкиКолонокАналитики(ДополнительныеПараметры.ФормаОперации, ДополнительныеПараметры.Результат);
	КонецЕсли; 

КонецПроцедуры
 

// Проверяет, не будут ли потеряны данные, если перенести аналитику в шапку
//
Функция МожноПеренестиАналитикуВШапкуБезПотерь(Форма, СтрокаВидаАналитики)
	
	ПервоеЗначение = Неопределено;
	ЕстьПотеряДанных = Ложь;
	Для каждого ТабличнаяЧасть Из Форма.РеквизитыДокумента Цикл
		
		Если НЕ ЗначениеЗаполнено(Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти]) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКолонки = ТабличнаяЧасть.ИмяТабличнойЧасти + СтрокаВидаАналитики.ИДАналитики;
		
		ВТаблицеОдинаковыеЗначения = Истина;
		ИзменилосьИспользованиеАналитики = Ложь;
		Если ПервоеЗначение = Неопределено Тогда
			ПервоеЗначение = Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти][0][ИмяКолонки];
		КонецЕсли;
		
		Для каждого СтрокаТабЧасти Из Форма.Объект[ТабличнаяЧасть.ИмяТабличнойЧасти] Цикл
			
			ТипСтатьи = ТипЗнч(СтрокаТабЧасти[ТабличнаяЧасть.ИмяРеквизитаСтатьи]);
			Если ТипСтатьи <> Тип("СправочникСсылка.СтатьиРасходов") И ТипСтатьи <> Тип("СправочникСсылка.СтатьиДоходов") Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаТабЧасти[ИмяКолонки] <> ПервоеЗначение Тогда
				// В таблице неодинаковые значения.
				// Возможно раньше у аналитики была расширенная настройка, поэтому не все строки заполнены.
				ВТаблицеОдинаковыеЗначения = Ложь;
				Если ТабличнаяЧасть.ЭтоДоход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
					ИЛИ ТабличнаяЧасть.ЭтоРасход И НЕ СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода Тогда
					ЕстьПотеряДанных = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			// Если при создании документа аналитика редактировалась в шапке, 
			// значит в строках могут быть только два значения: пустое и любое другое, но одно.
			// Потеря может произойти, если изменилось использование аналитики для статьи.
			// Старое использование мы можем определить по заполненности, новое - по расширенным настройкам.
			Если (ТабличнаяЧасть.ЭтоДоход И СтрокаВидаАналитики.РасширенныеНастройкиДляДохода
				ИЛИ ТабличнаяЧасть.ЭтоРасход И СтрокаВидаАналитики.РасширенныеНастройкиДляРасхода)
				И НЕ ВТаблицеОдинаковыеЗначения Тогда
				Если СтрокаТабЧасти[ИмяКолонки + "_Заполнено"] <> СтрокаТабЧасти[ИмяКолонки + "_Использовать"] Тогда
					ИзменилосьИспользованиеАналитики = Истина;
					ЕстьПотеряДанных = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;

	Возврат НЕ ЕстьПотеряДанных;

КонецФункции


#КонецОбласти

