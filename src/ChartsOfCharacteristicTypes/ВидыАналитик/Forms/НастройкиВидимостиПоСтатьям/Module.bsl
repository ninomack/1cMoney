////////////////////////////////////////////////////////////////////////////////
// Параметры формы
//	ВидАналитики - Элемент вида аналитики, для которого выполняются настройки
//  ЭтоРасход    - Булево - если Истина, настройки выполняются для статей расходов, иначе - для статей доходов
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка условного оформления для форм списков:
	РаботаСФормамиСправочников.УстановитьУсловноеОформлениеФормыСписка(ЭтотОбъект, "ДеревоНастроек", Истина, , ,Ложь);
	
	ВидАналитики = Параметры.ВидАналитики;
	ЭтоРасход = Параметры.ЭтоРасход;
	
	Если ЗначениеЗаполнено(ВидАналитики) Тогда
		//ЗаблокироватьДанныеДляРедактирования(ВидАналитики,, УникальныйИдентификатор);
	Иначе
		ВызватьИсключение НСтр("ru = 'Пустые параметры формы.'");
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'Видимость аналитики по статьям '") + ?(ЭтоРасход, НСтр("ru = 'расходов'"), НСтр("ru = 'доходов'"));
	
	Элементы.ДеревоНастроекИзменить.ТолькоВоВсехДействиях = Истина;
	Элементы.ДеревоНастроекГруппаНастройкиЗаполненияВОперациях.Заголовок = НСтр("ru = 'Видимость аналитики по статьям '") + ?(ЭтоРасход, НСтр("ru = 'расходов'"), НСтр("ru = 'доходов'"));
	
	ПрочитатьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидАналитикиПриИзменении(Элемент)
	
	ПрочитатьНастройкиНаСервере();
	
	Элементы.ДеревоНастроек.Развернуть(ИдентификаторКорневойСтрокиДереваНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидАналитикиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Модифицированность И ЗначениеЗаполнено(ВидАналитики) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ВидАналитикиНачалоВыбораЗавершение", ЭтотОбъект, ДанныеВыбора);
		ТекстВопроса = НСтр("ru = 'Сделанные изменения будут потеряны.
			           			  |Продолжить?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , Заголовок);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВидАналитикиОчистка(Элемент, СтандартнаяОбработка)
	
	Если Модифицированность И ЗначениеЗаполнено(ВидАналитики) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ВидАналитикиОчисткаЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Сделанные изменения будут потеряны.
			           			  |Продолжить?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , Заголовок);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьВШапкеПриИзменении(Элемент)
	
	ЗаблокироватьДанные();
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДеревоНастроек

&НаКлиенте
Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ДеревоНастроекСтатья И ВыбраннаяСтрока <> ИдентификаторКорневойСтрокиДереваНастроек Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ЭтоРасход Тогда
			ОткрытьФорму("Справочник.СтатьиРасходов.ФормаОбъекта", Новый Структура("Ключ", Элементы.ДеревоНастроек.ТекущиеДанные.Статья), ЭтаФорма);
		Иначе
			ОткрытьФорму("Справочник.СтатьиДоходов.ФормаОбъекта", Новый Структура("Ключ", Элементы.ДеревоНастроек.ТекущиеДанные.Статья), ЭтаФорма);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПриАктивизацииЯчейки(Элемент)
	
	ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	ТекущаяКолонка = Элементы.ДеревоНастроек.ТекущийЭлемент;
	
	ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи = ?(ТекущиеДанные = Неопределено, Ложь, 
		ТекущиеДанные.ЭтоУзел ИЛИ Элементы.ДеревоНастроек.ВыделенныеСтроки.Количество() > 1);
	
	ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи = ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи
		И (ТекущаяКолонка = Элементы.ДеревоНастроекИспользовать 
			ИЛИ ТекущаяКолонка = Элементы.ДеревоНастроекЗначениеПоУмолчанию);
			
	Если Элементы.ДеревоНастроекСкопироватьНастройкиНаПодстатьи.Доступность <> ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи Тогда
		Элементы.ДеревоНастроекСкопироватьНастройкиНаПодстатьи.Доступность = ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи;
		Элементы.ДеревоНастроекКонтекстноеМенюСкопироватьНастройкиНаПодстатьи.Доступность = ДоступностьКнопкиСкопироватьНастройкиНаПодстатьи;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	
	ЗаблокироватьДанные();
	Отказ = НЕ ДанныеЗаблокированы;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекИспользоватьПриИзменении(Элемент)
	
	ВыделенныеСтроки = Элементы.ДеревоНастроек.ВыделенныеСтроки;
	
	ПрименятьДляПодчиненных = Ложь;
	//Если ВыделенныеСтроки.Количество() > 1 Тогда
	//	Если Вопрос(НСтр("ru = 'Применить для выделенных и подчиненных им статей?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет) <> КодВозвратаДиалога.Да Тогда
	//		Возврат;
	//	КонецЕсли;
	//	ПрименятьДляПодчиненных = Истина;
	//Иначе
	//	ПрименятьДляПодчиненных = ВопросПрименитьДляПодчиненных();
	//КонецЕсли;
	
	СтрокаИсточник = Элементы.ДеревоНастроек.ТекущиеДанные;
	Для каждого ИДСтрокиДерева Из ВыделенныеСтроки Цикл
		СтрокаПриемник = ДеревоНастроек.НайтиПоИдентификатору(ИДСтрокиДерева);
		СкопироватьНастройкиНаПодчиненнуюСтроку(СтрокаИсточник, СтрокаПриемник, "Использовать", ПрименятьДляПодчиненных);
	КонецЦикла;
	
	Если Элементы.ДеревоНастроек.ТекущаяСтрока <> ИдентификаторКорневойСтрокиДереваНастроек Тогда
		КорневаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторКорневойСтрокиДереваНастроек);
		КорневаяСтрока.Использовать = АналитикаИспользуетсяДляВсехСтатей();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекЗначениеПоУмолчаниюПриИзменении(Элемент)
	
	КорневаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторКорневойСтрокиДереваНастроек);
	Если Элементы.ДеревоНастроек.ТекущаяСтрока = ИдентификаторКорневойСтрокиДереваНастроек Тогда
		ОсновноеЗначение = КорневаяСтрока.ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ВыделенныеСтроки = Элементы.ДеревоНастроек.ВыделенныеСтроки;
	
	ПрименятьДляПодчиненных = Ложь;
	//Если ВыделенныеСтроки.Количество() > 1 Тогда
	//	Если Вопрос(НСтр("ru = 'Применить для выделенных и подчиненных им статей?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет) <> КодВозвратаДиалога.Да Тогда
	//		Возврат;
	//	КонецЕсли;
	//	ПрименятьДляПодчиненных = Истина;
	//Иначе
	//	ПрименятьДляПодчиненных = ВопросПрименитьДляПодчиненных();
	//КонецЕсли;
	
	СтрокаИсточник = Элементы.ДеревоНастроек.ТекущиеДанные;
	Для каждого ИДСтрокиДерева Из ВыделенныеСтроки Цикл
		СтрокаПриемник = ДеревоНастроек.НайтиПоИдентификатору(ИДСтрокиДерева);
		СкопироватьНастройкиНаПодчиненнуюСтроку(СтрокаИсточник, СтрокаПриемник, "ЗначениеПоУмолчанию", ПрименятьДляПодчиненных);
	КонецЦикла;
	
	Если Элементы.ДеревоНастроек.ТекущаяСтрока <> ИдентификаторКорневойСтрокиДереваНастроек Тогда
		КорневаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторКорневойСтрокиДереваНастроек);
		КорневаяСтрока.Использовать = АналитикаИспользуетсяДляВсехСтатей();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНастройкиНаСервере();
	Оповестить("Записан вид характеристик", Новый Структура("ИмяПланаВидовХарактеристик,Ссылка,ВладелецФормы", "ВидыАналитик", ВидАналитики, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройки(Команда)
	
	ЗаписатьНастройкиНаСервере();
	Оповестить("Записан вид характеристик", Новый Структура("ИмяПланаВидовХарактеристик,Ссылка,ВладелецФормы", "ВидыАналитик", ВидАналитики, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	
	ПрочитатьНастройкиНаСервере();
	
	Элементы.ДеревоНастроек.Развернуть(ИдентификаторКорневойСтрокиДереваНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура Перечитать(Команда)
	
	ПрочитатьНастройкиНаСервере();
	
	Элементы.ДеревоНастроек.Развернуть(ИдентификаторКорневойСтрокиДереваНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Элементы.ДеревоНастроек.Развернуть(ИдентификаторКорневойСтрокиДереваНастроек, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	// Свернем построчно первый уровень
	Для каждого СтрокаДерева Из ДеревоНастроек.ПолучитьЭлементы()[0].ПолучитьЭлементы() Цикл
		Элементы.ДеревоНастроек.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиНаПодстатьи(Команда)
	
	СтрокаИсточник = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если СтрокаИсточник = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СтрокаИсточник.ЭтоУзел И Элементы.ДеревоНастроек.ВыделенныеСтроки.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ДеревоНастроек.ТекущийЭлемент = Элементы.ДеревоНастроекИспользовать Тогда
		ИмяТекущейКолонки = "Использовать";
		ТекстВопроса = НСтр("ru = '%1 флажок ""Показывать"" у подстатей выделенной статьи?'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, 
						?(СтрокаИсточник.Использовать, НСтр("ru = 'Установить'"), НСтр("ru = 'Снять'")));
		
	ИначеЕсли Элементы.ДеревоНастроек.ТекущийЭлемент = Элементы.ДеревоНастроекЗначениеПоУмолчанию Тогда
		ИмяТекущейКолонки = "ЗначениеПоУмолчанию";
		Если ЗначениеЗаполнено(СтрокаИсточник.ЗначениеПоУмолчанию) Тогда
			ТекстВопроса = НСтр("ru = 'Установить ""Значение по умолчанию: %1"" для подстатей выделенной статьи?'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, СтрокаИсточник.ЗначениеПоУмолчанию);
		Иначе
			ТекстВопроса = НСтр("ru = 'Очистить колонку ""Значение по умолчанию"" для подстатей выделенной статьи?'");
		КонецЕсли;
		
	Иначе
		Возврат;
		
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("СтрокаИсточник, ИмяТекущейКолонки", СтрокаИсточник, ИмяТекущейКолонки);
	ОбработчикОтвета = Новый ОписаниеОповещения("СкопироватьНастройкиНаПодстатьиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьНастройкиНаСервере()
	
	Если ЗначениеЗаполнено(ВидАналитики) Тогда
		
		Если ЭтоРасход Тогда
			ОсновноеЗначение      = ВидАналитики.ЗначениеАналитикиРасхода;
			РедактироватьВШапке   = ВидАналитики.РедактироватьВШапкеДляРасхода;
		Иначе
			ОсновноеЗначение      = ВидАналитики.ЗначениеАналитикиДохода;
			РедактироватьВШапке   = ВидАналитики.РедактироватьВШапкеДляДохода;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьДеревоСтатей();
	
	Модифицированность = Ложь;
	
	РазблокироватьДанныеДляРедактирования(ВидАналитики, УникальныйИдентификатор);
	ДанныеЗаблокированы = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоСтатей()

	ДеревоНастроек.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидАналитики", ВидАналитики);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Статьи.Ссылка КАК Статья,
	|	Статьи.Активность КАК СтатьяАктивность,
	|	Статьи.ПометкаУдаления КАК СтатьяПометкаУдаления,
	|	ВЫБОР
	|		КОГДА Статьи.ПометкаУдаления
	|			ТОГДА 4
	|		КОГДА Статьи.Предопределенный
	|			ТОГДА 5
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ИндексКартинки,
	|	ВЫБОР
	|		КОГДА НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Использовать,
	|	НастройкиАналитикиПоСтатьям.ЗначениеПоУмолчанию
	|ИЗ
	|	Справочник.СтатьиРасходов КАК Статьи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиАналитикиПоСтатьям КАК НастройкиАналитикиПоСтатьям
	|		ПО (НастройкиАналитикиПоСтатьям.Статья = Статьи.Ссылка)
	|			И (НастройкиАналитикиПоСтатьям.ВидАналитики = &ВидАналитики)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статьи.Наименование
	|ИТОГИ ПО
	|	ОБЩИЕ,
	|	Статья ИЕРАРХИЯ";
	Если НЕ ЭтоРасход Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.СтатьиРасходов", "Справочник.СтатьиДоходов");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗаполнитьУзелДереваСтатей(Выборка, ДеревоНастроек.ПолучитьЭлементы());
	
	ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторКорневойСтрокиДереваНастроек).Использовать = АналитикаИспользуетсяДляВсехСтатей();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУзелДереваСтатей(Выборка, СтрокиДерева, ВыборкаРодитель = Неопределено, СтрокаРодитель = Неопределено)
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			// Создадим и заполним корневой узел
			Строка = СтрокиДерева.Добавить();
			Строка.ЭтоУзел = Истина;
			Строка.Статья = ?(ЭтоРасход, Справочники.СтатьиРасходов.ПустаяСсылка(), Справочники.СтатьиДоходов.ПустаяСсылка());
			Строка.СтатьяАктивность = Истина;
			Строка.СтатьяПометкаУдаления = Ложь;
			Строка.ИндексКартинки = 3;
			Строка.Использовать = Истина;
			Строка.ЗначениеПоУмолчанию = ОсновноеЗначение;
			
			ИдентификаторКорневойСтрокиДереваНастроек = Строка.ПолучитьИдентификатор();
			
			ЗаполнитьУзелДереваСтатей(Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Статья"), Строка.ПолучитьЭлементы(), Выборка, Строка);
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			// Создадим и частично заполним узел
			Строка = СтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, Выборка);
			Строка.ЭтоУзел = Истина;
			
			ЗаполнитьУзелДереваСтатей(Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Статья"), Строка.ПолучитьЭлементы(), Выборка, Строка);
		
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			ДетальныеЗаписи = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "");
			ДетальныеЗаписи.Следующий();
			
			Если ВыборкаРодитель <> Неопределено И Выборка.Статья = ВыборкаРодитель.Статья Тогда
				// Дозаполним родительский узел
				ЗаполнитьЗначенияСвойств(СтрокаРодитель, ДетальныеЗаписи);
			Иначе
				// Создадим и заполним обычную строку
				Строка = СтрокиДерева.Добавить();
				ЗаполнитьЗначенияСвойств(Строка, ДетальныеЗаписи);
				Строка.ЭтоУзел = Ложь;
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиНаСервере()
	
	Если ЗначениеЗаполнено(ВидАналитики) Тогда
		
		ЗаблокироватьДанныеДляРедактирования(ВидАналитики, ВидАналитики.ВерсияДанных, УникальныйИдентификатор);
		
		НачатьТранзакцию();
		
		// Запись данных элемента аналитики
		ВидАналитикиОбъект = ВидАналитики.ПолучитьОбъект();
		
		Если ЭтоРасход Тогда
			ВидАналитикиОбъект.ЗначениеАналитикиРасхода        = ОсновноеЗначение;
			ВидАналитикиОбъект.РедактироватьВШапкеДляРасхода   = РедактироватьВШапке;
		Иначе
			ВидАналитикиОбъект.ЗначениеАналитикиДохода         = ОсновноеЗначение;
			ВидАналитикиОбъект.РедактироватьВШапкеДляДохода    = РедактироватьВШапке;
		КонецЕсли;
		
		ВидАналитикиОбъект.Записать();
		
		// Прочитаем записи регистра
		НаборЗаписей = РегистрыСведений.НастройкиАналитикиПоСтатьям.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВидАналитики.Установить(ВидАналитики);
		НаборЗаписей.Прочитать();
		
		// Удалим статьи только текущего типа
		ТекущийТипСтатей = ?(ЭтоРасход, Тип("СправочникСсылка.СтатьиРасходов"), Тип("СправочникСсылка.СтатьиДоходов"));
		МассивЗаписейДляУдаления = Новый Массив;
		Для каждого Запись Из НаборЗаписей Цикл
			Если ТипЗнч(Запись.Статья) = ТекущийТипСтатей Тогда
				МассивЗаписейДляУдаления.Добавить(Запись);
			КонецЕсли;
		КонецЦикла;
		Для каждого Запись Из МассивЗаписейДляУдаления Цикл
			НаборЗаписей.Удалить(Запись);
		КонецЦикла;
		
		// Запись в регистр
		ДобавитьЗаписиВНаборПоДеревуНастроек(НаборЗаписей, ДеревоНастроек.ПолучитьЭлементы()[0].ПолучитьЭлементы(), ВидАналитики);
		
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
		РазблокироватьДанныеДляРедактирования(ВидАналитики, УникальныйИдентификатор);
		
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьЗаписиВНаборПоДеревуНастроек(НаборЗаписей, ДеревоНастроекДанныеФормыКоллекция, ВидАналитики)

	Для каждого СтрокаДерева Из ДеревоНастроекДанныеФормыКоллекция Цикл
		
		Если СтрокаДерева.Использовать Тогда
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаДерева, "Статья, Использовать, ЗначениеПоУмолчанию");
			Запись.ВидАналитики = ВидАналитики;
		КонецЕсли;
		
		ПодчиненнаяКоллекция = СтрокаДерева.ПолучитьЭлементы();
		Если ПодчиненнаяКоллекция.Количество() <> 0 Тогда
			ДобавитьЗаписиВНаборПоДеревуНастроек(НаборЗаписей, ПодчиненнаяКоллекция, ВидАналитики);
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция АналитикаИспользуетсяДляВсехСтатей()

	Возврат РеквизитФормыВЗначение("ДеревоНастроек").Строки[0].Строки.Найти(Ложь, "Использовать", Истина) = Неопределено;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СкопироватьНастройкиНаПодчиненнуюСтроку(СтрокаИсточник, СтрокаПриемник, ИмяТекущейКолонки, ЗаполнятьПодчиненныеЭлементы = Ложь)

	// Установим значение в текущей строке
	Если ИмяТекущейКолонки = "Использовать" Тогда
		СтрокаПриемник.Использовать = СтрокаИсточник.Использовать;
		
		// Если установили флаг использования, заполним непустые значения по умолчанию по родителю
		СтрокаРодитель = СтрокаПриемник.ПолучитьРодителя();
		Если СтрокаИсточник.Использовать = Истина И НЕ ЗначениеЗаполнено(СтрокаПриемник.ЗначениеПоУмолчанию) И СтрокаРодитель <> Неопределено Тогда
			СтрокаПриемник.ЗначениеПоУмолчанию = СтрокаРодитель.ЗначениеПоУмолчанию;
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейКолонки = "ЗначениеПоУмолчанию" Тогда
		СтрокаПриемник.ЗначениеПоУмолчанию = СтрокаИсточник.ЗначениеПоУмолчанию;
		
		// Если заполнили значение по умолчанию, установим флаг использования
		Если ЗначениеЗаполнено(СтрокаПриемник.ЗначениеПоУмолчанию) Тогда
			СтрокаПриемник.Использовать = Истина;
		КонецЕсли;
		
	Иначе
		// Просто копируем все настройки
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник, "Использовать, ЗначениеПоУмолчанию");
	
	КонецЕсли;
	
	// Установим значение в подчиненных строках
	Если ЗаполнятьПодчиненныеЭлементы Тогда
		Для каждого СтрокаДерева Из СтрокаПриемник.ПолучитьЭлементы() Цикл
			СкопироватьНастройкиНаПодчиненнуюСтроку(СтрокаИсточник, СтрокаДерева, ИмяТекущейКолонки, ЗаполнятьПодчиненныеЭлементы)
		КонецЦикла; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьДанные()

	Если НЕ ДанныеЗаблокированы Тогда
		
		ОписаниеОшибки = ЗаблокироватьДанныеНаСервере();
		Если НЕ ПустаяСтрока(ОписаниеОшибки) Тогда
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаблокироватьДанныеНаСервере()

	Попытка
		ЗаблокироватьДанныеДляРедактирования(ВидАналитики, ВидАналитики.ВерсияДанных, УникальныйИдентификатор);
		ДанныеЗаблокированы = Истина;
		Возврат "";
	Исключение
		ПрочитатьНастройкиНаСервере();
		Возврат ИнформацияОбОшибке().Причина.Описание;
	КонецПопытки;

КонецФункции

&НаКлиенте
Процедура ВидАналитикиОчисткаЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ВидАналитики = Неопределено;
		Модифицированность = Истина;
		ПрочитатьНастройкиНаСервере();
		Элементы.ДеревоНастроек.Развернуть(ИдентификаторКорневойСтрокиДереваНастроек);
		
	КонецЕсли;

КонецПроцедуры
 
&НаКлиенте
Процедура ВидАналитикиНачалоВыбораЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ВидАналитики = ДополнительныеПараметры;
		Модифицированность = Истина;
		ПрочитатьНастройкиНаСервере();
		Элементы.ДеревоНастроек.Развернуть(ИдентификаторКорневойСтрокиДереваНастроек);
		
	КонецЕсли;

КонецПроцедуры
 
&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт

	ЗаписатьНастройкиНаСервере();
	Модифицированность = Ложь;
	Оповестить("Записан вид характеристик", Новый Структура("ИмяПланаВидовХарактеристик,Ссылка,ВладелецФормы", "ВидыАналитик", ВидАналитики, ?(ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения"), ВладелецФормы.УникальныйИдентификатор, Неопределено)));
	Закрыть();

КонецПроцедуры
 
&НаКлиенте
Процедура СкопироватьНастройкиНаПодстатьиЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		
		ВыделенныеСтроки = Элементы.ДеревоНастроек.ВыделенныеСтроки;
		Для каждого ИДСтрокиДерева Из ВыделенныеСтроки Цикл
			СтрокаПриемник = ДеревоНастроек.НайтиПоИдентификатору(ИДСтрокиДерева);
			СкопироватьНастройкиНаПодчиненнуюСтроку(ДополнительныеПараметры.СтрокаИсточник, СтрокаПриемник, ДополнительныеПараметры.ИмяТекущейКолонки, Истина);
		КонецЦикла;
		
		КорневаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторКорневойСтрокиДереваНастроек);
		КорневаяСтрока.Использовать = АналитикаИспользуетсяДляВсехСтатей();
		
	КонецЕсли;

КонецПроцедуры
 

#КонецОбласти

